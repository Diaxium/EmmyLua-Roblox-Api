-->> [[ ꧁༒☬𝓒𝓻𝓮𝓪𝓽𝓸𝓻: 𝓓𝓲𝓪𝔁𝓲𝓾𝓶☬༒꧂ ]] <<--
-->> [[ ꧁༒☬𝓢𝓾𝓲𝓽.𝓥𝓮𝓻𝓼𝓲𝓸𝓷: 𝓑𝓣3.0.2☬༒꧂ ]] <<--

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-->> [[ ꧁༒☬𝕯𝖊𝖕𝖊𝖓𝖉𝖊𝖓𝖈𝖎𝖊𝖘☬༒꧂ ]] <<--

--{{{ 𝓓𝓸𝓬𝓾𝓶𝓮𝓷𝓽𝓪𝓽𝓲𝓸𝓷:

--{{{ Instance
--- @class Instance  : userdata
--- @field Archivable boolean
--- @field ClassName string
--- @field DataCost number
--- @field Name string
--- @field Parent Instance
--- @field RobloxLocked boolean
--- @field SourceAssetId number
--- @field archivable boolean
--- @field className string
--- @field ClearAllChildren fun( self : Instance ) : void
--- @field Clone fun( self : Instance ) : Instance
--- @field Destroy fun( self : Instance ) : void
--- @field FindFirstAncestor fun( self : Instance, name : string ) : Instance
--- @field FindFirstAncestorOfClass fun( self : Instance, className : string ) : Instance
--- @field FindFirstAncestorWhichIsA fun( self : Instance, className : string ) : Instance
--- @field FindFirstChild fun( self : Instance, name : string, recursive : boolean ) : Instance
--- @field FindFirstChildOfClass fun( self : Instance, className : string ) : Instance
--- @field FindFirstChildWhichIsA fun( self : Instance, className : string, recursive : boolean ) : Instance
--- @field FindFirstDescendant fun( self : Instance, name : string ) : Instance
--- @field GetActor fun( self : Instance ) : Actor
--- @field GetAttribute fun( self : Instance, attribute : string ) : Variant
--- @field GetAttributeChangedSignal fun( self : Instance, attribute : string ) : RBXScriptSignal
--- @field GetAttributes fun( self : Instance ) : Dictionary
--- @field GetChildren fun( self : Instance ) : Objects
--- @field GetDebugId fun( self : Instance, scopeLength : number ) : string
--- @field GetDescendants fun( self : Instance ) : Array
--- @field GetFullName fun( self : Instance ) : string
--- @field GetPropertyChangedSignal fun( self : Instance, property : string ) : RBXScriptSignal
--- @field IsA fun( self : Instance, className : string ) : boolean
--- @field IsAncestorOf fun( self : Instance, descendant : Instance ) : boolean
--- @field IsDescendantOf fun( self : Instance, ancestor : Instance ) : boolean
--- @field Remove fun( self : Instance ) : void
--- @field SetAttribute fun( self : Instance, attribute : string, value : Variant ) : void
--- @field WaitForChild fun( self : Instance, childName : string, timeOut : number ) : Instance
--- @field children fun( self : Instance ) : Objects
--- @field clone fun( self : Instance ) : Instance
--- @field destroy fun( self : Instance ) : void
--- @field findFirstChild fun( self : Instance, name : string, recursive : boolean ) : Instance
--- @field getChildren fun( self : Instance ) : Objects
--- @field isA fun( self : Instance, className : string ) : boolean
--- @field isDescendantOf fun( self : Instance, ancestor : Instance ) : boolean
--- @field remove fun( self : Instance ) : void
--- @field AncestryChanged RBXScriptSignal @function( self : Instance, child : Instance, parent : Instance )
--- @field AttributeChanged RBXScriptSignal @function( self : Instance, attribute : string )
--- @field Changed RBXScriptSignal @function( self : Instance, property : string )
--- @field ChildAdded RBXScriptSignal @function( self : Instance, child : Instance )
--- @field ChildRemoved RBXScriptSignal @function( self : Instance, child : Instance )
--- @field DescendantAdded RBXScriptSignal @function( self : Instance, descendant : Instance )
--- @field DescendantRemoving RBXScriptSignal @function( self : Instance, descendant : Instance )
--- @field Destroying RBXScriptSignal @function( self : Instance )
--- @field childAdded RBXScriptSignal @function( self : Instance, child : Instance )
--}}} End of Instance;

--{{{ Accoutrement
--- @class Accoutrement : Instance
--- @field AttachmentForward Vector3
--- @field AttachmentPoint CFrame
--- @field AttachmentPos Vector3
--- @field AttachmentRight Vector3
--- @field AttachmentUp Vector3
--}}} End of Accoutrement;

--{{{ Accessory
--- @class Accessory : Accoutrement
--- @field AccessoryType Enum.AccessoryType
--}}} End of Accessory;

--{{{ AdService
--- @class AdService : Instance
--- @field ShowVideoAd fun( self : AdService ) : void
--- @field VideoAdClosed RBXScriptSignal @function( self : AdService, adShown : boolean )
--}}} End of AdService;

--{{{ AdvancedDragger
--- @class AdvancedDragger : Instance
--}}} End of AdvancedDragger;

--{{{ AnalyticsService
--- @class AnalyticsService : Instance
--- @field ApiKey string
--- @field FireCustomEvent fun( self : AnalyticsService, player : Instance, eventCategory : string, customData : Variant ) : void
--- @field FireEvent fun( self : AnalyticsService, category : string, value : Variant ) : void
--- @field FireInGameEconomyEvent fun( self : AnalyticsService, player : Instance, itemName : string, economyAction : Enum.AnalyticsEconomyAction, itemCategory : string, amount : number, currency : string, location : Variant, customData : Variant ) : void
--- @field FireLogEvent fun( self : AnalyticsService, player : Instance, logLevel : Enum.AnalyticsLogLevel, message : string, debugInfo : Variant, customData : Variant ) : void
--- @field FirePlayerProgressionEvent fun( self : AnalyticsService, player : Instance, category : string, progressionStatus : Enum.AnalyticsProgressionStatus, location : Variant, statistics : Variant, customData : Variant ) : void
--}}} End of AnalyticsService;

--{{{ Animation
--- @class Animation : Instance
--- @field AnimationId Content
--}}} End of Animation;

--{{{ AnimationClip
--- @class AnimationClip : Instance
--- @field Loop boolean
--- @field Priority Enum.AnimationPriority
--}}} End of AnimationClip;

--{{{ CurveAnimation
--- @class CurveAnimation : AnimationClip
--}}} End of CurveAnimation;

--{{{ KeyframeSequence
--- @class KeyframeSequence : AnimationClip
--- @field AuthoredHipHeight number
--- @field AddKeyframe fun( self : KeyframeSequence, keyframe : Instance ) : void
--- @field GetKeyframes fun( self : KeyframeSequence ) : Objects
--- @field RemoveKeyframe fun( self : KeyframeSequence, keyframe : Instance ) : void
--}}} End of KeyframeSequence;

--{{{ AnimationClipProvider
--- @class AnimationClipProvider : Instance
--- @field GetAnimationClip fun( self : AnimationClipProvider, assetId : Content ) : AnimationClip
--- @field GetAnimationClipById fun( self : AnimationClipProvider, assetId : number, useCache : boolean ) : AnimationClip
--- @field GetMemStats fun( self : AnimationClipProvider ) : Dictionary
--- @field RegisterActiveAnimationClip fun( self : AnimationClipProvider, animationClip : AnimationClip ) : Content
--- @field RegisterAnimationClip fun( self : AnimationClipProvider, animationClip : AnimationClip ) : Content
--- @field GetAnimationClipAsync fun( self : AnimationClipProvider, assetId : Content ) : AnimationClip
--- @field GetAnimations fun( self : AnimationClipProvider, userId : number ) : Instance
--}}} End of AnimationClipProvider;

--{{{ AnimationController
--- @class AnimationController : Instance
--- @field GetPlayingAnimationTracks fun( self : AnimationController ) : Array
--- @field LoadAnimation fun( self : AnimationController, animation : Animation ) : AnimationTrack
--- @field AnimationPlayed RBXScriptSignal @function( self : AnimationController, animationTrack : AnimationTrack )
--}}} End of AnimationController;

--{{{ AnimationFromVideoCreatorService
--- @class AnimationFromVideoCreatorService : Instance
--- @field CreateJob fun( self : AnimationFromVideoCreatorService, filePath : string ) : string
--- @field DownloadJobResult fun( self : AnimationFromVideoCreatorService, jobId : string, outputFilePath : string ) : string
--- @field FullProcess fun( self : AnimationFromVideoCreatorService, videoFilePath : string, progressCallback : Function ) : string
--- @field GetJobStatus fun( self : AnimationFromVideoCreatorService, jobId : string ) : string
--}}} End of AnimationFromVideoCreatorService;

--{{{ AnimationFromVideoCreatorStudioService
--- @class AnimationFromVideoCreatorStudioService : Instance
--- @field IsAgeRestricted fun( self : AnimationFromVideoCreatorStudioService ) : boolean
--- @field CreateAnimationByUploadingVideo fun( self : AnimationFromVideoCreatorStudioService, progressCallback : Function ) : string
--- @field ImportVideoWithPrompt fun( self : AnimationFromVideoCreatorStudioService ) : string
--}}} End of AnimationFromVideoCreatorStudioService;

--{{{ AnimationRigData
--- @class AnimationRigData : Instance
--- @field LoadFromHumanoid fun( self : AnimationRigData, humanoid : Instance ) : boolean
--}}} End of AnimationRigData;

--{{{ AnimationStreamTrack
--- @class AnimationStreamTrack : Instance
--- @field IsPlaying boolean
--- @field Priority Enum.AnimationPriority
--- @field WeightCurrent number
--- @field WeightTarget number
--- @field AdjustWeight fun( self : AnimationStreamTrack, weight : number, fadeTime : number ) : void
--- @field GetTrackerData fun( self : AnimationStreamTrack ) : Tuple
--- @field Play fun( self : AnimationStreamTrack, fadeTime : number, weight : number ) : void
--- @field Stop fun( self : AnimationStreamTrack, fadeTime : number ) : void
--- @field Stopped RBXScriptSignal @function( self : AnimationStreamTrack )
--}}} End of AnimationStreamTrack;

--{{{ AnimationTrack
--- @class AnimationTrack : Instance
--- @field Animation Animation
--- @field IsPlaying boolean
--- @field Length number
--- @field Looped boolean
--- @field Priority Enum.AnimationPriority
--- @field Speed number
--- @field TimePosition number
--- @field WeightCurrent number
--- @field WeightTarget number
--- @field AdjustSpeed fun( self : AnimationTrack, speed : number ) : void
--- @field AdjustWeight fun( self : AnimationTrack, weight : number, fadeTime : number ) : void
--- @field GetMarkerReachedSignal fun( self : AnimationTrack, name : string ) : RBXScriptSignal
--- @field GetTimeOfKeyframe fun( self : AnimationTrack, keyframeName : string ) : number
--- @field Play fun( self : AnimationTrack, fadeTime : number, weight : number, speed : number ) : void
--- @field Stop fun( self : AnimationTrack, fadeTime : number ) : void
--- @field DidLoop RBXScriptSignal @function( self : AnimationTrack )
--- @field KeyframeReached RBXScriptSignal @function( self : AnimationTrack, keyframeName : string )
--- @field Stopped RBXScriptSignal @function( self : AnimationTrack )
--}}} End of AnimationTrack;

--{{{ Animator
--- @class Animator : Instance
--- @field ApplyJointVelocities fun( self : Animator, motors : Variant ) : void
--- @field GetPlayingAnimationTracks fun( self : Animator ) : Array
--- @field GetPlayingAnimationTracksCoreScript fun( self : Animator ) : Array
--- @field LoadAnimation fun( self : Animator, animation : Animation ) : AnimationTrack
--- @field LoadAnimationCoreScript fun( self : Animator, animation : Animation ) : AnimationTrack
--- @field LoadStreamAnimation fun( self : Animator, animation : TrackerStreamAnimation ) : AnimationStreamTrack
--- @field StepAnimations fun( self : Animator, deltaTime : number ) : void
--- @field AnimationPlayed RBXScriptSignal @function( self : Animator, animationTrack : AnimationTrack )
--- @field AnimationPlayedCoreScript RBXScriptSignal @function( self : Animator, animationTrack : AnimationTrack )
--}}} End of Animator;

--{{{ AppUpdateService
--- @class AppUpdateService : Instance
--- @field CheckForUpdate fun( self : AppUpdateService, handler : Function ) : void
--- @field DisableDUAR fun( self : AppUpdateService ) : void
--- @field DisableDUARAndOpenSurvey fun( self : AppUpdateService, surveyUrl : string ) : void
--- @field PerformManagedUpdate fun( self : AppUpdateService ) : boolean
--}}} End of AppUpdateService;

--{{{ AssetCounterService
--- @class AssetCounterService : Instance
--}}} End of AssetCounterService;

--{{{ AssetDeliveryProxy
--- @class AssetDeliveryProxy : Instance
--}}} End of AssetDeliveryProxy;

--{{{ AssetImportService
--- @class AssetImportService : Instance
--- @field PickFileWithPrompt fun( self : AssetImportService ) : string
--- @field StartSessionWithPrompt fun( self : AssetImportService ) : AssetImportSession
--}}} End of AssetImportService;

--{{{ AssetImportSession
--- @class AssetImportSession : Instance
--- @field Cancel fun( self : AssetImportSession ) : void
--- @field GetCurrentImportMap fun( self : AssetImportSession ) : Dictionary
--- @field GetCurrentStatusTable fun( self : AssetImportSession ) : Dictionary
--- @field GetFilename fun( self : AssetImportSession ) : string
--- @field GetInstance fun( self : AssetImportSession, nodeId : number ) : Instance
--- @field GetSettingsRoot fun( self : AssetImportSession ) : Instance
--- @field IsAvatar fun( self : AssetImportSession ) : boolean
--- @field Upload fun( self : AssetImportSession ) : void
--- @field UploadComplete RBXScriptSignal @function( self : AssetImportSession, succeeded : boolean, errorMap : Dictionary )
--- @field UploadProgress RBXScriptSignal @function( self : AssetImportSession, progressRatio : number )
--}}} End of AssetImportSession;

--{{{ AssetManagerService
--- @class AssetManagerService : Instance
--- @field GetMeshIdFromAliasName fun( self : AssetManagerService, aliasName : string ) : number
--- @field GetMeshIdFromAssetId fun( self : AssetManagerService, assetId : number ) : number
--- @field GetTextureIdFromAliasName fun( self : AssetManagerService, aliasName : string ) : number
--- @field GetTextureIdFromAssetId fun( self : AssetManagerService, assetId : number ) : number
--- @field HasUnpublishedChangesForLinkedSource fun( self : AssetManagerService, aliasName : string ) : boolean
--- @field InsertAudio fun( self : AssetManagerService, assetId : number, assetName : string ) : void
--- @field InsertImage fun( self : AssetManagerService, assetId : number ) : void
--- @field InsertLinkedSourceAsLocalScript fun( self : AssetManagerService, aliasName : string ) : void
--- @field InsertLinkedSourceAsModuleScript fun( self : AssetManagerService, aliasName : string ) : void
--- @field InsertLinkedSourceAsScript fun( self : AssetManagerService, aliasName : string ) : void
--- @field InsertMesh fun( self : AssetManagerService, aliasName : string, insertWithLocation : boolean ) : void
--- @field InsertMeshesWithLocation fun( self : AssetManagerService, aliasNames : Array ) : void
--- @field InsertModel fun( self : AssetManagerService, modelId : number ) : void
--- @field InsertPackage fun( self : AssetManagerService, packageId : number ) : void
--- @field InsertVideo fun( self : AssetManagerService, assetId : number, assetName : string ) : void
--- @field OpenLinkedSource fun( self : AssetManagerService, aliasName : string ) : void
--- @field OpenPlace fun( self : AssetManagerService, placeId : number ) : void
--- @field RefreshLinkedSource fun( self : AssetManagerService, aliasName : string ) : void
--- @field RevertLinkedSourceToLastPublishedVersion fun( self : AssetManagerService, aliasName : string ) : void
--- @field ShowPackageDetails fun( self : AssetManagerService, packageId : number ) : void
--- @field UpdateAllPackages fun( self : AssetManagerService, packageId : number ) : void
--- @field ViewPackageOnWebsite fun( self : AssetManagerService, packageId : number ) : void
--- @field AddNewPlace fun( self : AssetManagerService ) : number
--- @field CreateAlias fun( self : AssetManagerService, assetType : number, assetId : number, aliasName : string ) : void
--- @field DeleteAlias fun( self : AssetManagerService, aliasName : string ) : void
--- @field PublishLinkedSource fun( self : AssetManagerService, assetId : number, aliasName : string ) : void
--- @field RemovePlace fun( self : AssetManagerService, placeId : number ) : void
--- @field RenameAlias fun( self : AssetManagerService, assetType : number, assetId : number, oldAliasName : string, newAliasName : string ) : void
--- @field RenameModel fun( self : AssetManagerService, modelId : number, newName : string ) : void
--- @field RenamePlace fun( self : AssetManagerService, placeId : number, newName : string ) : void
--- @field AssetImportedSignal RBXScriptSignal @function( self : AssetManagerService, assetType : Enum.AssetType, assetId : string, assetName : number )
--- @field ImportSessionFinished RBXScriptSignal @function( self : AssetManagerService )
--- @field ImportSessionStarted RBXScriptSignal @function( self : AssetManagerService )
--- @field MayBeLinkedSourceModified RBXScriptSignal @function( self : AssetManagerService, aliasName : string )
--}}} End of AssetManagerService;

--{{{ AssetService
--- @class AssetService : Instance
--- @field GetBundleDetailsSync fun( self : AssetService, bundleId : number ) : Dictionary
--- @field CreatePlaceAsync fun( self : AssetService, placeName : string, templatePlaceID : number, description : string ) : number
--- @field CreatePlaceInPlayerInventoryAsync fun( self : AssetService, player : Instance, placeName : string, templatePlaceID : number, description : string ) : number
--- @field GetAssetIdsForPackage fun( self : AssetService, packageAssetId : number ) : Array
--- @field GetAssetThumbnailAsync fun( self : AssetService, assetId : number, thumbnailSize : Vector2, assetType : number ) : Tuple
--- @field GetBundleDetailsAsync fun( self : AssetService, bundleId : number ) : Dictionary
--- @field GetCreatorAssetID fun( self : AssetService, creationID : number ) : number
--- @field GetGamePlacesAsync fun( self : AssetService ) : Instance
--- @field SavePlaceAsync fun( self : AssetService ) : void
--}}} End of AssetService;

--{{{ Atmosphere
--- @class Atmosphere : Instance
--- @field Color Color3
--- @field Decay Color3
--- @field Density number
--- @field Glare number
--- @field Haze number
--- @field Offset number
--}}} End of Atmosphere;

--{{{ Attachment
--- @class Attachment : Instance
--- @field Axis Vector3
--- @field CFrame CFrame
--- @field Orientation Vector3
--- @field Position Vector3
--- @field Rotation Vector3
--- @field SecondaryAxis Vector3
--- @field Visible boolean
--- @field WorldAxis Vector3
--- @field WorldCFrame CFrame
--- @field WorldOrientation Vector3
--- @field WorldPosition Vector3
--- @field WorldRotation Vector3
--- @field WorldSecondaryAxis Vector3
--- @field GetAxis fun( self : Attachment ) : Vector3
--- @field GetSecondaryAxis fun( self : Attachment ) : Vector3
--- @field SetAxis fun( self : Attachment, axis : Vector3 ) : void
--- @field SetSecondaryAxis fun( self : Attachment, axis : Vector3 ) : void
--}}} End of Attachment;

--{{{ Bone
--- @class Bone : Attachment
--- @field IsCFrameDriven boolean
--- @field Transform CFrame
--- @field TransformedCFrame CFrame
--- @field TransformedWorldCFrame CFrame
--}}} End of Bone;

--{{{ AvatarEditorService
--- @class AvatarEditorService : Instance
--- @field NoPromptCreateOutfit fun( self : AvatarEditorService, humanoidDescription : HumanoidDescription, rigType : Enum.HumanoidRigType, name : string ) : boolean
--- @field NoPromptDeleteOutfit fun( self : AvatarEditorService, outfitId : number ) : boolean
--- @field NoPromptRenameOutfit fun( self : AvatarEditorService, outfitId : number, name : string ) : boolean
--- @field NoPromptSaveAvatar fun( self : AvatarEditorService, humanoidDescription : HumanoidDescription, rigType : Enum.HumanoidRigType, saveDict : Dictionary, gearAssetId : number ) : boolean
--- @field NoPromptSetFavorite fun( self : AvatarEditorService, itemId : number, itemType : Enum.AvatarItemType, shouldFavorite : boolean ) : boolean
--- @field NoPromptUpdateOutfit fun( self : AvatarEditorService, outfitId : number, humanoidDescription : HumanoidDescription, rigType : Enum.HumanoidRigType ) : boolean
--- @field PerformCreateOutfitWithDescription fun( self : AvatarEditorService, humanoidDescription : HumanoidDescription, name : string ) : void
--- @field PerformDeleteOutfit fun( self : AvatarEditorService ) : void
--- @field PerformRenameOutfit fun( self : AvatarEditorService, name : string ) : void
--- @field PerformSaveAvatarWithDescription fun( self : AvatarEditorService, humanoidDescription : HumanoidDescription, addedAssets : Array, removedAssets : Array ) : void
--- @field PerformSetFavorite fun( self : AvatarEditorService ) : void
--- @field PerformUpdateOutfit fun( self : AvatarEditorService, humanoidDescription : HumanoidDescription ) : void
--- @field PromptAllowInventoryReadAccess fun( self : AvatarEditorService ) : void
--- @field PromptCreateOutfit fun( self : AvatarEditorService, outfit : HumanoidDescription, rigType : Enum.HumanoidRigType ) : void
--- @field PromptDeleteOutfit fun( self : AvatarEditorService, outfitId : number ) : void
--- @field PromptRenameOutfit fun( self : AvatarEditorService, outfitId : number ) : void
--- @field PromptSaveAvatar fun( self : AvatarEditorService, humanoidDescription : HumanoidDescription, rigType : Enum.HumanoidRigType ) : void
--- @field PromptSetFavorite fun( self : AvatarEditorService, itemId : number, itemType : Enum.AvatarItemType, shouldFavorite : boolean ) : void
--- @field PromptUpdateOutfit fun( self : AvatarEditorService, outfitId : number, updatedOutfit : HumanoidDescription, rigType : Enum.HumanoidRigType ) : void
--- @field SetAllowInventoryReadAccess fun( self : AvatarEditorService, inventoryReadAccessGranted : boolean ) : void
--- @field SignalCreateOutfitFailed fun( self : AvatarEditorService ) : void
--- @field SignalCreateOutfitPermissionDenied fun( self : AvatarEditorService ) : void
--- @field SignalDeleteOutfitFailed fun( self : AvatarEditorService ) : void
--- @field SignalDeleteOutfitPermissionDenied fun( self : AvatarEditorService ) : void
--- @field SignalRenameOutfitFailed fun( self : AvatarEditorService ) : void
--- @field SignalRenameOutfitPermissionDenied fun( self : AvatarEditorService ) : void
--- @field SignalSaveAvatarFailed fun( self : AvatarEditorService ) : void
--- @field SignalSaveAvatarPermissionDenied fun( self : AvatarEditorService ) : void
--- @field SignalSetFavoriteFailed fun( self : AvatarEditorService ) : void
--- @field SignalSetFavoritePermissionDenied fun( self : AvatarEditorService ) : void
--- @field SignalUpdateOutfitFailed fun( self : AvatarEditorService ) : void
--- @field SignalUpdateOutfitPermissionDenied fun( self : AvatarEditorService ) : void
--- @field CheckApplyDefaultClothing fun( self : AvatarEditorService, humanoidDescription : HumanoidDescription ) : HumanoidDescription
--- @field ConformToAvatarRules fun( self : AvatarEditorService, humanoidDescription : HumanoidDescription ) : HumanoidDescription
--- @field GetAvatarRules fun( self : AvatarEditorService ) : Dictionary
--- @field GetBatchItemDetails fun( self : AvatarEditorService, itemIds : Array, itemType : Enum.AvatarItemType ) : Array
--- @field GetFavorite fun( self : AvatarEditorService, itemId : number, itemType : Enum.AvatarItemType ) : boolean
--- @field GetInventory fun( self : AvatarEditorService, assetTypes : Array ) : InventoryPages
--- @field GetItemDetails fun( self : AvatarEditorService, itemId : number, itemType : Enum.AvatarItemType ) : Dictionary
--- @field GetOutfits fun( self : AvatarEditorService, outfitSource : Enum.OutfitSource, outfitType : Enum.OutfitType ) : OutfitPages
--- @field GetRecommendedAssets fun( self : AvatarEditorService, assetType : Enum.AvatarAssetType, contextAssetId : number ) : Array
--- @field GetRecommendedAssetsV2 fun( self : AvatarEditorService, assetType : Enum.AvatarAssetType, assetId : number, numItems : number, includeDetails : boolean ) : Array
--- @field GetRecommendedBundles fun( self : AvatarEditorService, bundleId : number ) : Array
--- @field GetRecommendedBundlesV2 fun( self : AvatarEditorService, bundleType : Enum.BundleType, bundleId : number, numItems : number, includeDetails : boolean ) : Array
--- @field SearchCatalog fun( self : AvatarEditorService, searchParameters : CatalogSearchParams ) : CatalogPages
--- @field OpenAllowInventoryReadAccess RBXScriptSignal @function( self : AvatarEditorService )
--- @field OpenPromptCreateOufit RBXScriptSignal @function( self : AvatarEditorService, humanoidDescription : HumanoidDescription, rigType : Enum.HumanoidRigType )
--- @field OpenPromptDeleteOutfit RBXScriptSignal @function( self : AvatarEditorService, outfitId : number )
--- @field OpenPromptRenameOutfit RBXScriptSignal @function( self : AvatarEditorService, outfitId : number )
--- @field OpenPromptSaveAvatar RBXScriptSignal @function( self : AvatarEditorService, humanoidDescription : HumanoidDescription, rigType : Enum.HumanoidRigType )
--- @field OpenPromptSetFavorite RBXScriptSignal @function( self : AvatarEditorService, itemId : number, itemType : Enum.AvatarItemType, shouldFavorite : boolean )
--- @field OpenPromptUpdateOutfit RBXScriptSignal @function( self : AvatarEditorService, outfitId : number, humanoidDescription : HumanoidDescription, rigType : Enum.HumanoidRigType )
--- @field PromptAllowInventoryReadAccessCompleted RBXScriptSignal @function( self : AvatarEditorService, result : Enum.AvatarPromptResult )
--- @field PromptCreateOutfitCompleted RBXScriptSignal @function( self : AvatarEditorService, result : Enum.AvatarPromptResult, failureType : Variant )
--- @field PromptDeleteOutfitCompleted RBXScriptSignal @function( self : AvatarEditorService, result : Enum.AvatarPromptResult )
--- @field PromptRenameOutfitCompleted RBXScriptSignal @function( self : AvatarEditorService, result : Enum.AvatarPromptResult )
--- @field PromptSaveAvatarCompleted RBXScriptSignal @function( self : AvatarEditorService, result : Enum.AvatarPromptResult, humanoidDescription : HumanoidDescription )
--- @field PromptSetFavoriteCompleted RBXScriptSignal @function( self : AvatarEditorService, result : Enum.AvatarPromptResult )
--- @field PromptUpdateOutfitCompleted RBXScriptSignal @function( self : AvatarEditorService, result : Enum.AvatarPromptResult )
--}}} End of AvatarEditorService;

--{{{ AvatarImportService
--- @class AvatarImportService : Instance
--- @field ImportFBXAnimationFromFilePathUserMayChooseModel fun( self : AvatarImportService, fbxFilePath : string, selectedRig : Instance, userChooseModelThenImportCB : Function ) : Instance
--- @field ImportFBXAnimationUserMayChooseModel fun( self : AvatarImportService, selectedRig : Instance, userChooseModelThenImportCB : Function ) : Instance
--- @field ImportFbxRigWithoutSceneLoad fun( self : AvatarImportService, isR15 : boolean ) : Instance
--- @field ImportLoadedFBXAnimation fun( self : AvatarImportService, useFBXModel : boolean ) : Instance
--- @field LoadRigAndDetectType fun( self : AvatarImportService, promptR15Callback : Function ) : Instance
--}}} End of AvatarImportService;

--{{{ Backpack
--- @class Backpack : Instance
--}}} End of Backpack;

--{{{ BackpackItem
--- @class BackpackItem : Instance
--- @field TextureId Content
--}}} End of BackpackItem;

--{{{ Tool
--- @class Tool : BackpackItem
--- @field CanBeDropped boolean
--- @field Enabled boolean
--- @field Grip CFrame
--- @field GripForward Vector3
--- @field GripPos Vector3
--- @field GripRight Vector3
--- @field GripUp Vector3
--- @field ManualActivationOnly boolean
--- @field RequiresHandle boolean
--- @field ToolTip string
--- @field Activate fun( self : Tool ) : void
--- @field Deactivate fun( self : Tool ) : void
--- @field Activated RBXScriptSignal @function( self : Tool )
--- @field Deactivated RBXScriptSignal @function( self : Tool )
--- @field Equipped RBXScriptSignal @function( self : Tool, mouse : Mouse )
--- @field Unequipped RBXScriptSignal @function( self : Tool )
--}}} End of Tool;

--{{{ BadgeService
--- @class BadgeService : Instance
--- @field AwardBadge fun( self : BadgeService, userId : number, badgeId : number ) : boolean
--- @field GetBadgeInfoAsync fun( self : BadgeService, badgeId : number ) : Dictionary
--- @field IsDisabled fun( self : BadgeService, badgeId : number ) : boolean
--- @field IsLegal fun( self : BadgeService, badgeId : number ) : boolean
--- @field UserHasBadge fun( self : BadgeService, userId : number, badgeId : number ) : boolean
--- @field UserHasBadgeAsync fun( self : BadgeService, userId : number, badgeId : number ) : boolean
--- @field BadgeAwarded RBXScriptSignal @function( self : BadgeService, message : string, userId : number, badgeId : number )
--- @field OnBadgeAwarded RBXScriptSignal @function( self : BadgeService, userId : number, creatorId : number, badgeId : number )
--}}} End of BadgeService;

--{{{ BasePlayerGui
--- @class BasePlayerGui : Instance
--- @field GetGuiObjectsAtPosition fun( self : BasePlayerGui, x : number, y : number ) : Objects
--- @field GetGuiObjectsInCircle fun( self : BasePlayerGui, position : Vector2, radius : number ) : Objects
--}}} End of BasePlayerGui;

--{{{ CoreGui
--- @class CoreGui : BasePlayerGui
--- @field SelectionImageObject GuiObject
--- @field Version number
--- @field SetUserGuiRendering fun( self : CoreGui, enabled : boolean, guiAdornee : Instance, faceId : Enum.NormalId ) : void
--- @field TakeScreenshot fun( self : CoreGui ) : void
--- @field ToggleRecording fun( self : CoreGui ) : void
--}}} End of CoreGui;

--{{{ PlayerGui
--- @class PlayerGui : BasePlayerGui
--- @field CurrentScreenOrientation Enum.ScreenOrientation
--- @field ScreenOrientation Enum.ScreenOrientation
--- @field SelectionImageObject GuiObject
--- @field GetTopbarTransparency fun( self : PlayerGui ) : number
--- @field SetTopbarTransparency fun( self : PlayerGui, transparency : number ) : void
--- @field TopbarTransparencyChangedSignal RBXScriptSignal @function( self : PlayerGui, transparency : number )
--}}} End of PlayerGui;

--{{{ StarterGui
--- @class StarterGui : BasePlayerGui
--- @field ProcessUserInput boolean
--- @field ResetPlayerGuiOnSpawn boolean
--- @field ScreenOrientation Enum.ScreenOrientation
--- @field ShowDevelopmentGui boolean
--- @field VirtualCursorMode Enum.VirtualCursorMode
--- @field GetCoreGuiEnabled fun( self : StarterGui, coreGuiType : Enum.CoreGuiType ) : boolean
--- @field RegisterGetCore fun( self : StarterGui, parameterName : string, getFunction : Function ) : void
--- @field RegisterSetCore fun( self : StarterGui, parameterName : string, setFunction : Function ) : void
--- @field SetCore fun( self : StarterGui, parameterName : string, value : Variant ) : void
--- @field SetCoreGuiEnabled fun( self : StarterGui, coreGuiType : Enum.CoreGuiType, enabled : boolean ) : void
--- @field GetCore fun( self : StarterGui, parameterName : string ) : Variant
--- @field CoreGuiChangedSignal RBXScriptSignal @function( self : StarterGui, coreGuiType : Enum.CoreGuiType, enabled : boolean )
--}}} End of StarterGui;

--{{{ BaseWrap
--- @class BaseWrap : Instance
--- @field CageMeshId Content
--- @field CageOrigin CFrame
--- @field CageOriginWorld CFrame
--- @field HSRAssetId Content
--- @field ImportOrigin CFrame
--- @field ImportOriginWorld CFrame
--- @field GetFaces fun( self : BaseWrap, cageType : Enum.CageType ) : Array
--- @field GetVertices fun( self : BaseWrap, cageType : Enum.CageType ) : Array
--- @field IsHSRReady fun( self : BaseWrap ) : boolean
--- @field ModifyVertices fun( self : BaseWrap, cageType : Enum.CageType, vertices : Array ) : void
--}}} End of BaseWrap;

--{{{ WrapLayer
--- @class WrapLayer : BaseWrap
--- @field AutoSkin Enum.WrapLayerAutoSkin
--- @field BindOffset CFrame
--- @field Color Color3
--- @field DebugMode Enum.WrapLayerDebugMode
--- @field Enabled boolean
--- @field Order number
--- @field Puffiness number
--- @field ReferenceMeshId Content
--- @field ReferenceOrigin CFrame
--- @field ReferenceOriginWorld CFrame
--- @field ShrinkFactor number
--}}} End of WrapLayer;

--{{{ WrapTarget
--- @class WrapTarget : BaseWrap
--- @field Color Color3
--- @field DebugMode Enum.WrapTargetDebugMode
--- @field Stiffness number
--}}} End of WrapTarget;

--{{{ Beam
--- @class Beam : Instance
--- @field Attachment0 Attachment
--- @field Attachment1 Attachment
--- @field Brightness number
--- @field Color ColorSequence
--- @field CurveSize0 number
--- @field CurveSize1 number
--- @field Enabled boolean
--- @field FaceCamera boolean
--- @field LightEmission number
--- @field LightInfluence number
--- @field Segments number
--- @field Texture Content
--- @field TextureLength number
--- @field TextureMode Enum.TextureMode
--- @field TextureSpeed number
--- @field Transparency NumberSequence
--- @field Width0 number
--- @field Width1 number
--- @field ZOffset number
--- @field SetTextureOffset fun( self : Beam, offset : number ) : void
--}}} End of Beam;

--{{{ BindableEvent
--- @class BindableEvent : Instance
--- @field Fire fun( self : BindableEvent, arguments : Tuple ) : void
--- @field Event RBXScriptSignal @function( self : BindableEvent, arguments : Tuple )
--}}} End of BindableEvent;

--{{{ BindableFunction
--- @class BindableFunction : Instance
--- @field Invoke fun( self : BindableFunction, arguments : Tuple ) : Tuple
--- @field OnInvoke fun( self : BindableFunction, arguments : Tuple ) : Tuple @Callback
--}}} End of BindableFunction;

--{{{ Breakpoint
--- @class Breakpoint : Instance
--- @field Condition string
--- @field ContinueExecution boolean
--- @field Enabled boolean
--- @field Id number
--- @field Line number
--- @field LogMessage string
--- @field MetaBreakpointId number
--- @field Script string
--- @field Valid boolean
--- @field Verified boolean
--}}} End of Breakpoint;

--{{{ BrowserService
--- @class BrowserService : Instance
--- @field CloseBrowserWindow fun( self : BrowserService ) : void
--- @field CopyAuthCookieFromBrowserToEngine fun( self : BrowserService ) : void
--- @field EmitHybridEvent fun( self : BrowserService, moduleName : string, eventName : string, params : string ) : void
--- @field ExecuteJavaScript fun( self : BrowserService, javascript : string ) : void
--- @field OpenBrowserWindow fun( self : BrowserService, url : string ) : void
--- @field OpenNativeOverlay fun( self : BrowserService, title : string, url : string ) : void
--- @field OpenWeChatAuthWindow fun( self : BrowserService ) : void
--- @field ReturnToJavaScript fun( self : BrowserService, callbackId : string, success : boolean, params : string ) : void
--- @field SendCommand fun( self : BrowserService, command : string ) : void
--- @field AuthCookieCopiedToEngine RBXScriptSignal @function( self : BrowserService )
--- @field BrowserWindowClosed RBXScriptSignal @function( self : BrowserService )
--- @field BrowserWindowWillNavigate RBXScriptSignal @function( self : BrowserService, url : string )
--- @field JavaScriptCallback RBXScriptSignal @function( self : BrowserService, content : string )
--}}} End of BrowserService;

--{{{ BulkImportService
--- @class BulkImportService : Instance
--- @field LaunchBulkImport fun( self : BulkImportService, assetTypeToImport : number ) : void
--- @field ShowBulkImportView fun( self : BulkImportService ) : void
--- @field AssetImported RBXScriptSignal @function( self : BulkImportService, assetType : Enum.AssetType, name : string, id : number )
--- @field BulkImportFinished RBXScriptSignal @function( self : BulkImportService, state : number )
--- @field BulkImportStarted RBXScriptSignal @function( self : BulkImportService )
--}}} End of BulkImportService;

--{{{ CacheableContentProvider
--- @class CacheableContentProvider : Instance
--}}} End of CacheableContentProvider;

--{{{ HSRDataContentProvider
--- @class HSRDataContentProvider : CacheableContentProvider
--}}} End of HSRDataContentProvider;

--{{{ MeshContentProvider
--- @class MeshContentProvider : CacheableContentProvider
--- @field GetContentMemoryData fun( self : MeshContentProvider ) : Dictionary
--}}} End of MeshContentProvider;

--{{{ SolidModelContentProvider
--- @class SolidModelContentProvider : CacheableContentProvider
--}}} End of SolidModelContentProvider;

--{{{ CalloutService
--- @class CalloutService : Instance
--- @field AttachCallout fun( self : CalloutService, definitionId : string, locationId : string, target : Instance ) : void
--- @field DefineCallout fun( self : CalloutService, definitionId : string, title : string, description : string, learnMoreURL : string ) : void
--- @field DetachCalloutsByDefinitionId fun( self : CalloutService, definitionId : string ) : void
--}}} End of CalloutService;

--{{{ Camera
--- @class Camera : Instance
--- @field CFrame CFrame
--- @field CameraSubject Instance
--- @field CameraType Enum.CameraType
--- @field CoordinateFrame CFrame
--- @field DiagonalFieldOfView number
--- @field FieldOfView number
--- @field FieldOfViewMode Enum.FieldOfViewMode
--- @field Focus CFrame
--- @field HeadLocked boolean
--- @field HeadScale number
--- @field MaxAxisFieldOfView number
--- @field NearPlaneZ number
--- @field ViewportSize Vector2
--- @field focus CFrame
--- @field GetLargestCutoffDistance fun( self : Camera, ignoreList : Objects ) : number
--- @field GetPanSpeed fun( self : Camera ) : number
--- @field GetPartsObscuringTarget fun( self : Camera, castPoints : Array, ignoreList : Objects ) : Objects
--- @field GetRenderCFrame fun( self : Camera ) : CFrame
--- @field GetRoll fun( self : Camera ) : number
--- @field GetTiltSpeed fun( self : Camera ) : number
--- @field Interpolate fun( self : Camera, endPos : CFrame, endFocus : CFrame, duration : number ) : void
--- @field PanUnits fun( self : Camera, units : number ) : void
--- @field ScreenPointToRay fun( self : Camera, x : number, y : number, depth : number ) : Ray
--- @field SetCameraPanMode fun( self : Camera, mode : Enum.CameraPanMode ) : void
--- @field SetImageServerView fun( self : Camera, modelCoord : CFrame ) : void
--- @field SetRoll fun( self : Camera, rollAngle : number ) : void
--- @field TiltUnits fun( self : Camera, units : number ) : boolean
--- @field ViewportPointToRay fun( self : Camera, x : number, y : number, depth : number ) : Ray
--- @field WorldToScreenPoint fun( self : Camera, worldPoint : Vector3 ) : Tuple
--- @field WorldToViewportPoint fun( self : Camera, worldPoint : Vector3 ) : Tuple
--- @field Zoom fun( self : Camera, distance : number ) : boolean
--- @field FirstPersonTransition RBXScriptSignal @function( self : Camera, entering : boolean )
--- @field InterpolationFinished RBXScriptSignal @function( self : Camera )
--}}} End of Camera;

--{{{ ChangeHistoryService
--- @class ChangeHistoryService : Instance
--- @field GetCanRedo fun( self : ChangeHistoryService ) : Tuple
--- @field GetCanUndo fun( self : ChangeHistoryService ) : Tuple
--- @field Redo fun( self : ChangeHistoryService ) : void
--- @field ResetWaypoints fun( self : ChangeHistoryService ) : void
--- @field SetEnabled fun( self : ChangeHistoryService, state : boolean ) : void
--- @field SetWaypoint fun( self : ChangeHistoryService, name : string ) : void
--- @field Undo fun( self : ChangeHistoryService ) : void
--- @field OnRedo RBXScriptSignal @function( self : ChangeHistoryService, waypoint : string )
--- @field OnUndo RBXScriptSignal @function( self : ChangeHistoryService, waypoint : string )
--}}} End of ChangeHistoryService;

--{{{ CharacterAppearance
--- @class CharacterAppearance : Instance
--}}} End of CharacterAppearance;

--{{{ BodyColors
--- @class BodyColors : CharacterAppearance
--- @field HeadColor BrickColor
--- @field HeadColor3 Color3
--- @field LeftArmColor BrickColor
--- @field LeftArmColor3 Color3
--- @field LeftLegColor BrickColor
--- @field LeftLegColor3 Color3
--- @field RightArmColor BrickColor
--- @field RightArmColor3 Color3
--- @field RightLegColor BrickColor
--- @field RightLegColor3 Color3
--- @field TorsoColor BrickColor
--- @field TorsoColor3 Color3
--}}} End of BodyColors;

--{{{ CharacterMesh
--- @class CharacterMesh : CharacterAppearance
--- @field BaseTextureId number
--- @field BodyPart Enum.BodyPart
--- @field MeshId number
--- @field OverlayTextureId number
--}}} End of CharacterMesh;

--{{{ Clothing
--- @class Clothing : CharacterAppearance
--- @field Color3 Color3
--}}} End of Clothing;

--{{{ Pants
--- @class Pants : Clothing
--- @field PantsTemplate Content
--}}} End of Pants;

--{{{ Shirt
--- @class Shirt : Clothing
--- @field ShirtTemplate Content
--}}} End of Shirt;

--{{{ ShirtGraphic
--- @class ShirtGraphic : CharacterAppearance
--- @field Color3 Color3
--- @field Graphic Content
--}}} End of ShirtGraphic;

--{{{ Chat
--- @class Chat : Instance
--- @field BubbleChatEnabled boolean
--- @field LoadDefaultChat boolean
--- @field Chat fun( self : Chat, partOrCharacter : Instance, message : string, color : Enum.ChatColor ) : void
--- @field ChatLocal fun( self : Chat, partOrCharacter : Instance, message : string, color : Enum.ChatColor ) : void
--- @field GetShouldUseLuaChat fun( self : Chat ) : boolean
--- @field InvokeChatCallback fun( self : Chat, callbackType : Enum.ChatCallbackType, callbackArguments : Tuple ) : Tuple
--- @field RegisterChatCallback fun( self : Chat, callbackType : Enum.ChatCallbackType, callbackFunction : Function ) : void
--- @field SetBubbleChatSettings fun( self : Chat, settings : Variant ) : void
--- @field CanUserChatAsync fun( self : Chat, userId : number ) : boolean
--- @field CanUsersChatAsync fun( self : Chat, userIdFrom : number, userIdTo : number ) : boolean
--- @field FilterStringAsync fun( self : Chat, stringToFilter : string, playerFrom : Player, playerTo : Player ) : string
--- @field FilterStringForBroadcast fun( self : Chat, stringToFilter : string, playerFrom : Player ) : string
--- @field FilterStringForPlayerAsync fun( self : Chat, stringToFilter : string, playerToFilterFor : Player ) : string
--- @field BubbleChatSettingsChanged RBXScriptSignal @function( self : Chat, settings : Variant )
--- @field Chatted RBXScriptSignal @function( self : Chat, part : Instance, message : string, color : Enum.ChatColor )
--}}} End of Chat;

--{{{ ClickDetector
--- @class ClickDetector : Instance
--- @field CursorIcon Content
--- @field MaxActivationDistance number
--- @field MouseClick RBXScriptSignal @function( self : ClickDetector, playerWhoClicked : Player )
--- @field MouseHoverEnter RBXScriptSignal @function( self : ClickDetector, playerWhoHovered : Player )
--- @field MouseHoverLeave RBXScriptSignal @function( self : ClickDetector, playerWhoHovered : Player )
--- @field RightMouseClick RBXScriptSignal @function( self : ClickDetector, playerWhoClicked : Player )
--- @field mouseClick RBXScriptSignal @function( self : ClickDetector, playerWhoClicked : Player )
--}}} End of ClickDetector;

--{{{ Clouds
--- @class Clouds : Instance
--- @field Color Color3
--- @field Cover number
--- @field Density number
--- @field Enabled boolean
--}}} End of Clouds;

--{{{ ClusterPacketCache
--- @class ClusterPacketCache : Instance
--}}} End of ClusterPacketCache;

--{{{ CollectionService
--- @class CollectionService : Instance
--- @field AddTag fun( self : CollectionService, instance : Instance, tag : string ) : void
--- @field GetAllTags fun( self : CollectionService ) : Array
--- @field GetCollection fun( self : CollectionService, class : string ) : Objects
--- @field GetInstanceAddedSignal fun( self : CollectionService, tag : string ) : RBXScriptSignal
--- @field GetInstanceRemovedSignal fun( self : CollectionService, tag : string ) : RBXScriptSignal
--- @field GetTagged fun( self : CollectionService, tag : string ) : Objects
--- @field GetTags fun( self : CollectionService, instance : Instance ) : Array
--- @field HasTag fun( self : CollectionService, instance : Instance, tag : string ) : boolean
--- @field RemoveTag fun( self : CollectionService, instance : Instance, tag : string ) : void
--- @field ItemAdded RBXScriptSignal @function( self : CollectionService, instance : Instance )
--- @field ItemRemoved RBXScriptSignal @function( self : CollectionService, instance : Instance )
--- @field TagAdded RBXScriptSignal @function( self : CollectionService, tag : string )
--- @field TagRemoved RBXScriptSignal @function( self : CollectionService, tag : string )
--}}} End of CollectionService;

--{{{ CommandInstance
--- @class CommandInstance : Instance
--- @field AllowGUIAccessPoints boolean
--- @field Checked boolean
--- @field DefaultShortcut string
--- @field DisplayName string
--- @field Enabled boolean
--- @field Icon string
--- @field Name string
--- @field Permission Enum.CommandPermission
--- @field StatusTip string
--- @field EnableGuiAccess fun( self : CommandInstance, displayName : string, statusTip : string, defaultShortcut : string ) : void
--- @field RegisterExecutionCallback fun( self : CommandInstance, callbackFunction : Function ) : void
--}}} End of CommandInstance;

--{{{ CommandService
--- @class CommandService : Instance
--- @field Execute fun( self : CommandService, name : string, params : Variant ) : Variant
--- @field RegisterCommand fun( self : CommandService, plugin : Plugin, name : string, context : string, permission : Enum.CommandPermission ) : CommandInstance
--- @field CommandExecuting RBXScriptSignal @function( self : CommandService, name : string, params : Variant )
--}}} End of CommandService;

--{{{ Configuration
--- @class Configuration : Instance
--}}} End of Configuration;

--{{{ ConfigureServerService
--- @class ConfigureServerService : Instance
--}}} End of ConfigureServerService;

--{{{ Constraint
--- @class Constraint : Instance
--- @field Active boolean
--- @field Attachment0 Attachment
--- @field Attachment1 Attachment
--- @field Color BrickColor
--- @field Enabled boolean
--- @field Visible boolean
--}}} End of Constraint;

--{{{ AlignOrientation
--- @class AlignOrientation : Constraint
--- @field AlignType Enum.AlignType
--- @field CFrame CFrame
--- @field MaxAngularVelocity number
--- @field MaxTorque number
--- @field Mode Enum.OrientationAlignmentMode
--- @field PrimaryAxis Vector3
--- @field PrimaryAxisOnly boolean
--- @field ReactionTorqueEnabled boolean
--- @field Responsiveness number
--- @field RigidityEnabled boolean
--- @field SecondaryAxis Vector3
--}}} End of AlignOrientation;

--{{{ AlignPosition
--- @class AlignPosition : Constraint
--- @field ApplyAtCenterOfMass boolean
--- @field MaxForce number
--- @field MaxVelocity number
--- @field Mode Enum.PositionAlignmentMode
--- @field Position Vector3
--- @field ReactionForceEnabled boolean
--- @field Responsiveness number
--- @field RigidityEnabled boolean
--}}} End of AlignPosition;

--{{{ AngularVelocity
--- @class AngularVelocity : Constraint
--- @field AngularVelocity Vector3
--- @field MaxTorque number
--- @field ReactionTorqueEnabled boolean
--- @field RelativeTo Enum.ActuatorRelativeTo
--}}} End of AngularVelocity;

--{{{ BallSocketConstraint
--- @class BallSocketConstraint : Constraint
--- @field LimitsEnabled boolean
--- @field MaxFrictionTorque number
--- @field Radius number
--- @field Restitution number
--- @field TwistLimitsEnabled boolean
--- @field TwistLowerAngle number
--- @field TwistUpperAngle number
--- @field UpperAngle number
--}}} End of BallSocketConstraint;

--{{{ HingeConstraint
--- @class HingeConstraint : Constraint
--- @field ActuatorType Enum.ActuatorType
--- @field AngularResponsiveness number
--- @field AngularSpeed number
--- @field AngularVelocity number
--- @field CurrentAngle number
--- @field LimitsEnabled boolean
--- @field LowerAngle number
--- @field MotorMaxAcceleration number
--- @field MotorMaxTorque number
--- @field Radius number
--- @field Restitution number
--- @field ServoMaxTorque number
--- @field TargetAngle number
--- @field UpperAngle number
--}}} End of HingeConstraint;

--{{{ LineForce
--- @class LineForce : Constraint
--- @field ApplyAtCenterOfMass boolean
--- @field InverseSquareLaw boolean
--- @field Magnitude number
--- @field MaxForce number
--- @field ReactionForceEnabled boolean
--}}} End of LineForce;

--{{{ LinearVelocity
--- @class LinearVelocity : Constraint
--- @field LineDirection Vector3
--- @field LineVelocity number
--- @field MaxForce number
--- @field PlaneVelocity Vector2
--- @field PrimaryTangentAxis Vector3
--- @field RelativeTo Enum.ActuatorRelativeTo
--- @field SecondaryTangentAxis Vector3
--- @field VectorVelocity Vector3
--- @field VelocityConstraintMode Enum.VelocityConstraintMode
--}}} End of LinearVelocity;

--{{{ PlaneConstraint
--- @class PlaneConstraint : Constraint
--}}} End of PlaneConstraint;

--{{{ RigidConstraint
--- @class RigidConstraint : Constraint
--}}} End of RigidConstraint;

--{{{ RodConstraint
--- @class RodConstraint : Constraint
--- @field CurrentDistance number
--- @field Length number
--- @field LimitAngle0 number
--- @field LimitAngle1 number
--- @field LimitsEnabled boolean
--- @field Thickness number
--}}} End of RodConstraint;

--{{{ RopeConstraint
--- @class RopeConstraint : Constraint
--- @field CurrentDistance number
--- @field Length number
--- @field Restitution number
--- @field Thickness number
--- @field WinchEnabled boolean
--- @field WinchForce number
--- @field WinchResponsiveness number
--- @field WinchSpeed number
--- @field WinchTarget number
--}}} End of RopeConstraint;

--{{{ SlidingBallConstraint
--- @class SlidingBallConstraint : Constraint
--- @field ActuatorType Enum.ActuatorType
--- @field CurrentPosition number
--- @field LimitsEnabled boolean
--- @field LinearResponsiveness number
--- @field LowerLimit number
--- @field MotorMaxAcceleration number
--- @field MotorMaxForce number
--- @field Restitution number
--- @field ServoMaxForce number
--- @field Size number
--- @field Speed number
--- @field TargetPosition number
--- @field UpperLimit number
--- @field Velocity number
--}}} End of SlidingBallConstraint;

--{{{ CylindricalConstraint
--- @class CylindricalConstraint : SlidingBallConstraint
--- @field AngularActuatorType Enum.ActuatorType
--- @field AngularLimitsEnabled boolean
--- @field AngularResponsiveness number
--- @field AngularRestitution number
--- @field AngularSpeed number
--- @field AngularVelocity number
--- @field CurrentAngle number
--- @field InclinationAngle number
--- @field LowerAngle number
--- @field MotorMaxAngularAcceleration number
--- @field MotorMaxTorque number
--- @field RotationAxisVisible boolean
--- @field ServoMaxTorque number
--- @field TargetAngle number
--- @field UpperAngle number
--- @field WorldRotationAxis Vector3
--}}} End of CylindricalConstraint;

--{{{ PrismaticConstraint
--- @class PrismaticConstraint : SlidingBallConstraint
--}}} End of PrismaticConstraint;

--{{{ SpringConstraint
--- @class SpringConstraint : Constraint
--- @field Coils number
--- @field CurrentLength number
--- @field Damping number
--- @field FreeLength number
--- @field LimitsEnabled boolean
--- @field MaxForce number
--- @field MaxLength number
--- @field MinLength number
--- @field Radius number
--- @field Stiffness number
--- @field Thickness number
--}}} End of SpringConstraint;

--{{{ Torque
--- @class Torque : Constraint
--- @field RelativeTo Enum.ActuatorRelativeTo
--- @field Torque Vector3
--}}} End of Torque;

--{{{ TorsionSpringConstraint
--- @class TorsionSpringConstraint : Constraint
--- @field Coils number
--- @field CurrentAngle number
--- @field Damping number
--- @field LimitEnabled boolean
--- @field LimitsEnabled boolean
--- @field MaxAngle number
--- @field MaxTorque number
--- @field Radius number
--- @field Restitution number
--- @field Stiffness number
--}}} End of TorsionSpringConstraint;

--{{{ UniversalConstraint
--- @class UniversalConstraint : Constraint
--- @field LimitsEnabled boolean
--- @field MaxAngle number
--- @field Radius number
--- @field Restitution number
--}}} End of UniversalConstraint;

--{{{ VectorForce
--- @class VectorForce : Constraint
--- @field ApplyAtCenterOfMass boolean
--- @field Force Vector3
--- @field RelativeTo Enum.ActuatorRelativeTo
--}}} End of VectorForce;

--{{{ ContentProvider
--- @class ContentProvider : Instance
--- @field BaseUrl string
--- @field RequestQueueSize number
--- @field CalculateNumTrianglesInMeshSync fun( self : ContentProvider, meshId : string ) : number
--- @field GetDetailedFailedRequests fun( self : ContentProvider ) : Array
--- @field GetFailedRequests fun( self : ContentProvider ) : Array
--- @field ListEncryptedAssets fun( self : ContentProvider ) : Array
--- @field Preload fun( self : ContentProvider, contentId : Content ) : void
--- @field RegisterDefaultEncryptionKey fun( self : ContentProvider, encryptionKey : string ) : void
--- @field RegisterDefaultSessionKey fun( self : ContentProvider, sessionKey : string ) : void
--- @field RegisterEncryptedAsset fun( self : ContentProvider, assetId : Content, encryptionKey : string ) : void
--- @field RegisterSessionEncryptedAsset fun( self : ContentProvider, contentId : Content, sessionKey : string ) : void
--- @field SetBaseUrl fun( self : ContentProvider, url : string ) : void
--- @field UnregisterDefaultEncryptionKey fun( self : ContentProvider ) : void
--- @field UnregisterEncryptedAsset fun( self : ContentProvider, assetId : Content ) : void
--- @field CalculateNumTrianglesInMesh fun( self : ContentProvider, meshId : string ) : number
--- @field PreloadAsync fun( self : ContentProvider, contentIdList : Array, callbackFunction : Function ) : void
--- @field AssetFetchFailed RBXScriptSignal @function( self : ContentProvider, assetId : Content )
--}}} End of ContentProvider;

--{{{ ContextActionService
--- @class ContextActionService : Instance
--- @field BindAction fun( self : ContextActionService, actionName : string, functionToBind : Function, createTouchButton : boolean, inputTypes : Tuple ) : void
--- @field BindActionAtPriority fun( self : ContextActionService, actionName : string, functionToBind : Function, createTouchButton : boolean, priorityLevel : number, inputTypes : Tuple ) : void
--- @field BindActionToInputTypes fun( self : ContextActionService, actionName : string, functionToBind : Function, createTouchButton : boolean, inputTypes : Tuple ) : void
--- @field BindActivate fun( self : ContextActionService, userInputTypeForActivation : Enum.UserInputType, keyCodeForActivation : Enum.KeyCode ) : void
--- @field BindCoreAction fun( self : ContextActionService, actionName : string, functionToBind : Function, createTouchButton : boolean, inputTypes : Tuple ) : void
--- @field BindCoreActionAtPriority fun( self : ContextActionService, actionName : string, functionToBind : Function, createTouchButton : boolean, priorityLevel : number, inputTypes : Tuple ) : void
--- @field CallFunction fun( self : ContextActionService, actionName : string, state : Enum.UserInputState, inputObject : Instance ) : Tuple
--- @field FireActionButtonFoundSignal fun( self : ContextActionService, actionName : string, actionButton : Instance ) : void
--- @field GetAllBoundActionInfo fun( self : ContextActionService ) : Dictionary
--- @field GetAllBoundCoreActionInfo fun( self : ContextActionService ) : Dictionary
--- @field GetBoundActionInfo fun( self : ContextActionService, actionName : string ) : Dictionary
--- @field GetBoundCoreActionInfo fun( self : ContextActionService, actionName : string ) : Dictionary
--- @field GetCurrentLocalToolIcon fun( self : ContextActionService ) : string
--- @field SetDescription fun( self : ContextActionService, actionName : string, description : string ) : void
--- @field SetImage fun( self : ContextActionService, actionName : string, image : string ) : void
--- @field SetPosition fun( self : ContextActionService, actionName : string, position : UDim2 ) : void
--- @field SetTitle fun( self : ContextActionService, actionName : string, title : string ) : void
--- @field UnbindAction fun( self : ContextActionService, actionName : string ) : void
--- @field UnbindActivate fun( self : ContextActionService, userInputTypeForActivation : Enum.UserInputType, keyCodeForActivation : Enum.KeyCode ) : void
--- @field UnbindAllActions fun( self : ContextActionService ) : void
--- @field UnbindCoreAction fun( self : ContextActionService, actionName : string ) : void
--- @field GetButton fun( self : ContextActionService, actionName : string ) : Instance
--- @field BoundActionAdded RBXScriptSignal @function( self : ContextActionService, actionAdded : string, createTouchButton : boolean, functionInfoTable : Dictionary, isCore : boolean )
--- @field BoundActionChanged RBXScriptSignal @function( self : ContextActionService, actionChanged : string, changeName : string, changeTable : Dictionary )
--- @field BoundActionRemoved RBXScriptSignal @function( self : ContextActionService, actionRemoved : string, functionInfoTable : Dictionary, isCore : boolean )
--- @field GetActionButtonEvent RBXScriptSignal @function( self : ContextActionService, actionName : string )
--- @field LocalToolEquipped RBXScriptSignal @function( self : ContextActionService, toolEquipped : Instance )
--- @field LocalToolUnequipped RBXScriptSignal @function( self : ContextActionService, toolUnequipped : Instance )
--}}} End of ContextActionService;

--{{{ Controller
--- @class Controller : Instance
--- @field BindButton fun( self : Controller, button : Enum.Button, caption : string ) : void
--- @field GetButton fun( self : Controller, button : Enum.Button ) : boolean
--- @field UnbindButton fun( self : Controller, button : Enum.Button ) : void
--- @field bindButton fun( self : Controller, button : Enum.Button, caption : string ) : void
--- @field getButton fun( self : Controller, button : Enum.Button ) : boolean
--- @field ButtonChanged RBXScriptSignal @function( self : Controller, button : Enum.Button )
--}}} End of Controller;

--{{{ HumanoidController
--- @class HumanoidController : Controller
--}}} End of HumanoidController;

--{{{ SkateboardController
--- @class SkateboardController : Controller
--- @field Steer number
--- @field Throttle number
--- @field AxisChanged RBXScriptSignal @function( self : SkateboardController, axis : string )
--}}} End of SkateboardController;

--{{{ VehicleController
--- @class VehicleController : Controller
--}}} End of VehicleController;

--{{{ ControllerBase
--- @class ControllerBase : Instance
--- @field MoveSpeedFactor number
--- @field RigidityEnabled boolean
--}}} End of ControllerBase;

--{{{ AirController
--- @class AirController : ControllerBase
--- @field CancelAirMomentum boolean
--- @field MoveMaxForce number
--- @field OrientationMaxTorque number
--- @field OrientationSpeed number
--- @field VectorForce Vector3
--}}} End of AirController;

--{{{ ClimbController
--- @class ClimbController : ControllerBase
--- @field AccelerationTime number
--- @field MoveMaxForce number
--- @field OrientationMaxTorque number
--- @field OrientationSpeed number
--}}} End of ClimbController;

--{{{ GroundController
--- @class GroundController : ControllerBase
--- @field AccelerationLean number
--- @field AccelerationTime number
--- @field AlignSpeed number
--- @field AlignTorque number
--- @field DecelerationTime number
--- @field Friction number
--- @field FrictionWeight number
--- @field MaxSlopeAngle number
--- @field StandForce number
--- @field StandSpeed number
--- @field TurningFactor number
--}}} End of GroundController;

--{{{ SwimController
--- @class SwimController : ControllerBase
--- @field AccelerationTime number
--- @field OrientationMaxTorque number
--- @field OrientationSpeed number
--}}} End of SwimController;

--{{{ ControllerManager
--- @class ControllerManager : Instance
--- @field ActiveController ControllerBase
--- @field BaseMoveSpeed number
--- @field HipHeight number
--- @field GetControllers fun( self : ControllerManager ) : Objects
--}}} End of ControllerManager;

--{{{ ControllerService
--- @class ControllerService : Instance
--}}} End of ControllerService;

--{{{ CookiesService
--- @class CookiesService : Instance
--}}} End of CookiesService;

--{{{ CorePackages
--- @class CorePackages : Instance
--}}} End of CorePackages;

--{{{ CoreScriptSyncService
--- @class CoreScriptSyncService : Instance
--- @field GetScriptFilePath fun( self : CoreScriptSyncService, script : Instance ) : Variant
--}}} End of CoreScriptSyncService;

--{{{ CrossDMScriptChangeListener
--- @class CrossDMScriptChangeListener : Instance
--- @field IsWatchingScriptLine fun( self : CrossDMScriptChangeListener, scriptRef : string, lineNumber : number ) : boolean
--- @field StartWatchingScriptLine fun( self : CrossDMScriptChangeListener, scriptRef : string, debuggerConnectionId : number, lineNumber : number ) : void
--- @field GuidLineContentsChanged RBXScriptSignal @function( self : CrossDMScriptChangeListener, guid : string, lineNumber : number, contents : string )
--- @field GuidNameChanged RBXScriptSignal @function( self : CrossDMScriptChangeListener, guid : string, fullName : string )
--}}} End of CrossDMScriptChangeListener;

--{{{ DataModelMesh
--- @class DataModelMesh : Instance
--- @field Offset Vector3
--- @field Scale Vector3
--- @field VertexColor Vector3
--}}} End of DataModelMesh;

--{{{ BlockMesh
--- @class BlockMesh : BevelMesh
--}}} End of BlockMesh;

--{{{ FileMesh
--- @class FileMesh : DataModelMesh
--- @field MeshId Content
--- @field TextureId Content
--}}} End of FileMesh;

--{{{ SpecialMesh
--- @class SpecialMesh : FileMesh
--- @field MeshType Enum.MeshType
--}}} End of SpecialMesh;

--{{{ DataModelPatchService
--- @class DataModelPatchService : Instance
--- @field GetPatch fun( self : DataModelPatchService, patchName : string ) : Instance
--- @field RegisterPatch fun( self : DataModelPatchService, patchName : string, behaviorName : string, localConfigPath : string, userId : number ) : void
--- @field UpdatePatch fun( self : DataModelPatchService, userId : number, patchName : string, callbackFunction : Function ) : void
--}}} End of DataModelPatchService;

--{{{ DataModelSession
--- @class DataModelSession : Instance
--- @field CurrentDataModelType Enum.StudioDataModelType
--- @field SessionId string
--- @field CurrentDataModelTypeAboutToChange RBXScriptSignal @function( self : DataModelSession, dataModelType : Enum.StudioDataModelType )
--- @field CurrentDataModelTypeChanged RBXScriptSignal @function( self : DataModelSession )
--- @field DataModelCreated RBXScriptSignal @function( self : DataModelSession, gameStateType : Enum.StudioDataModelType )
--- @field DataModelWillBeDestroyed RBXScriptSignal @function( self : DataModelSession, gameStateType : Enum.StudioDataModelType )
--}}} End of DataModelSession;

--{{{ DataStoreIncrementOptions
--- @class DataStoreIncrementOptions : Instance
--- @field GetMetadata fun( self : DataStoreIncrementOptions ) : Dictionary
--- @field SetMetadata fun( self : DataStoreIncrementOptions, attributes : Dictionary ) : void
--}}} End of DataStoreIncrementOptions;

--{{{ DataStoreInfo
--- @class DataStoreInfo : Instance
--- @field CreatedTime number
--- @field DataStoreName string
--- @field UpdatedTime number
--}}} End of DataStoreInfo;

--{{{ DataStoreKey
--- @class DataStoreKey : Instance
--- @field KeyName string
--}}} End of DataStoreKey;

--{{{ DataStoreKeyInfo
--- @class DataStoreKeyInfo : Instance
--- @field CreatedTime number
--- @field UpdatedTime number
--- @field Version string
--- @field GetMetadata fun( self : DataStoreKeyInfo ) : Dictionary
--- @field GetUserIds fun( self : DataStoreKeyInfo ) : Array
--}}} End of DataStoreKeyInfo;

--{{{ DataStoreObjectVersionInfo
--- @class DataStoreObjectVersionInfo : Instance
--- @field CreatedTime number
--- @field IsDeleted boolean
--- @field Version string
--}}} End of DataStoreObjectVersionInfo;

--{{{ DataStoreOptions
--- @class DataStoreOptions : Instance
--- @field AllScopes boolean
--- @field SetExperimentalFeatures fun( self : DataStoreOptions, experimentalFeatures : Dictionary ) : void
--}}} End of DataStoreOptions;

--{{{ DataStoreService
--- @class DataStoreService : Instance
--- @field AutomaticRetry boolean
--- @field LegacyNamingScheme boolean
--- @field GetDataStore fun( self : DataStoreService, name : string, scope : string, options : Instance ) : GlobalDataStore
--- @field GetGlobalDataStore fun( self : DataStoreService ) : GlobalDataStore
--- @field GetOrderedDataStore fun( self : DataStoreService, name : string, scope : string ) : OrderedDataStore
--- @field GetRequestBudgetForRequestType fun( self : DataStoreService, requestType : Enum.DataStoreRequestType ) : number
--- @field ListDataStoresAsync fun( self : DataStoreService, prefix : string, pageSize : number ) : DataStoreListingPages
--}}} End of DataStoreService;

--{{{ DataStoreSetOptions
--- @class DataStoreSetOptions : Instance
--- @field GetMetadata fun( self : DataStoreSetOptions ) : Dictionary
--- @field SetMetadata fun( self : DataStoreSetOptions, attributes : Dictionary ) : void
--}}} End of DataStoreSetOptions;

--{{{ Debris
--- @class Debris : Instance
--- @field MaxItems number
--- @field AddItem fun( self : Debris, item : Instance, lifetime : number ) : void
--- @field SetLegacyMaxItems fun( self : Debris, enabled : boolean ) : void
--- @field addItem fun( self : Debris, item : Instance, lifetime : number ) : void
--}}} End of Debris;

--{{{ DebugSettings
--- @class DebugSettings : Instance
--- @field DataModel number
--- @field InstanceCount number
--- @field IsScriptStackTracingEnabled boolean
--- @field JobCount number
--- @field PlayerCount number
--- @field ReportSoundWarnings boolean
--- @field RobloxVersion string
--- @field TickCountPreciseOverride Enum.TickCountSampleMethod
--}}} End of DebugSettings;

--{{{ DebuggablePluginWatcher
--- @class DebuggablePluginWatcher : Instance
--}}} End of DebuggablePluginWatcher;

--{{{ DebuggerBreakpoint
--- @class DebuggerBreakpoint : Instance
--- @field Condition string
--- @field ContinueExecution boolean
--- @field IsEnabled boolean
--- @field Line number
--- @field LogExpression string
--- @field isContextDependentBreakpoint boolean
--}}} End of DebuggerBreakpoint;

--{{{ DebuggerConnection
--- @class DebuggerConnection : Instance
--- @field ErrorMessage string
--- @field HasError boolean
--- @field Id number
--- @field IsPaused boolean
--- @field AddBreakpoint fun( self : DebuggerConnection, script : string, line : number, breakpoint : Breakpoint ) : void
--- @field Close fun( self : DebuggerConnection ) : void
--- @field EvaluateWatch fun( self : DebuggerConnection, expression : string, frame : StackFrame, callback : Function ) : number
--- @field GetFrameById fun( self : DebuggerConnection, id : number ) : StackFrame
--- @field GetSource fun( self : DebuggerConnection, scriptRef : string, status : Function ) : number
--- @field GetThreadById fun( self : DebuggerConnection, id : number ) : ThreadState
--- @field GetThreads fun( self : DebuggerConnection, callback : Function ) : number
--- @field GetVariableById fun( self : DebuggerConnection, id : number ) : DebuggerVariable
--- @field Pause fun( self : DebuggerConnection, thread : ThreadState, status : Function ) : number
--- @field Populate fun( self : DebuggerConnection, instance : Instance, callback : Function ) : number
--- @field RemoveBreakpoint fun( self : DebuggerConnection, breakpoint : Breakpoint ) : void
--- @field Resume fun( self : DebuggerConnection, thread : ThreadState, status : Function ) : number
--- @field SetExceptionBreakMode fun( self : DebuggerConnection, breakMode : Enum.DebuggerExceptionBreakMode, callback : Function ) : number
--- @field SetVariable fun( self : DebuggerConnection, variable : DebuggerVariable, value : string, callback : Function ) : number
--- @field Step fun( self : DebuggerConnection, thread : ThreadState, callback : Function ) : number
--- @field StepIn fun( self : DebuggerConnection, thread : ThreadState, callback : Function ) : number
--- @field StepOut fun( self : DebuggerConnection, thread : ThreadState, callback : Function ) : number
--- @field BreakpointAdded RBXScriptSignal @function( self : DebuggerConnection, breakpoint : Breakpoint )
--- @field BreakpointChanged RBXScriptSignal @function( self : DebuggerConnection, breakpoint : Breakpoint )
--- @field BreakpointRemoved RBXScriptSignal @function( self : DebuggerConnection, breakpoint : Breakpoint, reason : Enum.BreakpointRemoveReason )
--- @field Paused RBXScriptSignal @function( self : DebuggerConnection, pausedState : PausedState, reason : Enum.DebuggerPauseReason )
--- @field Resumed RBXScriptSignal @function( self : DebuggerConnection, pausedState : PausedState )
--}}} End of DebuggerConnection;

--{{{ LocalDebuggerConnection
--- @class LocalDebuggerConnection : DebuggerConnection
--}}} End of LocalDebuggerConnection;

--{{{ DebuggerConnectionManager
--- @class DebuggerConnectionManager : Instance
--- @field Timeout number
--- @field ConnectLocal fun( self : DebuggerConnectionManager, dataModel : DataModel ) : number
--- @field ConnectRemote fun( self : DebuggerConnectionManager, host : string, port : number ) : number
--- @field FocusConnection fun( self : DebuggerConnectionManager, connection : DebuggerConnection ) : void
--- @field GetConnectionById fun( self : DebuggerConnectionManager, id : number ) : DebuggerConnection
--- @field ConnectionEnded RBXScriptSignal @function( self : DebuggerConnectionManager, connection : DebuggerConnection, reason : Enum.DebuggerEndReason )
--- @field ConnectionStarted RBXScriptSignal @function( self : DebuggerConnectionManager, connection : DebuggerConnection )
--- @field FocusChanged RBXScriptSignal @function( self : DebuggerConnectionManager, connection : DebuggerConnection )
--}}} End of DebuggerConnectionManager;

--{{{ DebuggerLuaResponse
--- @class DebuggerLuaResponse : Instance
--- @field IsError boolean
--- @field IsSuccess boolean
--- @field Message string
--- @field RequestId number
--- @field Status Enum.DebuggerStatus
--- @field GetArg fun( self : DebuggerLuaResponse ) : Variant
--}}} End of DebuggerLuaResponse;

--{{{ DebuggerManager
--- @class DebuggerManager : Instance
--- @field DebuggingEnabled boolean
--- @field AddDebugger fun( self : DebuggerManager, script : Instance ) : Instance
--- @field EnableDebugging fun( self : DebuggerManager ) : void
--- @field GetDebuggers fun( self : DebuggerManager ) : Objects
--- @field Resume fun( self : DebuggerManager ) : void
--- @field StepIn fun( self : DebuggerManager ) : void
--- @field StepOut fun( self : DebuggerManager ) : void
--- @field StepOver fun( self : DebuggerManager ) : void
--- @field DebuggerAdded RBXScriptSignal @function( self : DebuggerManager, debugger : Instance )
--- @field DebuggerRemoved RBXScriptSignal @function( self : DebuggerManager, debugger : Instance )
--}}} End of DebuggerManager;

--{{{ DebuggerUIService
--- @class DebuggerUIService : Instance
--- @field EditBreakpoint fun( self : DebuggerUIService, metaBreakpointId : number ) : void
--- @field EditWatch fun( self : DebuggerUIService, expression : string ) : void
--- @field IsConnectionForPlayDataModel fun( self : DebuggerUIService, debuggerConnectionId : number ) : boolean
--- @field OpenScriptAtLine fun( self : DebuggerUIService, guid : string, debuggerConnectionId : number, line : number, showErrorOnFail : boolean ) : void
--- @field Pause fun( self : DebuggerUIService ) : void
--- @field RemoveScriptLineMarkers fun( self : DebuggerUIService, debuggerConnectionId : number, allMarkers : boolean ) : void
--- @field Resume fun( self : DebuggerUIService ) : void
--- @field SetCurrentThreadId fun( self : DebuggerUIService, debuggerThreadId : number ) : void
--- @field SetScriptLineMarker fun( self : DebuggerUIService, guid : string, debuggerConnectionId : number, line : number, lineMarkerType : boolean ) : void
--- @field ExpressionAdded RBXScriptSignal @function( self : DebuggerUIService, expression : string )
--}}} End of DebuggerUIService;

--{{{ DebuggerVariable
--- @class DebuggerVariable : Instance
--- @field Name string
--- @field Populated boolean
--- @field Type string
--- @field Value string
--- @field VariableId number
--- @field VariablesCount number
--- @field GetVariableByIndex fun( self : DebuggerVariable, index : number ) : DebuggerVariable
--- @field GetVariableByName fun( self : DebuggerVariable, name : string ) : DebuggerVariable
--}}} End of DebuggerVariable;

--{{{ DebuggerWatch
--- @class DebuggerWatch : Instance
--- @field Expression string
--}}} End of DebuggerWatch;

--{{{ DeviceIdService
--- @class DeviceIdService : Instance
--- @field GetDeviceId fun( self : DeviceIdService ) : string
--}}} End of DeviceIdService;

--{{{ Dialog
--- @class Dialog : Instance
--- @field BehaviorType Enum.DialogBehaviorType
--- @field ConversationDistance number
--- @field GoodbyeChoiceActive boolean
--- @field GoodbyeDialog string
--- @field InUse boolean
--- @field InitialPrompt string
--- @field Purpose Enum.DialogPurpose
--- @field Tone Enum.DialogTone
--- @field TriggerDistance number
--- @field TriggerOffset Vector3
--- @field GetCurrentPlayers fun( self : Dialog ) : Objects
--- @field SetPlayerIsUsing fun( self : Dialog, player : Instance, isUsing : boolean ) : void
--- @field SignalDialogChoiceSelected fun( self : Dialog, player : Instance, dialogChoice : Instance ) : void
--- @field DialogChoiceSelected RBXScriptSignal @function( self : Dialog, player : Instance, dialogChoice : Instance )
--}}} End of Dialog;

--{{{ DialogChoice
--- @class DialogChoice : Instance
--- @field GoodbyeChoiceActive boolean
--- @field GoodbyeDialog string
--- @field ResponseDialog string
--- @field UserDialog string
--}}} End of DialogChoice;

--{{{ DraftsService
--- @class DraftsService : Instance
--- @field DiscardEdits fun( self : DraftsService, scripts : Objects ) : void
--- @field GetDraftStatus fun( self : DraftsService, script : Instance ) : Enum.DraftStatusCode
--- @field GetEditors fun( self : DraftsService, script : Instance ) : Objects
--- @field RestoreScripts fun( self : DraftsService, scripts : Objects ) : void
--- @field ShowDiffsAgainstBase fun( self : DraftsService, scripts : Objects ) : void
--- @field ShowDiffsAgainstServer fun( self : DraftsService, scripts : Objects ) : void
--- @field CommitEdits fun( self : DraftsService, scripts : Objects ) : void
--- @field GetDrafts fun( self : DraftsService ) : Objects
--- @field UpdateToLatestVersion fun( self : DraftsService, scripts : Objects ) : void
--- @field CommitStatusChanged RBXScriptSignal @function( self : DraftsService, script : Instance, status : Enum.DraftStatusCode )
--- @field DraftAdded RBXScriptSignal @function( self : DraftsService, script : Instance )
--- @field DraftRemoved RBXScriptSignal @function( self : DraftsService, script : Instance )
--- @field DraftStatusChanged RBXScriptSignal @function( self : DraftsService, script : Instance )
--- @field EditorsListChanged RBXScriptSignal @function( self : DraftsService, script : Instance )
--- @field UpdateStatusChanged RBXScriptSignal @function( self : DraftsService, script : Instance, status : Enum.DraftStatusCode )
--}}} End of DraftsService;

--{{{ Dragger
--- @class Dragger : Instance
--- @field AxisRotate fun( self : Dragger, axis : Enum.Axis ) : void
--- @field MouseDown fun( self : Dragger, mousePart : Instance, pointOnMousePart : Vector3, parts : Objects ) : void
--- @field MouseMove fun( self : Dragger, mouseRay : Ray ) : void
--- @field MouseUp fun( self : Dragger ) : void
--}}} End of Dragger;

--{{{ DraggerService
--- @class DraggerService : Instance
--- @field AlignDraggedObjects boolean
--- @field AngleSnapEnabled boolean
--- @field AngleSnapIncrement number
--- @field AnimateHover boolean
--- @field CollisionsEnabled boolean
--- @field DraggerCoordinateSpace Enum.DraggerCoordinateSpace
--- @field DraggerMovementMode Enum.DraggerMovementMode
--- @field GeometrySnapColor Color3
--- @field HoverAnimateFrequency number
--- @field HoverThickness number
--- @field JointsEnabled boolean
--- @field LinearSnapEnabled boolean
--- @field LinearSnapIncrement number
--- @field PivotSnapToGeometry boolean
--- @field ShowHover boolean
--- @field ShowPivotIndicator boolean
--}}} End of DraggerService;

--{{{ EulerRotationCurve
--- @class EulerRotationCurve : Instance
--- @field RotationOrder Enum.RotationOrder
--- @field GetAnglesAtTime fun( self : EulerRotationCurve, time : number ) : Array
--- @field GetRotationAtTime fun( self : EulerRotationCurve, time : number ) : CFrame
--- @field X fun( self : EulerRotationCurve ) : FloatCurve
--- @field Y fun( self : EulerRotationCurve ) : FloatCurve
--- @field Z fun( self : EulerRotationCurve ) : FloatCurve
--}}} End of EulerRotationCurve;

--{{{ EventIngestService
--- @class EventIngestService : Instance
--- @field SendEventDeferred fun( self : EventIngestService, target : string, eventContext : string, eventName : string, additionalArgs : Dictionary ) : void
--- @field SendEventImmediately fun( self : EventIngestService, target : string, eventContext : string, eventName : string, additionalArgs : Dictionary ) : void
--- @field SetRBXEvent fun( self : EventIngestService, target : string, eventContext : string, eventName : string, additionalArgs : Dictionary ) : void
--- @field SetRBXEventStream fun( self : EventIngestService, target : string, eventContext : string, eventName : string, additionalArgs : Dictionary ) : void
--}}} End of EventIngestService;

--{{{ Explosion
--- @class Explosion : Instance
--- @field BlastPressure number
--- @field BlastRadius number
--- @field DestroyJointRadiusPercent number
--- @field ExplosionType Enum.ExplosionType
--- @field Position Vector3
--- @field TimeScale number
--- @field Visible boolean
--- @field Hit RBXScriptSignal @function( self : Explosion, part : BasePart, distance : number )
--}}} End of Explosion;

--{{{ FaceAnimatorService
--- @class FaceAnimatorService : Instance
--- @field AudioAnimationEnabled boolean
--- @field FlipHeadOrientation boolean
--- @field VideoAnimationEnabled boolean
--- @field TrackerError RBXScriptSignal @function( self : FaceAnimatorService, error : Enum.TrackerError )
--}}} End of FaceAnimatorService;

--{{{ FaceControls
--- @class FaceControls : Instance
--- @field ChinRaiser number
--- @field ChinRaiserUpperLip number
--- @field Corrugator number
--- @field EyesLookDown number
--- @field EyesLookLeft number
--- @field EyesLookRight number
--- @field EyesLookUp number
--- @field FlatPucker number
--- @field Funneler number
--- @field JawDrop number
--- @field JawLeft number
--- @field JawRight number
--- @field LeftBrowLowerer number
--- @field LeftCheekPuff number
--- @field LeftCheekRaiser number
--- @field LeftDimpler number
--- @field LeftEyeClosed number
--- @field LeftEyeUpperLidRaiser number
--- @field LeftInnerBrowRaiser number
--- @field LeftLipCornerDown number
--- @field LeftLipCornerPuller number
--- @field LeftLipStretcher number
--- @field LeftLowerLipDepressor number
--- @field LeftNoseWrinkler number
--- @field LeftOuterBrowRaiser number
--- @field LeftUpperLipRaiser number
--- @field LipPresser number
--- @field LipsTogether number
--- @field LowerLipSuck number
--- @field MouthLeft number
--- @field MouthRight number
--- @field Pucker number
--- @field RightBrowLowerer number
--- @field RightCheekPuff number
--- @field RightCheekRaiser number
--- @field RightDimpler number
--- @field RightEyeClosed number
--- @field RightEyeUpperLidRaiser number
--- @field RightInnerBrowRaiser number
--- @field RightLipCornerDown number
--- @field RightLipCornerPuller number
--- @field RightLipStretcher number
--- @field RightLowerLipDepressor number
--- @field RightNoseWrinkler number
--- @field RightOuterBrowRaiser number
--- @field RightUpperLipRaiser number
--- @field TongueDown number
--- @field TongueOut number
--- @field TongueUp number
--- @field UpperLipSuck number
--}}} End of FaceControls;

--{{{ FaceInstance
--- @class FaceInstance : Instance
--- @field Face Enum.NormalId
--}}} End of FaceInstance;

--{{{ Decal
--- @class Decal : FaceInstance
--- @field Color3 Color3
--- @field LocalTransparencyModifier number
--- @field Shiny number
--- @field Specular number
--- @field Texture Content
--- @field Transparency number
--- @field ZIndex number
--}}} End of Decal;

--{{{ Texture
--- @class Texture : Decal
--- @field OffsetStudsU number
--- @field OffsetStudsV number
--- @field StudsPerTileU number
--- @field StudsPerTileV number
--}}} End of Texture;

--{{{ FacialAnimationRecordingService
--- @class FacialAnimationRecordingService : Instance
--- @field BiometricDataConsent boolean
--- @field IsAgeRestricted fun( self : FacialAnimationRecordingService ) : boolean
--- @field CheckOrRequestCameraPermission fun( self : FacialAnimationRecordingService ) : string
--}}} End of FacialAnimationRecordingService;

--{{{ FacialAnimationStreamingService
--- @class FacialAnimationStreamingService : Instance
--- @field Enabled boolean
--}}} End of FacialAnimationStreamingService;

--{{{ Feature
--- @class Feature : Instance
--- @field FaceId Enum.NormalId
--- @field InOut Enum.InOut
--- @field LeftRight Enum.LeftRight
--- @field TopBottom Enum.TopBottom
--}}} End of Feature;

--{{{ File
--- @class File : Instance
--- @field Size number
--- @field GetBinaryContents fun( self : File ) : string
--- @field GetTemporaryId fun( self : File ) : Content
--}}} End of File;

--{{{ Fire
--- @class Fire : Instance
--- @field Color Color3
--- @field Enabled boolean
--- @field Heat number
--- @field SecondaryColor Color3
--- @field Size number
--- @field TimeScale number
--- @field size number
--}}} End of Fire;

--{{{ FlagStandService
--- @class FlagStandService : Instance
--}}} End of FlagStandService;

--{{{ FloatCurve
--- @class FloatCurve : Instance
--- @field Length number
--- @field GetKeyAtIndex fun( self : FloatCurve, index : number ) : FloatCurveKey
--- @field GetKeyIndicesAtTime fun( self : FloatCurve, time : number ) : Array
--- @field GetKeys fun( self : FloatCurve ) : Array
--- @field GetValueAtTime fun( self : FloatCurve, time : number ) : float?
--- @field InsertKey fun( self : FloatCurve, key : FloatCurveKey ) : Array
--- @field RemoveKeyAtIndex fun( self : FloatCurve, startingIndex : number, count : number ) : number
--- @field SetKeys fun( self : FloatCurve, keys : Array ) : number
--}}} End of FloatCurve;

--{{{ FlyweightService
--- @class FlyweightService : Instance
--}}} End of FlyweightService;

--{{{ CSGDictionaryService
--- @class CSGDictionaryService : FlyweightService
--}}} End of CSGDictionaryService;

--{{{ NonReplicatedCSGDictionaryService
--- @class NonReplicatedCSGDictionaryService : FlyweightService
--}}} End of NonReplicatedCSGDictionaryService;

--{{{ Folder
--- @class Folder : Instance
--}}} End of Folder;

--{{{ ForceField
--- @class ForceField : Instance
--- @field Visible boolean
--}}} End of ForceField;

--{{{ FriendService
--- @class FriendService : Instance
--- @field GetPlatformFriends fun( self : FriendService ) : Array
--- @field FriendsUpdated RBXScriptSignal @function( self : FriendService, friendData : Array )
--}}} End of FriendService;

--{{{ GamePassService
--- @class GamePassService : Instance
--- @field PlayerHasPass fun( self : GamePassService, player : Player, gamePassId : number ) : boolean
--}}} End of GamePassService;

--{{{ GameSettings
--- @class GameSettings : Instance
--- @field VideoCaptureEnabled boolean
--- @field VideoRecording boolean
--- @field VideoRecordingChangeRequest RBXScriptSignal @function( self : GameSettings, recording : boolean )
--}}} End of GameSettings;

--{{{ GamepadService
--- @class GamepadService : Instance
--- @field GamepadCursorEnabled boolean
--- @field DisableGamepadCursor fun( self : GamepadService ) : void
--- @field EnableGamepadCursor fun( self : GamepadService, guiObject : Instance ) : void
--- @field GetGamepadCursorPosition fun( self : GamepadService ) : Vector2
--- @field SetGamepadCursorPosition fun( self : GamepadService, position : Vector2 ) : void
--- @field GamepadThumbstick1Changed RBXScriptSignal @function( self : GamepadService, event : Vector2 )
--}}} End of GamepadService;

--{{{ Geometry
--- @class Geometry : Instance
--}}} End of Geometry;

--{{{ GetTextBoundsParams
--- @class GetTextBoundsParams : Instance
--- @field Font Font
--- @field Size number
--- @field Text string
--- @field Width number
--}}} End of GetTextBoundsParams;

--{{{ GlobalDataStore
--- @class GlobalDataStore : Instance
--- @field OnUpdate fun( self : GlobalDataStore, key : string, callback : Function ) : RBXScriptConnection
--- @field GetAsync fun( self : GlobalDataStore, key : string ) : Tuple
--- @field IncrementAsync fun( self : GlobalDataStore, key : string, delta : number, userIds : Array, options : DataStoreIncrementOptions ) : Variant
--- @field RemoveAsync fun( self : GlobalDataStore, key : string ) : Tuple
--- @field SetAsync fun( self : GlobalDataStore, key : string, value : Variant, userIds : Array, options : DataStoreSetOptions ) : Variant
--- @field UpdateAsync fun( self : GlobalDataStore, key : string, transformFunction : Function ) : Tuple
--}}} End of GlobalDataStore;

--{{{ DataStore
--- @class DataStore : GlobalDataStore
--- @field GetVersionAsync fun( self : DataStore, key : string, version : string ) : Tuple
--- @field ListKeysAsync fun( self : DataStore, prefix : string, pageSize : number ) : DataStoreKeyPages
--- @field ListVersionsAsync fun( self : DataStore, key : string, sortDirection : Enum.SortDirection, minDate : number, maxDate : number, pageSize : number ) : DataStoreVersionPages
--- @field RemoveVersionAsync fun( self : DataStore, key : string, version : string ) : void
--}}} End of DataStore;

--{{{ OrderedDataStore
--- @class OrderedDataStore : GlobalDataStore
--- @field GetSortedAsync fun( self : OrderedDataStore, ascending : boolean, pagesize : number, minValue : Variant, maxValue : Variant ) : Instance
--}}} End of OrderedDataStore;

--{{{ GoogleAnalyticsConfiguration
--- @class GoogleAnalyticsConfiguration : Instance
--}}} End of GoogleAnalyticsConfiguration;

--{{{ GroupService
--- @class GroupService : Instance
--- @field GetAlliesAsync fun( self : GroupService, groupId : number ) : StandardPages
--- @field GetEnemiesAsync fun( self : GroupService, groupId : number ) : StandardPages
--- @field GetGroupInfoAsync fun( self : GroupService, groupId : number ) : Variant
--- @field GetGroupsAsync fun( self : GroupService, userId : number ) : Array
--}}} End of GroupService;

--{{{ GuiBase
--- @class GuiBase : Instance
--}}} End of GuiBase;

--{{{ GuiBase2d
--- @class GuiBase2d : GuiBase
--- @field AbsolutePosition Vector2
--- @field AbsoluteRotation number
--- @field AbsoluteSize Vector2
--- @field AutoLocalize boolean
--- @field ClippedRect Rect
--- @field IsNotOccluded boolean
--- @field Localize boolean
--- @field RawRect2D Rect
--- @field RootLocalizationTable LocalizationTable
--- @field SelectionBehaviorDown Enum.SelectionBehavior
--- @field SelectionBehaviorLeft Enum.SelectionBehavior
--- @field SelectionBehaviorRight Enum.SelectionBehavior
--- @field SelectionBehaviorUp Enum.SelectionBehavior
--- @field SelectionGroup boolean
--- @field TotalGroupScale number
--- @field SelectionChanged RBXScriptSignal @function( self : GuiBase2d, amISelected : boolean, previousSelection : GuiObject, newSelection : GuiObject )
--}}} End of GuiBase2d;

--{{{ GuiObject
--- @class GuiObject : GuiBase2d
--- @field Active boolean
--- @field AnchorPoint Vector2
--- @field AutomaticSize Enum.AutomaticSize
--- @field BackgroundColor BrickColor
--- @field BackgroundColor3 Color3
--- @field BackgroundTransparency number
--- @field BorderColor BrickColor
--- @field BorderColor3 Color3
--- @field BorderMode Enum.BorderMode
--- @field BorderSizePixel number
--- @field ClipsDescendants boolean
--- @field Draggable boolean
--- @field LayoutOrder number
--- @field NextSelectionDown GuiObject
--- @field NextSelectionLeft GuiObject
--- @field NextSelectionRight GuiObject
--- @field NextSelectionUp GuiObject
--- @field Position UDim2
--- @field Rotation number
--- @field Selectable boolean
--- @field SelectionImageObject GuiObject
--- @field SelectionOrder number
--- @field Size UDim2
--- @field SizeConstraint Enum.SizeConstraint
--- @field Transparency number
--- @field Visible boolean
--- @field ZIndex number
--- @field TweenPosition fun( self : GuiObject, endPosition : UDim2, easingDirection : Enum.EasingDirection, easingStyle : Enum.EasingStyle, time : number, override : boolean, callback : Function ) : boolean
--- @field TweenSize fun( self : GuiObject, endSize : UDim2, easingDirection : Enum.EasingDirection, easingStyle : Enum.EasingStyle, time : number, override : boolean, callback : Function ) : boolean
--- @field TweenSizeAndPosition fun( self : GuiObject, endSize : UDim2, endPosition : UDim2, easingDirection : Enum.EasingDirection, easingStyle : Enum.EasingStyle, time : number, override : boolean, callback : Function ) : boolean
--- @field DragBegin RBXScriptSignal @function( self : GuiObject, initialPosition : UDim2 )
--- @field DragStopped RBXScriptSignal @function( self : GuiObject, x : number, y : number )
--- @field InputBegan RBXScriptSignal @function( self : GuiObject, input : InputObject )
--- @field InputChanged RBXScriptSignal @function( self : GuiObject, input : InputObject )
--- @field InputEnded RBXScriptSignal @function( self : GuiObject, input : InputObject )
--- @field MouseEnter RBXScriptSignal @function( self : GuiObject, x : number, y : number )
--- @field MouseLeave RBXScriptSignal @function( self : GuiObject, x : number, y : number )
--- @field MouseMoved RBXScriptSignal @function( self : GuiObject, x : number, y : number )
--- @field MouseWheelBackward RBXScriptSignal @function( self : GuiObject, x : number, y : number )
--- @field MouseWheelForward RBXScriptSignal @function( self : GuiObject, x : number, y : number )
--- @field SelectionGained RBXScriptSignal @function( self : GuiObject )
--- @field SelectionLost RBXScriptSignal @function( self : GuiObject )
--- @field TouchLongPress RBXScriptSignal @function( self : GuiObject, touchPositions : Array, state : Enum.UserInputState )
--- @field TouchPan RBXScriptSignal @function( self : GuiObject, touchPositions : Array, totalTranslation : Vector2, velocity : Vector2, state : Enum.UserInputState )
--- @field TouchPinch RBXScriptSignal @function( self : GuiObject, touchPositions : Array, scale : number, velocity : number, state : Enum.UserInputState )
--- @field TouchRotate RBXScriptSignal @function( self : GuiObject, touchPositions : Array, rotation : number, velocity : number, state : Enum.UserInputState )
--- @field TouchSwipe RBXScriptSignal @function( self : GuiObject, swipeDirection : Enum.SwipeDirection, numberOfTouches : number )
--- @field TouchTap RBXScriptSignal @function( self : GuiObject, touchPositions : Array )
--}}} End of GuiObject;

--{{{ CanvasGroup
--- @class CanvasGroup : GuiObject
--- @field GroupColor3 Color3
--- @field GroupTransparency number
--}}} End of CanvasGroup;

--{{{ Frame
--- @class Frame : GuiObject
--- @field Style Enum.FrameStyle
--}}} End of Frame;

--{{{ GuiButton
--- @class GuiButton : GuiObject
--- @field AutoButtonColor boolean
--- @field Modal boolean
--- @field Selected boolean
--- @field Style Enum.ButtonStyle
--- @field Activated RBXScriptSignal @function( self : GuiButton, inputObject : InputObject, clickCount : number )
--- @field MouseButton1Click RBXScriptSignal @function( self : GuiButton )
--- @field MouseButton1Down RBXScriptSignal @function( self : GuiButton, x : number, y : number )
--- @field MouseButton1Up RBXScriptSignal @function( self : GuiButton, x : number, y : number )
--- @field MouseButton2Click RBXScriptSignal @function( self : GuiButton )
--- @field MouseButton2Down RBXScriptSignal @function( self : GuiButton, x : number, y : number )
--- @field MouseButton2Up RBXScriptSignal @function( self : GuiButton, x : number, y : number )
--}}} End of GuiButton;

--{{{ ImageButton
--- @class ImageButton : GuiButton
--- @field ContentImageSize Vector2
--- @field HoverImage Content
--- @field Image Content
--- @field ImageColor3 Color3
--- @field ImageRectOffset Vector2
--- @field ImageRectSize Vector2
--- @field ImageTransparency number
--- @field IsLoaded boolean
--- @field PressedImage Content
--- @field ResampleMode Enum.ResamplerMode
--- @field ScaleType Enum.ScaleType
--- @field SliceCenter Rect
--- @field SliceScale number
--- @field TileSize UDim2
--- @field SetEnableContentImageSizeChangedEvents fun( self : ImageButton, enabled : boolean ) : void
--}}} End of ImageButton;

--{{{ TextButton
--- @class TextButton : GuiButton
--- @field ContentText string
--- @field Font Enum.Font
--- @field FontFace Font
--- @field FontSize Enum.FontSize
--- @field LineHeight number
--- @field LocalizedText string
--- @field MaxVisibleGraphemes number
--- @field RichText boolean
--- @field Text string
--- @field TextBounds Vector2
--- @field TextColor BrickColor
--- @field TextColor3 Color3
--- @field TextFits boolean
--- @field TextScaled boolean
--- @field TextSize number
--- @field TextStrokeColor3 Color3
--- @field TextStrokeTransparency number
--- @field TextTransparency number
--- @field TextTruncate Enum.TextTruncate
--- @field TextWrap boolean
--- @field TextWrapped boolean
--- @field TextXAlignment Enum.TextXAlignment
--- @field TextYAlignment Enum.TextYAlignment
--- @field SetTextFromInput fun( self : TextButton, text : string ) : void
--}}} End of TextButton;

--{{{ GuiLabel
--- @class GuiLabel : GuiObject
--}}} End of GuiLabel;

--{{{ ImageLabel
--- @class ImageLabel : GuiLabel
--- @field ContentImageSize Vector2
--- @field Image Content
--- @field ImageColor3 Color3
--- @field ImageRectOffset Vector2
--- @field ImageRectSize Vector2
--- @field ImageTransparency number
--- @field IsLoaded boolean
--- @field ResampleMode Enum.ResamplerMode
--- @field ScaleType Enum.ScaleType
--- @field SliceCenter Rect
--- @field SliceScale number
--- @field TileSize UDim2
--- @field SetEnableContentImageSizeChangedEvents fun( self : ImageLabel, enabled : boolean ) : void
--}}} End of ImageLabel;

--{{{ TextLabel
--- @class TextLabel : GuiLabel
--- @field ContentText string
--- @field Font Enum.Font
--- @field FontFace Font
--- @field FontSize Enum.FontSize
--- @field LineHeight number
--- @field LocalizedText string
--- @field MaxVisibleGraphemes number
--- @field RichText boolean
--- @field Text string
--- @field TextBounds Vector2
--- @field TextColor BrickColor
--- @field TextColor3 Color3
--- @field TextFits boolean
--- @field TextScaled boolean
--- @field TextSize number
--- @field TextStrokeColor3 Color3
--- @field TextStrokeTransparency number
--- @field TextTransparency number
--- @field TextTruncate Enum.TextTruncate
--- @field TextWrap boolean
--- @field TextWrapped boolean
--- @field TextXAlignment Enum.TextXAlignment
--- @field TextYAlignment Enum.TextYAlignment
--- @field SetTextFromInput fun( self : TextLabel, text : string ) : void
--}}} End of TextLabel;

--{{{ ScrollingFrame
--- @class ScrollingFrame : GuiObject
--- @field AbsoluteCanvasSize Vector2
--- @field AbsoluteWindowSize Vector2
--- @field AutomaticCanvasSize Enum.AutomaticSize
--- @field BottomImage Content
--- @field CanvasPosition Vector2
--- @field CanvasSize UDim2
--- @field ElasticBehavior Enum.ElasticBehavior
--- @field HorizontalBarRect Rect
--- @field HorizontalScrollBarInset Enum.ScrollBarInset
--- @field MaxCanvasPosition Vector2
--- @field MidImage Content
--- @field ScrollBarImageColor3 Color3
--- @field ScrollBarImageTransparency number
--- @field ScrollBarThickness number
--- @field ScrollVelocity Vector2
--- @field ScrollingDirection Enum.ScrollingDirection
--- @field ScrollingEnabled boolean
--- @field TopImage Content
--- @field VerticalBarRect Rect
--- @field VerticalScrollBarInset Enum.ScrollBarInset
--- @field VerticalScrollBarPosition Enum.VerticalScrollBarPosition
--- @field ClearInertialScrolling fun( self : ScrollingFrame ) : void
--- @field GetSampledInertialVelocity fun( self : ScrollingFrame ) : Vector2
--- @field ScrollToTop fun( self : ScrollingFrame ) : void
--}}} End of ScrollingFrame;

--{{{ TextBox
--- @class TextBox : GuiObject
--- @field ClearTextOnFocus boolean
--- @field ContentText string
--- @field CursorPosition number
--- @field Font Enum.Font
--- @field FontFace Font
--- @field FontSize Enum.FontSize
--- @field LineHeight number
--- @field ManualFocusRelease boolean
--- @field MaxVisibleGraphemes number
--- @field MultiLine boolean
--- @field OverlayNativeInput boolean
--- @field PlaceholderColor3 Color3
--- @field PlaceholderText string
--- @field ReturnKeyType Enum.ReturnKeyType
--- @field RichText boolean
--- @field SelectionStart number
--- @field ShowNativeInput boolean
--- @field Text string
--- @field TextBounds Vector2
--- @field TextColor BrickColor
--- @field TextColor3 Color3
--- @field TextEditable boolean
--- @field TextFits boolean
--- @field TextInputType Enum.TextInputType
--- @field TextScaled boolean
--- @field TextSize number
--- @field TextStrokeColor3 Color3
--- @field TextStrokeTransparency number
--- @field TextTransparency number
--- @field TextTruncate Enum.TextTruncate
--- @field TextWrap boolean
--- @field TextWrapped boolean
--- @field TextXAlignment Enum.TextXAlignment
--- @field TextYAlignment Enum.TextYAlignment
--- @field CaptureFocus fun( self : TextBox ) : void
--- @field IsFocused fun( self : TextBox ) : boolean
--- @field ReleaseFocus fun( self : TextBox, submitted : boolean ) : void
--- @field ResetKeyboardMode fun( self : TextBox ) : void
--- @field SetTextFromInput fun( self : TextBox, text : string ) : void
--- @field FocusLost RBXScriptSignal @function( self : TextBox, enterPressed : boolean, inputThatCausedFocusLoss : InputObject )
--- @field Focused RBXScriptSignal @function( self : TextBox )
--- @field ReturnPressedFromOnScreenKeyboard RBXScriptSignal @function( self : TextBox )
--}}} End of TextBox;

--{{{ VideoFrame
--- @class VideoFrame : GuiObject
--- @field IsLoaded boolean
--- @field Looped boolean
--- @field Playing boolean
--- @field Resolution Vector2
--- @field TimeLength number
--- @field TimePosition number
--- @field Video Content
--- @field Volume number
--- @field Pause fun( self : VideoFrame ) : void
--- @field Play fun( self : VideoFrame ) : void
--- @field DidLoop RBXScriptSignal @function( self : VideoFrame, video : string )
--- @field Ended RBXScriptSignal @function( self : VideoFrame, video : string )
--- @field Loaded RBXScriptSignal @function( self : VideoFrame, video : string )
--- @field Paused RBXScriptSignal @function( self : VideoFrame, video : string )
--- @field Played RBXScriptSignal @function( self : VideoFrame, video : string )
--}}} End of VideoFrame;

--{{{ ViewportFrame
--- @class ViewportFrame : GuiObject
--- @field Ambient Color3
--- @field CurrentCamera Camera
--- @field ImageColor3 Color3
--- @field ImageTransparency number
--- @field IsMirrored boolean
--- @field LightColor Color3
--- @field LightDirection Vector3
--}}} End of ViewportFrame;

--{{{ LayerCollector
--- @class LayerCollector : GuiBase2d
--- @field Enabled boolean
--- @field ResetOnSpawn boolean
--- @field ZIndexBehavior Enum.ZIndexBehavior
--- @field GetLayoutNodeTree fun( self : LayerCollector ) : Dictionary
--}}} End of LayerCollector;

--{{{ BillboardGui
--- @class BillboardGui : LayerCollector
--- @field Active boolean
--- @field Adornee Instance
--- @field AlwaysOnTop boolean
--- @field Brightness number
--- @field ClipsDescendants boolean
--- @field CurrentDistance number
--- @field DistanceLowerLimit number
--- @field DistanceStep number
--- @field DistanceUpperLimit number
--- @field ExtentsOffset Vector3
--- @field ExtentsOffsetWorldSpace Vector3
--- @field LightInfluence number
--- @field MaxDistance number
--- @field PlayerToHideFrom Instance
--- @field Size UDim2
--- @field SizeOffset Vector2
--- @field StudsOffset Vector3
--- @field StudsOffsetWorldSpace Vector3
--- @field GetScreenSpaceBounds fun( self : BillboardGui ) : Variant
--}}} End of BillboardGui;

--{{{ PluginGui
--- @class PluginGui : LayerCollector
--- @field Title string
--- @field BindToClose fun( self : PluginGui, function : Function ) : void
--- @field GetRelativeMousePosition fun( self : PluginGui ) : Vector2
--- @field PluginDragDropped RBXScriptSignal @function( self : PluginGui, dragData : Dictionary )
--- @field PluginDragEntered RBXScriptSignal @function( self : PluginGui, dragData : Dictionary )
--- @field PluginDragLeft RBXScriptSignal @function( self : PluginGui, dragData : Dictionary )
--- @field PluginDragMoved RBXScriptSignal @function( self : PluginGui, dragData : Dictionary )
--- @field WindowFocusReleased RBXScriptSignal @function( self : PluginGui )
--- @field WindowFocused RBXScriptSignal @function( self : PluginGui )
--}}} End of PluginGui;

--{{{ DockWidgetPluginGui
--- @class DockWidgetPluginGui : PluginGui
--- @field HostWidgetWasRestored boolean
--- @field RequestRaise fun( self : DockWidgetPluginGui ) : void
--}}} End of DockWidgetPluginGui;

--{{{ QWidgetPluginGui
--- @class QWidgetPluginGui : PluginGui
--}}} End of QWidgetPluginGui;

--{{{ ScreenGui
--- @class ScreenGui : LayerCollector
--- @field DisplayOrder number
--- @field IgnoreGuiInset boolean
--- @field OnTopOfCoreBlur boolean
--}}} End of ScreenGui;

--{{{ SurfaceGuiBase
--- @class SurfaceGuiBase : LayerCollector
--- @field Active boolean
--- @field Adornee Instance
--- @field Face Enum.NormalId
--}}} End of SurfaceGuiBase;

--{{{ AdGui
--- @class AdGui : SurfaceGuiBase
--- @field AdShape Enum.AdShape
--}}} End of AdGui;

--{{{ SurfaceGui
--- @class SurfaceGui : SurfaceGuiBase
--- @field AlwaysOnTop boolean
--- @field Brightness number
--- @field CanvasSize Vector2
--- @field ClipsDescendants boolean
--- @field LightInfluence number
--- @field PixelsPerStud number
--- @field SizingMode Enum.SurfaceGuiSizingMode
--- @field ToolPunchThroughDistance number
--- @field ZOffset number
--}}} End of SurfaceGui;

--{{{ GuiBase3d
--- @class GuiBase3d : GuiBase
--- @field Color BrickColor
--- @field Color3 Color3
--- @field Transparency number
--- @field Visible boolean
--}}} End of GuiBase3d;

--{{{ InstanceAdornment
--- @class InstanceAdornment : GuiBase3d
--- @field Adornee Instance
--}}} End of InstanceAdornment;

--{{{ SelectionBox
--- @class SelectionBox : InstanceAdornment
--- @field LineThickness number
--- @field SurfaceColor BrickColor
--- @field SurfaceColor3 Color3
--- @field SurfaceTransparency number
--}}} End of SelectionBox;

--{{{ PVAdornment
--- @class PVAdornment : GuiBase3d
--- @field Adornee PVInstance
--}}} End of PVAdornment;

--{{{ HandleAdornment
--- @class HandleAdornment : PVAdornment
--- @field AdornCullingMode Enum.AdornCullingMode
--- @field AlwaysOnTop boolean
--- @field CFrame CFrame
--- @field SizeRelativeOffset Vector3
--- @field ZIndex number
--- @field MouseButton1Down RBXScriptSignal @function( self : HandleAdornment )
--- @field MouseButton1Up RBXScriptSignal @function( self : HandleAdornment )
--- @field MouseEnter RBXScriptSignal @function( self : HandleAdornment )
--- @field MouseLeave RBXScriptSignal @function( self : HandleAdornment )
--}}} End of HandleAdornment;

--{{{ BoxHandleAdornment
--- @class BoxHandleAdornment : HandleAdornment
--- @field Size Vector3
--}}} End of BoxHandleAdornment;

--{{{ ConeHandleAdornment
--- @class ConeHandleAdornment : HandleAdornment
--- @field Height number
--- @field Radius number
--}}} End of ConeHandleAdornment;

--{{{ CylinderHandleAdornment
--- @class CylinderHandleAdornment : HandleAdornment
--- @field Angle number
--- @field Height number
--- @field InnerRadius number
--- @field Radius number
--}}} End of CylinderHandleAdornment;

--{{{ ImageHandleAdornment
--- @class ImageHandleAdornment : HandleAdornment
--- @field Image Content
--- @field Size Vector2
--}}} End of ImageHandleAdornment;

--{{{ LineHandleAdornment
--- @class LineHandleAdornment : HandleAdornment
--- @field Length number
--- @field Thickness number
--}}} End of LineHandleAdornment;

--{{{ SphereHandleAdornment
--- @class SphereHandleAdornment : HandleAdornment
--- @field Radius number
--}}} End of SphereHandleAdornment;

--{{{ WireframeHandleAdornment
--- @class WireframeHandleAdornment : HandleAdornment
--- @field AddLine fun( self : WireframeHandleAdornment, from : Vector3, to : Vector3 ) : void
--- @field AddLines fun( self : WireframeHandleAdornment, points : Array ) : void
--- @field AddPath fun( self : WireframeHandleAdornment, points : Array, loop : boolean ) : void
--- @field Clear fun( self : WireframeHandleAdornment ) : void
--}}} End of WireframeHandleAdornment;

--{{{ ParabolaAdornment
--- @class ParabolaAdornment : PVAdornment
--- @field A number
--- @field B number
--- @field C number
--- @field Range number
--- @field Thickness number
--- @field FindPartOnParabola fun( self : ParabolaAdornment, ignoreDescendentsTable : Objects ) : Tuple
--}}} End of ParabolaAdornment;

--{{{ SelectionSphere
--- @class SelectionSphere : PVAdornment
--- @field SurfaceColor BrickColor
--- @field SurfaceColor3 Color3
--- @field SurfaceTransparency number
--}}} End of SelectionSphere;

--{{{ PartAdornment
--- @class PartAdornment : GuiBase3d
--- @field Adornee BasePart
--}}} End of PartAdornment;

--{{{ HandlesBase
--- @class HandlesBase : PartAdornment
--}}} End of HandlesBase;

--{{{ ArcHandles
--- @class ArcHandles : HandlesBase
--- @field Axes Axes
--- @field MouseButton1Down RBXScriptSignal @function( self : ArcHandles, axis : Enum.Axis )
--- @field MouseButton1Up RBXScriptSignal @function( self : ArcHandles, axis : Enum.Axis )
--- @field MouseDrag RBXScriptSignal @function( self : ArcHandles, axis : Enum.Axis, relativeAngle : number, deltaRadius : number )
--- @field MouseEnter RBXScriptSignal @function( self : ArcHandles, axis : Enum.Axis )
--- @field MouseLeave RBXScriptSignal @function( self : ArcHandles, axis : Enum.Axis )
--}}} End of ArcHandles;

--{{{ Handles
--- @class Handles : HandlesBase
--- @field Faces Faces
--- @field Style Enum.HandlesStyle
--- @field MouseButton1Down RBXScriptSignal @function( self : Handles, face : Enum.NormalId )
--- @field MouseButton1Up RBXScriptSignal @function( self : Handles, face : Enum.NormalId )
--- @field MouseDrag RBXScriptSignal @function( self : Handles, face : Enum.NormalId, distance : number )
--- @field MouseEnter RBXScriptSignal @function( self : Handles, face : Enum.NormalId )
--- @field MouseLeave RBXScriptSignal @function( self : Handles, face : Enum.NormalId )
--}}} End of Handles;

--{{{ SurfaceSelection
--- @class SurfaceSelection : PartAdornment
--- @field TargetSurface Enum.NormalId
--}}} End of SurfaceSelection;

--{{{ SelectionLasso
--- @class SelectionLasso : GuiBase3d
--- @field Humanoid Humanoid
--}}} End of SelectionLasso;

--{{{ GuiService
--- @class GuiService : Instance
--- @field AutoSelectGuiEnabled boolean
--- @field CoreEffectFolder Folder
--- @field CoreGuiFolder Folder
--- @field CoreGuiNavigationEnabled boolean
--- @field GuiNavigationEnabled boolean
--- @field IsModalDialog boolean
--- @field IsWindows boolean
--- @field MenuIsOpen boolean
--- @field SelectedCoreObject GuiObject
--- @field SelectedObject GuiObject
--- @field TouchControlsEnabled boolean
--- @field AddCenterDialog fun( self : GuiService, dialog : Instance, centerDialogType : Enum.CenterDialogType, showFunction : Function, hideFunction : Function ) : void
--- @field AddKey fun( self : GuiService, key : string ) : void
--- @field AddSelectionParent fun( self : GuiService, selectionName : string, selectionParent : Instance ) : void
--- @field AddSelectionTuple fun( self : GuiService, selectionName : string, selections : Tuple ) : void
--- @field AddSpecialKey fun( self : GuiService, key : Enum.SpecialKey ) : void
--- @field BroadcastNotification fun( self : GuiService, data : string, notificationType : number ) : void
--- @field ClearError fun( self : GuiService ) : void
--- @field CloseInspectMenu fun( self : GuiService ) : void
--- @field CloseStatsBasedOnInputString fun( self : GuiService, input : string ) : boolean
--- @field ForceTenFootInterface fun( self : GuiService, isForced : boolean ) : void
--- @field GetBrickCount fun( self : GuiService ) : number
--- @field GetClosestDialogToPosition fun( self : GuiService, position : Vector3 ) : Instance
--- @field GetEmotesMenuOpen fun( self : GuiService ) : boolean
--- @field GetErrorCode fun( self : GuiService ) : Enum.ConnectionError
--- @field GetErrorMessage fun( self : GuiService ) : string
--- @field GetErrorType fun( self : GuiService ) : Enum.ConnectionError
--- @field GetGameplayPausedNotificationEnabled fun( self : GuiService ) : boolean
--- @field GetGuiInset fun( self : GuiService ) : Tuple
--- @field GetGuiIsVisible fun( self : GuiService, guiType : Enum.GuiType ) : boolean
--- @field GetInspectMenuEnabled fun( self : GuiService ) : boolean
--- @field GetNotificationTypeList fun( self : GuiService ) : Dictionary
--- @field GetResolutionScale fun( self : GuiService ) : number
--- @field GetSafeZoneOffsets fun( self : GuiService ) : Dictionary
--- @field GetUiMessage fun( self : GuiService ) : string
--- @field InspectPlayerFromHumanoidDescription fun( self : GuiService, humanoidDescription : Instance, name : string ) : void
--- @field InspectPlayerFromUserId fun( self : GuiService, userId : number ) : void
--- @field InspectPlayerFromUserIdWithCtx fun( self : GuiService, userId : number, ctx : string ) : void
--- @field IsMemoryTrackerEnabled fun( self : GuiService ) : boolean
--- @field IsTenFootInterface fun( self : GuiService ) : boolean
--- @field OpenBrowserWindow fun( self : GuiService, url : string ) : void
--- @field OpenNativeOverlay fun( self : GuiService, title : string, url : string ) : void
--- @field RemoveCenterDialog fun( self : GuiService, dialog : Instance ) : void
--- @field RemoveKey fun( self : GuiService, key : string ) : void
--- @field RemoveSelectionGroup fun( self : GuiService, selectionName : string ) : void
--- @field RemoveSpecialKey fun( self : GuiService, key : Enum.SpecialKey ) : void
--- @field Select fun( self : GuiService, selectionParent : Instance ) : void
--- @field SetEmotesMenuOpen fun( self : GuiService, isOpen : boolean ) : void
--- @field SetGameplayPausedNotificationEnabled fun( self : GuiService, enabled : boolean ) : void
--- @field SetGlobalGuiInset fun( self : GuiService, x1 : number, y1 : number, x2 : number, y2 : number ) : void
--- @field SetInspectMenuEnabled fun( self : GuiService, enabled : boolean ) : void
--- @field SetMenuIsOpen fun( self : GuiService, open : boolean, menuName : string ) : void
--- @field SetSafeZoneOffsets fun( self : GuiService, top : number, bottom : number, left : number, right : number ) : void
--- @field SetUiMessage fun( self : GuiService, msgType : Enum.UiMessageType, uiMessage : string ) : void
--- @field ShowStatsBasedOnInputString fun( self : GuiService, input : string ) : boolean
--- @field ToggleFullscreen fun( self : GuiService ) : void
--- @field ToggleGuiIsVisibleIfAllowed fun( self : GuiService, guiType : Enum.GuiType ) : void
--- @field GetScreenResolution fun( self : GuiService ) : Vector2
--- @field BrowserWindowClosed RBXScriptSignal @function( self : GuiService )
--- @field CloseInspectMenuRequest RBXScriptSignal @function( self : GuiService )
--- @field CoreGuiRenderOverflowed RBXScriptSignal @function( self : GuiService )
--- @field EmotesMenuOpenChanged RBXScriptSignal @function( self : GuiService, isOpen : boolean )
--- @field ErrorMessageChanged RBXScriptSignal @function( self : GuiService, newErrorMessage : string )
--- @field GuiVisibilityChangedSignal RBXScriptSignal @function( self : GuiService, guiType : Enum.GuiType, visible : boolean )
--- @field InspectMenuEnabledChangedSignal RBXScriptSignal @function( self : GuiService, enabled : boolean )
--- @field InspectPlayerFromHumanoidDescriptionRequest RBXScriptSignal @function( self : GuiService, humanoidDescription : Instance, name : string )
--- @field InspectPlayerFromUserIdWithCtxRequest RBXScriptSignal @function( self : GuiService, userId : number, ctx : string )
--- @field KeyPressed RBXScriptSignal @function( self : GuiService, key : string, modifiers : string )
--- @field MenuClosed RBXScriptSignal @function( self : GuiService )
--- @field MenuOpened RBXScriptSignal @function( self : GuiService )
--- @field NativeClose RBXScriptSignal @function( self : GuiService )
--- @field NetworkPausedEnabledChanged RBXScriptSignal @function( self : GuiService, enabled : boolean )
--- @field Open9SliceEditor RBXScriptSignal @function( self : GuiService, selectedImageObject : Instance )
--- @field SafeZoneOffsetsChanged RBXScriptSignal @function( self : GuiService )
--- @field ShowLeaveConfirmation RBXScriptSignal @function( self : GuiService )
--- @field SpecialKeyPressed RBXScriptSignal @function( self : GuiService, key : Enum.SpecialKey, modifiers : string )
--- @field UiMessageChanged RBXScriptSignal @function( self : GuiService, msgType : Enum.UiMessageType, newUiMessage : string )
--- @field SendCoreUiNotification fun( self : GuiService, title : string, text : string ) : void @Callback
--}}} End of GuiService;

--{{{ GuidRegistryService
--- @class GuidRegistryService : Instance
--}}} End of GuidRegistryService;

--{{{ HapticService
--- @class HapticService : Instance
--- @field GetMotor fun( self : HapticService, inputType : Enum.UserInputType, vibrationMotor : Enum.VibrationMotor ) : Tuple
--- @field IsMotorSupported fun( self : HapticService, inputType : Enum.UserInputType, vibrationMotor : Enum.VibrationMotor ) : boolean
--- @field IsVibrationSupported fun( self : HapticService, inputType : Enum.UserInputType ) : boolean
--- @field SetMotor fun( self : HapticService, inputType : Enum.UserInputType, vibrationMotor : Enum.VibrationMotor, vibrationValues : Tuple ) : void
--}}} End of HapticService;

--{{{ HeightmapImporterService
--- @class HeightmapImporterService : Instance
--- @field CancelImportHeightmap fun( self : HeightmapImporterService ) : void
--- @field IsValidColormap fun( self : HeightmapImporterService, colormapAssetId : Content ) : Tuple
--- @field IsValidHeightmap fun( self : HeightmapImporterService, heightmapAssetId : Content ) : Tuple
--- @field SetImportHeightmapPaused fun( self : HeightmapImporterService, paused : boolean ) : void
--- @field GetHeightmapPreviewAsync fun( self : HeightmapImporterService, heightmapAssetId : Content ) : Tuple
--- @field ImportHeightmap fun( self : HeightmapImporterService, region : Region3, heightmapAssetId : Content, colormapAssetId : Content, defaultMaterial : Enum.Material ) : void
--- @field ColormapHasUnknownPixels RBXScriptSignal @function( self : HeightmapImporterService )
--- @field ProgressUpdate RBXScriptSignal @function( self : HeightmapImporterService, progressRatio : number, operation : string )
--}}} End of HeightmapImporterService;

--{{{ HiddenSurfaceRemovalAsset
--- @class HiddenSurfaceRemovalAsset : Instance
--}}} End of HiddenSurfaceRemovalAsset;

--{{{ Highlight
--- @class Highlight : Instance
--- @field Adornee Instance
--- @field DepthMode Enum.HighlightDepthMode
--- @field Enabled boolean
--- @field FillColor Color3
--- @field FillTransparency number
--- @field OutlineColor Color3
--- @field OutlineTransparency number
--}}} End of Highlight;

--{{{ HttpRbxApiService
--- @class HttpRbxApiService : Instance
--- @field GetDocumentationUrl fun( self : HttpRbxApiService, partialUrl : string ) : string
--- @field GetAsync fun( self : HttpRbxApiService, apiUrlPath : string, priority : Enum.ThrottlingPriority, httpRequestType : Enum.HttpRequestType ) : string
--- @field GetAsyncFullUrl fun( self : HttpRbxApiService, apiUrl : string, priority : Enum.ThrottlingPriority, httpRequestType : Enum.HttpRequestType ) : string
--- @field PostAsync fun( self : HttpRbxApiService, apiUrlPath : string, data : string, priority : Enum.ThrottlingPriority, content_type : Enum.HttpContentType, httpRequestType : Enum.HttpRequestType ) : string
--- @field PostAsyncFullUrl fun( self : HttpRbxApiService, apiUrl : string, data : string, priority : Enum.ThrottlingPriority, content_type : Enum.HttpContentType, httpRequestType : Enum.HttpRequestType ) : string
--- @field RequestAsync fun( self : HttpRbxApiService, requestOptions : Dictionary, priority : Enum.ThrottlingPriority, content_type : Enum.HttpContentType, httpRequestType : Enum.HttpRequestType ) : string
--- @field RequestLimitedAsync fun( self : HttpRbxApiService, requestOptions : Dictionary, priority : Enum.ThrottlingPriority, content_type : Enum.HttpContentType, httpRequestType : Enum.HttpRequestType ) : string
--}}} End of HttpRbxApiService;

--{{{ HttpRequest
--- @class HttpRequest : Instance
--- @field Cancel fun( self : HttpRequest ) : void
--- @field Start fun( self : HttpRequest, callback : Function ) : void
--}}} End of HttpRequest;

--{{{ HttpService
--- @class HttpService : Instance
--- @field HttpEnabled boolean
--- @field GenerateGUID fun( self : HttpService, wrapInCurlyBraces : boolean ) : string
--- @field GetHttpEnabled fun( self : HttpService ) : boolean
--- @field GetUserAgent fun( self : HttpService ) : string
--- @field JSONDecode fun( self : HttpService, input : string ) : Variant
--- @field JSONEncode fun( self : HttpService, input : Variant ) : string
--- @field RequestInternal fun( self : HttpService, options : Dictionary ) : Instance
--- @field SetHttpEnabled fun( self : HttpService, enabled : boolean ) : void
--- @field UrlEncode fun( self : HttpService, input : string ) : string
--- @field GetAsync fun( self : HttpService, url : string, nocache : boolean, headers : Variant ) : string
--- @field PostAsync fun( self : HttpService, url : string, data : string, content_type : Enum.HttpContentType, compress : boolean, headers : Variant ) : string
--- @field RequestAsync fun( self : HttpService, requestOptions : Dictionary ) : Dictionary
--}}} End of HttpService;

--{{{ Humanoid
--- @class Humanoid : Instance
--- @field AutoJumpEnabled boolean
--- @field AutoRotate boolean
--- @field AutomaticScalingEnabled boolean
--- @field BreakJointsOnDeath boolean
--- @field CameraOffset Vector3
--- @field CollisionType Enum.HumanoidCollisionType
--- @field DisplayDistanceType Enum.HumanoidDisplayDistanceType
--- @field DisplayName string
--- @field FloorMaterial Enum.Material
--- @field Health number
--- @field HealthDisplayDistance number
--- @field HealthDisplayType Enum.HumanoidHealthDisplayType
--- @field HipHeight number
--- @field Jump boolean
--- @field JumpHeight number
--- @field JumpPower number
--- @field LeftLeg BasePart
--- @field MaxHealth number
--- @field MaxSlopeAngle number
--- @field MoveDirection Vector3
--- @field NameDisplayDistance number
--- @field NameOcclusion Enum.NameOcclusion
--- @field PlatformStand boolean
--- @field RequiresNeck boolean
--- @field RigType Enum.HumanoidRigType
--- @field RightLeg BasePart
--- @field RootPart BasePart
--- @field SeatPart BasePart
--- @field Sit boolean
--- @field TargetPoint Vector3
--- @field Torso BasePart
--- @field UseJumpPower boolean
--- @field WalkSpeed number
--- @field WalkToPart BasePart
--- @field WalkToPoint Vector3
--- @field maxHealth number
--- @field AddAccessory fun( self : Humanoid, accessory : Instance ) : void
--- @field AddCustomStatus fun( self : Humanoid, status : string ) : boolean
--- @field AddStatus fun( self : Humanoid, status : Enum.Status ) : boolean
--- @field ApplyDescriptionBlocking fun( self : Humanoid, humanoidDescription : HumanoidDescription ) : void
--- @field BuildRigFromAttachments fun( self : Humanoid ) : void
--- @field CacheDefaults fun( self : Humanoid ) : void
--- @field ChangeState fun( self : Humanoid, state : Enum.HumanoidStateType ) : void
--- @field EquipTool fun( self : Humanoid, tool : Instance ) : void
--- @field GetAccessories fun( self : Humanoid ) : Array
--- @field GetAccessoryHandleScale fun( self : Humanoid, instance : Instance, partType : Enum.BodyPartR15 ) : Vector3
--- @field GetAppliedDescription fun( self : Humanoid ) : HumanoidDescription
--- @field GetBodyPartR15 fun( self : Humanoid, part : Instance ) : Enum.BodyPartR15
--- @field GetLimb fun( self : Humanoid, part : Instance ) : Enum.Limb
--- @field GetPlayingAnimationTracks fun( self : Humanoid ) : Array
--- @field GetState fun( self : Humanoid ) : Enum.HumanoidStateType
--- @field GetStateEnabled fun( self : Humanoid, state : Enum.HumanoidStateType ) : boolean
--- @field GetStatuses fun( self : Humanoid ) : Array
--- @field HasCustomStatus fun( self : Humanoid, status : string ) : boolean
--- @field HasStatus fun( self : Humanoid, status : Enum.Status ) : boolean
--- @field LoadAnimation fun( self : Humanoid, animation : Animation ) : AnimationTrack
--- @field Move fun( self : Humanoid, moveDirection : Vector3, relativeToCamera : boolean ) : void
--- @field MoveTo fun( self : Humanoid, location : Vector3, part : Instance ) : void
--- @field RemoveAccessories fun( self : Humanoid ) : void
--- @field RemoveCustomStatus fun( self : Humanoid, status : string ) : boolean
--- @field RemoveStatus fun( self : Humanoid, status : Enum.Status ) : boolean
--- @field ReplaceBodyPartR15 fun( self : Humanoid, bodyPart : Enum.BodyPartR15, part : BasePart ) : boolean
--- @field SetClickToWalkEnabled fun( self : Humanoid, enabled : boolean ) : void
--- @field SetStateEnabled fun( self : Humanoid, state : Enum.HumanoidStateType, enabled : boolean ) : void
--- @field TakeDamage fun( self : Humanoid, amount : number ) : void
--- @field UnequipTools fun( self : Humanoid ) : void
--- @field loadAnimation fun( self : Humanoid, animation : Animation ) : AnimationTrack
--- @field takeDamage fun( self : Humanoid, amount : number ) : void
--- @field ApplyDescription fun( self : Humanoid, humanoidDescription : HumanoidDescription, assetTypeVerification : Enum.AssetTypeVerification ) : void
--- @field ApplyDescriptionClientServer fun( self : Humanoid, humanoidDescription : HumanoidDescription ) : void
--- @field ApplyDescriptionReset fun( self : Humanoid, humanoidDescription : HumanoidDescription, assetTypeVerification : Enum.AssetTypeVerification ) : void
--- @field PlayEmote fun( self : Humanoid, emoteName : string ) : boolean
--- @field PlayEmoteAndGetAnimTrackById fun( self : Humanoid, emoteId : number ) : Tuple
--- @field AnimationPlayed RBXScriptSignal @function( self : Humanoid, animationTrack : AnimationTrack )
--- @field Climbing RBXScriptSignal @function( self : Humanoid, speed : number )
--- @field ClusterCompositionFinished RBXScriptSignal @function( self : Humanoid )
--- @field CustomStatusAdded RBXScriptSignal @function( self : Humanoid, status : string )
--- @field CustomStatusRemoved RBXScriptSignal @function( self : Humanoid, status : string )
--- @field Died RBXScriptSignal @function( self : Humanoid )
--- @field EmoteTriggered RBXScriptSignal @function( self : Humanoid, success : boolean, animationTrack : AnimationTrack )
--- @field FallingDown RBXScriptSignal @function( self : Humanoid, active : boolean )
--- @field FreeFalling RBXScriptSignal @function( self : Humanoid, active : boolean )
--- @field GettingUp RBXScriptSignal @function( self : Humanoid, active : boolean )
--- @field HealthChanged RBXScriptSignal @function( self : Humanoid, health : number )
--- @field Jumping RBXScriptSignal @function( self : Humanoid, active : boolean )
--- @field MoveToFinished RBXScriptSignal @function( self : Humanoid, reached : boolean )
--- @field PlatformStanding RBXScriptSignal @function( self : Humanoid, active : boolean )
--- @field Ragdoll RBXScriptSignal @function( self : Humanoid, active : boolean )
--- @field Running RBXScriptSignal @function( self : Humanoid, speed : number )
--- @field Seated RBXScriptSignal @function( self : Humanoid, active : boolean, currentSeatPart : BasePart )
--- @field StateChanged RBXScriptSignal @function( self : Humanoid, old : Enum.HumanoidStateType, new : Enum.HumanoidStateType )
--- @field StateEnabledChanged RBXScriptSignal @function( self : Humanoid, state : Enum.HumanoidStateType, isEnabled : boolean )
--- @field StatusAdded RBXScriptSignal @function( self : Humanoid, status : Enum.Status )
--- @field StatusRemoved RBXScriptSignal @function( self : Humanoid, status : Enum.Status )
--- @field Strafing RBXScriptSignal @function( self : Humanoid, active : boolean )
--- @field Swimming RBXScriptSignal @function( self : Humanoid, speed : number )
--- @field Touched RBXScriptSignal @function( self : Humanoid, touchingPart : BasePart, humanoidPart : BasePart )
--}}} End of Humanoid;

--{{{ HumanoidDescription
--- @class HumanoidDescription : Instance
--- @field AccessoryBlob string
--- @field BackAccessory string
--- @field BodyTypeScale number
--- @field ClimbAnimation number
--- @field DepthScale number
--- @field Face number
--- @field FaceAccessory string
--- @field FallAnimation number
--- @field FrontAccessory string
--- @field GraphicTShirt number
--- @field HairAccessory string
--- @field HatAccessory string
--- @field Head number
--- @field HeadColor Color3
--- @field HeadScale number
--- @field HeightScale number
--- @field IdleAnimation number
--- @field JumpAnimation number
--- @field LeftArm number
--- @field LeftArmColor Color3
--- @field LeftLeg number
--- @field LeftLegColor Color3
--- @field MoodAnimation number
--- @field NeckAccessory string
--- @field NumberEmotesLoaded number
--- @field Pants number
--- @field ProportionScale number
--- @field RightArm number
--- @field RightArmColor Color3
--- @field RightLeg number
--- @field RightLegColor Color3
--- @field RunAnimation number
--- @field Shirt number
--- @field ShouldersAccessory string
--- @field SwimAnimation number
--- @field Torso number
--- @field TorsoColor Color3
--- @field WaistAccessory string
--- @field WalkAnimation number
--- @field WidthScale number
--- @field AddEmote fun( self : HumanoidDescription, name : string, assetId : number ) : void
--- @field GetAccessories fun( self : HumanoidDescription, includeRigidAccessories : boolean ) : Array
--- @field GetEmotes fun( self : HumanoidDescription ) : Dictionary
--- @field GetEquippedEmotes fun( self : HumanoidDescription ) : Array
--- @field RemoveEmote fun( self : HumanoidDescription, name : string ) : void
--- @field SetAccessories fun( self : HumanoidDescription, accessories : Array, includeRigidAccessories : boolean ) : void
--- @field SetEmotes fun( self : HumanoidDescription, emotes : Dictionary ) : void
--- @field SetEquippedEmotes fun( self : HumanoidDescription, equippedEmotes : Array ) : void
--- @field EmotesChanged RBXScriptSignal @function( self : HumanoidDescription, newEmotes : Dictionary )
--- @field EquippedEmotesChanged RBXScriptSignal @function( self : HumanoidDescription, newEquippedEmotes : Array )
--}}} End of HumanoidDescription;

--{{{ IKControl
--- @class IKControl : Instance
--- @field ChainRoot Instance
--- @field Enabled boolean
--- @field EndEffector Instance
--- @field Pole Instance
--- @field Priority number
--- @field Target Instance
--- @field Type Enum.IKControlType
--- @field Weight number
--}}} End of IKControl;

--{{{ ILegacyStudioBridge
--- @class ILegacyStudioBridge : Instance
--}}} End of ILegacyStudioBridge;

--{{{ LegacyStudioBridge
--- @class LegacyStudioBridge : ILegacyStudioBridge
--}}} End of LegacyStudioBridge;

--{{{ IXPService
--- @class IXPService : Instance
--- @field ClearUserLayers fun( self : IXPService ) : void
--- @field GetBrowserTrackerLayerLoadingStatus fun( self : IXPService ) : Enum.IXPLoadingStatus
--- @field GetBrowserTrackerLayerVariables fun( self : IXPService, layerName : string ) : Dictionary
--- @field GetBrowserTrackerStatusForLayer fun( self : IXPService, layerName : string ) : Enum.IXPLoadingStatus?
--- @field GetUserLayerLoadingStatus fun( self : IXPService ) : Enum.IXPLoadingStatus
--- @field GetUserLayerVariables fun( self : IXPService, layerName : string ) : Dictionary
--- @field GetUserStatusForLayer fun( self : IXPService, layerName : string ) : Enum.IXPLoadingStatus?
--- @field InitializeUserLayers fun( self : IXPService, userId : number ) : void
--- @field LogBrowserTrackerLayerExposure fun( self : IXPService, layerName : string ) : void
--- @field LogUserLayerExposure fun( self : IXPService, layerName : string ) : void
--- @field RegisterUserLayers fun( self : IXPService, userLayers : Variant ) : void
--- @field OnBrowserTrackerLayerLoadingStatusChanged RBXScriptSignal @function( self : IXPService, status : Enum.IXPLoadingStatus )
--- @field OnUserLayerLoadingStatusChanged RBXScriptSignal @function( self : IXPService, status : Enum.IXPLoadingStatus )
--}}} End of IXPService;

--{{{ ImporterBaseSettings
--- @class ImporterBaseSettings : Instance
--- @field Id string
--- @field ImportName string
--- @field ShouldImport boolean
--- @field GetStatuses fun( self : ImporterBaseSettings ) : Dictionary
--}}} End of ImporterBaseSettings;

--{{{ ImporterAnimationSettings
--- @class ImporterAnimationSettings : ImporterBaseSettings
--}}} End of ImporterAnimationSettings;

--{{{ ImporterFacsSettings
--- @class ImporterFacsSettings : ImporterBaseSettings
--}}} End of ImporterFacsSettings;

--{{{ ImporterGroupSettings
--- @class ImporterGroupSettings : ImporterBaseSettings
--- @field Anchored boolean
--- @field ImportAsModelAsset boolean
--- @field InsertInWorkspace boolean
--}}} End of ImporterGroupSettings;

--{{{ ImporterJointSettings
--- @class ImporterJointSettings : ImporterBaseSettings
--}}} End of ImporterJointSettings;

--{{{ ImporterMaterialSettings
--- @class ImporterMaterialSettings : ImporterBaseSettings
--- @field DiffuseFilePath string
--- @field IsPbr boolean
--- @field MetalnessFilePath string
--- @field NormalFilePath string
--- @field RoughnessFilePath string
--}}} End of ImporterMaterialSettings;

--{{{ ImporterMeshSettings
--- @class ImporterMeshSettings : ImporterBaseSettings
--- @field Anchored boolean
--- @field CageManifold boolean
--- @field CageMeshIntersectedPreview boolean
--- @field CageMeshNotIntersected boolean
--- @field CageNoOverlappingVertices boolean
--- @field CageNonManifoldPreview boolean
--- @field CageOverlappingVerticesPreview boolean
--- @field CageUVMatched boolean
--- @field CageUVMisMatchedPreview boolean
--- @field Dimensions Vector3
--- @field DoubleSided boolean
--- @field IgnoreVertexColors boolean
--- @field IrrelevantCageModifiedPreview boolean
--- @field MeshHoleDetectedPreview boolean
--- @field MeshNoHoleDetected boolean
--- @field NoIrrelevantCageModified boolean
--- @field NoOuterCageFarExtendedFromMesh boolean
--- @field OuterCageFarExtendedFromMeshPreview boolean
--- @field PolygonCount number
--- @field UseImportedPivot boolean
--}}} End of ImporterMeshSettings;

--{{{ ImporterRootSettings
--- @class ImporterRootSettings : ImporterBaseSettings
--- @field Anchored boolean
--- @field FileDimensions Vector3
--- @field ImportAsModelAsset boolean
--- @field InsertInWorkspace boolean
--- @field InsertWithScenePosition boolean
--- @field InvertNegativeFaces boolean
--- @field MergeMeshes boolean
--- @field PolygonCount number
--- @field RigType Enum.RigType
--- @field ScaleUnit Enum.MeshScaleUnit
--- @field UseSceneOriginAsPivot boolean
--- @field WorldForward Enum.NormalId
--- @field WorldUp Enum.NormalId
--}}} End of ImporterRootSettings;

--{{{ IncrementalPatchBuilder
--- @class IncrementalPatchBuilder : Instance
--}}} End of IncrementalPatchBuilder;

--{{{ InputObject
--- @class InputObject : Instance
--- @field Delta Vector3
--- @field KeyCode Enum.KeyCode
--- @field Position Vector3
--- @field UserInputState Enum.UserInputState
--- @field UserInputType Enum.UserInputType
--- @field IsModifierKeyDown fun( self : InputObject, modifierKey : Enum.ModifierKey ) : boolean
--}}} End of InputObject;

--{{{ InsertService
--- @class InsertService : Instance
--- @field AllowClientInsertModels boolean
--- @field AllowInsertFreeModels boolean
--- @field ApproveAssetId fun( self : InsertService, assetId : number ) : void
--- @field ApproveAssetVersionId fun( self : InsertService, assetVersionId : number ) : void
--- @field Insert fun( self : InsertService, instance : Instance ) : void
--- @field LoadLocalAsset fun( self : InsertService, assetPath : string ) : Instance
--- @field LoadPackageAsset fun( self : InsertService, url : Content ) : Objects
--- @field CreateMeshPartAsync fun( self : InsertService, meshId : Content, collisionFidelity : Enum.CollisionFidelity, renderFidelity : Enum.RenderFidelity ) : MeshPart
--- @field GetBaseCategories fun( self : InsertService ) : Array
--- @field GetBaseSets fun( self : InsertService ) : Array
--- @field GetCollection fun( self : InsertService, categoryId : number ) : Array
--- @field GetFreeDecals fun( self : InsertService, searchText : string, pageNum : number ) : Array
--- @field GetFreeModels fun( self : InsertService, searchText : string, pageNum : number ) : Array
--- @field GetLatestAssetVersionAsync fun( self : InsertService, assetId : number ) : number
--- @field GetUserCategories fun( self : InsertService, userId : number ) : Array
--- @field GetUserSets fun( self : InsertService, userId : number ) : Array
--- @field LoadAsset fun( self : InsertService, assetId : number ) : Instance
--- @field LoadAssetVersion fun( self : InsertService, assetVersionId : number ) : Instance
--- @field LoadPackageAssetAsync fun( self : InsertService, url : Content ) : Objects
--- @field loadAsset fun( self : InsertService, assetId : number ) : Instance
--}}} End of InsertService;

--{{{ JointInstance
--- @class JointInstance : Instance
--- @field Active boolean
--- @field C0 CFrame
--- @field C1 CFrame
--- @field Enabled boolean
--- @field Part0 BasePart
--- @field Part1 BasePart
--- @field part1 BasePart
--}}} End of JointInstance;

--{{{ DynamicRotate
--- @class DynamicRotate : JointInstance
--- @field BaseAngle number
--}}} End of DynamicRotate;

--{{{ Motor
--- @class Motor : JointInstance
--- @field CurrentAngle number
--- @field DesiredAngle number
--- @field MaxVelocity number
--- @field SetDesiredAngle fun( self : Motor, value : number ) : void
--}}} End of Motor;

--{{{ Motor6D
--- @class Motor6D : Motor
--- @field ChildName string
--- @field ParentName string
--- @field Transform CFrame
--}}} End of Motor6D;

--{{{ VelocityMotor
--- @class VelocityMotor : JointInstance
--- @field CurrentAngle number
--- @field DesiredAngle number
--- @field Hole Hole
--- @field MaxVelocity number
--}}} End of VelocityMotor;

--{{{ Weld
--- @class Weld : JointInstance
--}}} End of Weld;

--{{{ KeyboardService
--- @class KeyboardService : Instance
--}}} End of KeyboardService;

--{{{ Keyframe
--- @class Keyframe : Instance
--- @field Time number
--- @field AddMarker fun( self : Keyframe, marker : Instance ) : void
--- @field AddPose fun( self : Keyframe, pose : Instance ) : void
--- @field GetMarkers fun( self : Keyframe ) : Objects
--- @field GetPoses fun( self : Keyframe ) : Objects
--- @field RemoveMarker fun( self : Keyframe, marker : Instance ) : void
--- @field RemovePose fun( self : Keyframe, pose : Instance ) : void
--}}} End of Keyframe;

--{{{ KeyframeMarker
--- @class KeyframeMarker : Instance
--- @field Value string
--}}} End of KeyframeMarker;

--{{{ KeyframeSequenceProvider
--- @class KeyframeSequenceProvider : Instance
--- @field GetKeyframeSequence fun( self : KeyframeSequenceProvider, assetId : Content ) : Instance
--- @field GetKeyframeSequenceById fun( self : KeyframeSequenceProvider, assetId : number, useCache : boolean ) : Instance
--- @field GetMemStats fun( self : KeyframeSequenceProvider ) : Dictionary
--- @field RegisterActiveKeyframeSequence fun( self : KeyframeSequenceProvider, keyframeSequence : Instance ) : Content
--- @field RegisterKeyframeSequence fun( self : KeyframeSequenceProvider, keyframeSequence : Instance ) : Content
--- @field GetAnimations fun( self : KeyframeSequenceProvider, userId : number ) : Instance
--- @field GetKeyframeSequenceAsync fun( self : KeyframeSequenceProvider, assetId : Content ) : Instance
--}}} End of KeyframeSequenceProvider;

--{{{ LSPFileSyncService
--- @class LSPFileSyncService : Instance
--}}} End of LSPFileSyncService;

--{{{ LanguageService
--- @class LanguageService : Instance
--}}} End of LanguageService;

--{{{ Light
--- @class Light : Instance
--- @field Brightness number
--- @field Color Color3
--- @field Enabled boolean
--- @field Shadows boolean
--}}} End of Light;

--{{{ PointLight
--- @class PointLight : Light
--- @field Range number
--}}} End of PointLight;

--{{{ SpotLight
--- @class SpotLight : Light
--- @field Angle number
--- @field Face Enum.NormalId
--- @field Range number
--}}} End of SpotLight;

--{{{ SurfaceLight
--- @class SurfaceLight : Light
--- @field Angle number
--- @field Face Enum.NormalId
--- @field Range number
--}}} End of SurfaceLight;

--{{{ Lighting
--- @class Lighting : Instance
--- @field Ambient Color3
--- @field Brightness number
--- @field ClockTime number
--- @field ColorShift_Bottom Color3
--- @field ColorShift_Top Color3
--- @field EnvironmentDiffuseScale number
--- @field EnvironmentSpecularScale number
--- @field ExposureCompensation number
--- @field FogColor Color3
--- @field FogEnd number
--- @field FogStart number
--- @field GeographicLatitude number
--- @field GlobalShadows boolean
--- @field OutdoorAmbient Color3
--- @field Outlines boolean
--- @field ShadowColor Color3
--- @field ShadowSoftness number
--- @field Technology Enum.Technology
--- @field TempUseNewSkyRemovalBehaviour boolean
--- @field TimeOfDay string
--- @field GetMinutesAfterMidnight fun( self : Lighting ) : number
--- @field GetMoonDirection fun( self : Lighting ) : Vector3
--- @field GetMoonPhase fun( self : Lighting ) : number
--- @field GetSunDirection fun( self : Lighting ) : Vector3
--- @field SetMinutesAfterMidnight fun( self : Lighting, minutes : number ) : void
--- @field getMinutesAfterMidnight fun( self : Lighting ) : number
--- @field setMinutesAfterMidnight fun( self : Lighting, minutes : number ) : void
--- @field LightingChanged RBXScriptSignal @function( self : Lighting, skyChanged : boolean )
--}}} End of Lighting;

--{{{ LocalStorageService
--- @class LocalStorageService : Instance
--- @field Flush fun( self : LocalStorageService ) : void
--- @field GetItem fun( self : LocalStorageService, key : string ) : string
--- @field SetItem fun( self : LocalStorageService, key : string, value : string ) : void
--- @field WhenLoaded fun( self : LocalStorageService, callback : Function ) : void
--- @field ItemWasSet RBXScriptSignal @function( self : LocalStorageService, key : string, value : string )
--- @field StoreWasCleared RBXScriptSignal @function( self : LocalStorageService )
--}}} End of LocalStorageService;

--{{{ AppStorageService
--- @class AppStorageService : LocalStorageService
--}}} End of AppStorageService;

--{{{ UserStorageService
--- @class UserStorageService : LocalStorageService
--}}} End of UserStorageService;

--{{{ LocalizationService
--- @class LocalizationService : Instance
--- @field ForcePlayModeGameLocaleId string
--- @field ForcePlayModeRobloxLocaleId string
--- @field IsTextScraperRunning boolean
--- @field RobloxForcePlayModeGameLocaleId string
--- @field RobloxForcePlayModeRobloxLocaleId string
--- @field RobloxLocaleId string
--- @field SystemLocaleId string
--- @field GetCorescriptLocalizations fun( self : LocalizationService ) : Objects
--- @field GetTableEntries fun( self : LocalizationService, instance : Instance ) : Array
--- @field GetTranslatorForPlayer fun( self : LocalizationService, player : Instance ) : Instance
--- @field SetExperienceSettingsLocaleId fun( self : LocalizationService, locale : string ) : void
--- @field SetRobloxLocaleId fun( self : LocalizationService, locale : string ) : void
--- @field StartTextScraper fun( self : LocalizationService ) : void
--- @field StopTextScraper fun( self : LocalizationService ) : void
--- @field GetCountryRegionForPlayerAsync fun( self : LocalizationService, player : Instance ) : string
--- @field GetTranslatorForLocaleAsync fun( self : LocalizationService, locale : string ) : Instance
--- @field GetTranslatorForPlayerAsync fun( self : LocalizationService, player : Instance ) : Instance
--- @field PromptDownloadGameTableToCSV fun( self : LocalizationService, table : Instance ) : void
--- @field PromptExportToCSVs fun( self : LocalizationService ) : void
--- @field PromptImportFromCSVs fun( self : LocalizationService ) : void
--- @field PromptUploadCSVToGameTable fun( self : LocalizationService ) : Instance
--- @field AutoTranslateWillRun RBXScriptSignal @function( self : LocalizationService )
--}}} End of LocalizationService;

--{{{ LocalizationTable
--- @class LocalizationTable : Instance
--- @field DevelopmentLanguage string
--- @field Root Instance
--- @field SourceLocaleId string
--- @field GetContents fun( self : LocalizationTable ) : string
--- @field GetEntries fun( self : LocalizationTable ) : Array
--- @field GetString fun( self : LocalizationTable, targetLocaleId : string, key : string ) : string
--- @field GetTranslator fun( self : LocalizationTable, localeId : string ) : Instance
--- @field RemoveEntry fun( self : LocalizationTable, key : string, source : string, context : string ) : void
--- @field RemoveEntryValue fun( self : LocalizationTable, key : string, source : string, context : string, localeId : string ) : void
--- @field RemoveKey fun( self : LocalizationTable, key : string ) : void
--- @field RemoveTargetLocale fun( self : LocalizationTable, localeId : string ) : void
--- @field SetContents fun( self : LocalizationTable, contents : string ) : void
--- @field SetEntries fun( self : LocalizationTable, entries : Variant ) : void
--- @field SetEntry fun( self : LocalizationTable, key : string, targetLocaleId : string, text : string ) : void
--- @field SetEntryContext fun( self : LocalizationTable, key : string, source : string, context : string, newContext : string ) : void
--- @field SetEntryExample fun( self : LocalizationTable, key : string, source : string, context : string, example : string ) : void
--- @field SetEntryKey fun( self : LocalizationTable, key : string, source : string, context : string, newKey : string ) : void
--- @field SetEntrySource fun( self : LocalizationTable, key : string, source : string, context : string, newSource : string ) : void
--- @field SetEntryValue fun( self : LocalizationTable, key : string, source : string, context : string, localeId : string, text : string ) : void
--- @field SetIsExemptFromUGCAnalytics fun( self : LocalizationTable, value : boolean ) : void
--}}} End of LocalizationTable;

--{{{ LodDataEntity
--- @class LodDataEntity : Instance
--- @field EntityLodEnabled boolean
--}}} End of LodDataEntity;

--{{{ LodDataService
--- @class LodDataService : Instance
--}}} End of LodDataService;

--{{{ LogService
--- @class LogService : Instance
--- @field ExecuteScript fun( self : LogService, source : string ) : void
--- @field GetHttpResultHistory fun( self : LogService ) : Array
--- @field GetLogHistory fun( self : LogService ) : Array
--- @field RequestHttpResultApproved fun( self : LogService ) : void
--- @field RequestServerHttpResult fun( self : LogService ) : void
--- @field RequestServerOutput fun( self : LogService ) : void
--- @field HttpResultOut RBXScriptSignal @function( self : LogService, httpResult : Dictionary )
--- @field MessageOut RBXScriptSignal @function( self : LogService, message : string, messageType : Enum.MessageType )
--- @field OnHttpResultApproved RBXScriptSignal @function( self : LogService, isApproved : boolean )
--- @field ServerHttpResultOut RBXScriptSignal @function( self : LogService, httpResult : Dictionary )
--- @field ServerMessageOut RBXScriptSignal @function( self : LogService, message : string, messageType : Enum.MessageType, timestamp : number )
--}}} End of LogService;

--{{{ LoginService
--- @class LoginService : Instance
--- @field Logout fun( self : LoginService ) : void
--- @field PromptLogin fun( self : LoginService ) : void
--- @field LoginFailed RBXScriptSignal @function( self : LoginService, loginError : string )
--- @field LoginSucceeded RBXScriptSignal @function( self : LoginService, username : string )
--}}} End of LoginService;

--{{{ LuaSettings
--- @class LuaSettings : Instance
--}}} End of LuaSettings;

--{{{ LuaSourceContainer
--- @class LuaSourceContainer : Instance
--- @field CurrentEditor Instance
--}}} End of LuaSourceContainer;

--{{{ BaseScript
--- @class BaseScript : LuaSourceContainer
--- @field Disabled boolean
--- @field Enabled boolean
--- @field LinkedSource Content
--- @field RunContext Enum.RunContext
--}}} End of BaseScript;

--{{{ CoreScript
--- @class CoreScript : BaseScript
--}}} End of CoreScript;

--{{{ Script
--- @class Script : BaseScript
--- @field Source ProtectedString
--- @field GetHash fun( self : Script ) : string
--}}} End of Script;

--{{{ LocalScript
--- @class LocalScript : Script
--}}} End of LocalScript;

--{{{ ModuleScript
--- @class ModuleScript : LuaSourceContainer
--- @field LinkedSource Content
--- @field Source ProtectedString
--}}} End of ModuleScript;

--{{{ LuaWebService
--- @class LuaWebService : Instance
--}}} End of LuaWebService;

--{{{ LuauScriptAnalyzerService
--- @class LuauScriptAnalyzerService : Instance
--}}} End of LuauScriptAnalyzerService;

--{{{ MarkerCurve
--- @class MarkerCurve : Instance
--- @field Length number
--- @field GetMarkerAtIndex fun( self : MarkerCurve, index : number ) : Dictionary
--- @field GetMarkers fun( self : MarkerCurve ) : Array
--- @field InsertMarkerAtTime fun( self : MarkerCurve, time : number, marker : string ) : Array
--- @field RemoveMarkerAtIndex fun( self : MarkerCurve, startingIndex : number, count : number ) : number
--}}} End of MarkerCurve;

--{{{ MarketplaceService
--- @class MarketplaceService : Instance
--- @field PlayerCanMakePurchases fun( self : MarketplaceService, player : Instance ) : boolean
--- @field PromptBundlePurchase fun( self : MarketplaceService, player : Instance, bundleId : number ) : void
--- @field PromptGamePassPurchase fun( self : MarketplaceService, player : Instance, gamePassId : number ) : void
--- @field PromptNativePurchase fun( self : MarketplaceService, player : Instance, productId : string ) : void
--- @field PromptPremiumPurchase fun( self : MarketplaceService, player : Instance ) : void
--- @field PromptProductPurchase fun( self : MarketplaceService, player : Instance, productId : number, equipIfPurchased : boolean, currencyType : Enum.CurrencyType ) : void
--- @field PromptPurchase fun( self : MarketplaceService, player : Instance, assetId : number, equipIfPurchased : boolean, currencyType : Enum.CurrencyType ) : void
--- @field PromptRobloxPurchase fun( self : MarketplaceService, assetId : number, equipIfPurchased : boolean ) : void
--- @field PromptSubscriptionCancellation fun( self : MarketplaceService, player : Instance, subscriptionId : number ) : void
--- @field PromptSubscriptionPurchase fun( self : MarketplaceService, player : Instance, subscriptionId : number ) : void
--- @field PromptThirdPartyPurchase fun( self : MarketplaceService, player : Instance, productId : string ) : void
--- @field ReportAssetSale fun( self : MarketplaceService, assetId : string, robuxAmount : number ) : void
--- @field ReportRobuxUpsellStarted fun( self : MarketplaceService ) : void
--- @field SignalAssetTypePurchased fun( self : MarketplaceService, player : Instance, assetType : Enum.AssetType ) : void
--- @field SignalClientPurchaseSuccess fun( self : MarketplaceService, ticket : string, playerId : number, productId : number ) : void
--- @field SignalMockPurchasePremium fun( self : MarketplaceService ) : void
--- @field SignalPromptBundlePurchaseFinished fun( self : MarketplaceService, player : Instance, bundleId : number, success : boolean ) : void
--- @field SignalPromptGamePassPurchaseFinished fun( self : MarketplaceService, player : Instance, gamePassId : number, success : boolean ) : void
--- @field SignalPromptPremiumPurchaseFinished fun( self : MarketplaceService, didTryPurchasing : boolean ) : void
--- @field SignalPromptProductPurchaseFinished fun( self : MarketplaceService, userId : number, productId : number, success : boolean ) : void
--- @field SignalPromptPurchaseFinished fun( self : MarketplaceService, player : Instance, assetId : number, success : boolean ) : void
--- @field SignalPromptSubscriptionCancellationFinished fun( self : MarketplaceService, player : Instance, subscriptionId : number, wasCanceled : boolean ) : void
--- @field SignalPromptSubscriptionPurchaseFinished fun( self : MarketplaceService, player : Instance, subscriptionId : number, wasPurchased : boolean ) : void
--- @field SignalServerLuaDialogClosed fun( self : MarketplaceService, value : boolean ) : void
--- @field GetDeveloperProductsAsync fun( self : MarketplaceService ) : Instance
--- @field GetProductInfo fun( self : MarketplaceService, assetId : number, infoType : Enum.InfoType ) : Dictionary
--- @field GetRobuxBalance fun( self : MarketplaceService ) : number
--- @field IsPlayerSubscribed fun( self : MarketplaceService, player : Instance, subscriptionId : number ) : boolean
--- @field PerformPurchase fun( self : MarketplaceService, infoType : Enum.InfoType, productId : number, expectedPrice : number, requestId : string, isRobloxPurchase : boolean ) : Dictionary
--- @field PlayerOwnsAsset fun( self : MarketplaceService, player : Instance, assetId : number ) : boolean
--- @field PlayerOwnsBundle fun( self : MarketplaceService, player : Player, bundleId : number ) : boolean
--- @field UserOwnsGamePassAsync fun( self : MarketplaceService, userId : number, gamePassId : number ) : boolean
--- @field ClientLuaDialogRequested RBXScriptSignal @function( self : MarketplaceService, arguments : Tuple )
--- @field ClientPurchaseSuccess RBXScriptSignal @function( self : MarketplaceService, ticket : string, playerId : number, productId : number )
--- @field NativePurchaseFinished RBXScriptSignal @function( self : MarketplaceService, player : Instance, productId : string, wasPurchased : boolean )
--- @field PromptBundlePurchaseFinished RBXScriptSignal @function( self : MarketplaceService, player : Instance, bundleId : number, wasPurchased : boolean )
--- @field PromptBundlePurchaseRequested RBXScriptSignal @function( self : MarketplaceService, player : Instance, bundleId : number )
--- @field PromptGamePassPurchaseFinished RBXScriptSignal @function( self : MarketplaceService, player : Instance, gamePassId : number, wasPurchased : boolean )
--- @field PromptGamePassPurchaseRequested RBXScriptSignal @function( self : MarketplaceService, player : Instance, gamePassId : number )
--- @field PromptPremiumPurchaseFinished RBXScriptSignal @function( self : MarketplaceService )
--- @field PromptPremiumPurchaseRequested RBXScriptSignal @function( self : MarketplaceService, player : Instance )
--- @field PromptProductPurchaseFinished RBXScriptSignal @function( self : MarketplaceService, userId : number, productId : number, isPurchased : boolean )
--- @field PromptProductPurchaseRequested RBXScriptSignal @function( self : MarketplaceService, player : Instance, productId : number, equipIfPurchased : boolean, currencyType : Enum.CurrencyType )
--- @field PromptPurchaseFinished RBXScriptSignal @function( self : MarketplaceService, player : Instance, assetId : number, isPurchased : boolean )
--- @field PromptPurchaseRequested RBXScriptSignal @function( self : MarketplaceService, player : Instance, assetId : number, equipIfPurchased : boolean, currencyType : Enum.CurrencyType )
--- @field PromptRobloxPurchaseRequested RBXScriptSignal @function( self : MarketplaceService, assetId : number, equipIfPurchased : boolean )
--- @field PromptSubscriptionCancellationFinished RBXScriptSignal @function( self : MarketplaceService, player : Instance, subscriptionId : number, wasCanceled : boolean )
--- @field PromptSubscriptionCancellationRequested RBXScriptSignal @function( self : MarketplaceService, player : Instance, subscriptionId : number )
--- @field PromptSubscriptionPurchaseFinished RBXScriptSignal @function( self : MarketplaceService, player : Instance, subscriptionId : number, wasPurchased : boolean )
--- @field PromptSubscriptionPurchaseRequested RBXScriptSignal @function( self : MarketplaceService, player : Instance, subscriptionId : number )
--- @field ServerPurchaseVerification RBXScriptSignal @function( self : MarketplaceService, serverResponseTable : Dictionary )
--- @field ThirdPartyPurchaseFinished RBXScriptSignal @function( self : MarketplaceService, player : Instance, productId : string, receipt : string, wasPurchased : boolean )
--- @field ProcessReceipt fun( self : MarketplaceService, receiptInfo : Dictionary ) : Enum.ProductPurchaseDecision @Callback
--}}} End of MarketplaceService;

--{{{ MaterialService
--- @class MaterialService : Instance
--- @field AsphaltName string
--- @field BasaltName string
--- @field BrickName string
--- @field CobblestoneName string
--- @field ConcreteName string
--- @field CorrodedMetalName string
--- @field CrackedLavaName string
--- @field DiamondPlateName string
--- @field FabricName string
--- @field FoilName string
--- @field GlacierName string
--- @field GraniteName string
--- @field GrassName string
--- @field GroundName string
--- @field IceName string
--- @field LeafyGrassName string
--- @field LimestoneName string
--- @field MarbleName string
--- @field MetalName string
--- @field MudName string
--- @field PavementName string
--- @field PebbleName string
--- @field PlasticName string
--- @field RockName string
--- @field SaltName string
--- @field SandName string
--- @field SandstoneName string
--- @field SlateName string
--- @field SmoothPlasticName string
--- @field SnowName string
--- @field Use2022Materials boolean
--- @field WoodName string
--- @field WoodPlanksName string
--- @field GetBaseMaterialOverride fun( self : MaterialService, material : Enum.Material ) : string
--- @field GetMaterialOverrideChanged fun( self : MaterialService, material : Enum.Material ) : RBXScriptSignal
--- @field GetMaterialVariant fun( self : MaterialService, material : Enum.Material, name : string ) : MaterialVariant
--- @field GetOverrideStatus fun( self : MaterialService, material : Enum.Material ) : Enum.PropertyStatus
--- @field SetBaseMaterialOverride fun( self : MaterialService, material : Enum.Material, name : string ) : void
--- @field OverrideStatusChanged RBXScriptSignal @function( self : MaterialService, material : Enum.Material )
--}}} End of MaterialService;

--{{{ MaterialVariant
--- @class MaterialVariant : Instance
--- @field BaseMaterial Enum.Material
--- @field ColorMap Content
--- @field CustomPhysicalProperties PhysicalProperties
--- @field MaterialPattern Enum.MaterialPattern
--- @field MetalnessMap Content
--- @field NormalMap Content
--- @field RoughnessMap Content
--- @field StudsPerTile number
--}}} End of MaterialVariant;

--{{{ MemStorageConnection
--- @class MemStorageConnection : Instance
--- @field Disconnect fun( self : MemStorageConnection ) : void
--}}} End of MemStorageConnection;

--{{{ MemStorageService
--- @class MemStorageService : Instance
--- @field Bind fun( self : MemStorageService, key : string, callback : Function ) : MemStorageConnection
--- @field BindAndFire fun( self : MemStorageService, key : string, callback : Function ) : MemStorageConnection
--- @field Call fun( self : MemStorageService, key : string, input : Variant ) : Variant
--- @field Fire fun( self : MemStorageService, key : string, value : string ) : void
--- @field GetItem fun( self : MemStorageService, key : string, defaultValue : string ) : string
--- @field HasItem fun( self : MemStorageService, key : string ) : boolean
--- @field RemoveItem fun( self : MemStorageService, key : string ) : boolean
--- @field SetItem fun( self : MemStorageService, key : string, value : string ) : void
--}}} End of MemStorageService;

--{{{ MemoryStoreQueue
--- @class MemoryStoreQueue : Instance
--- @field AddAsync fun( self : MemoryStoreQueue, value : Variant, expiration : number, priority : number ) : void
--- @field ReadAsync fun( self : MemoryStoreQueue, count : number, allOrNothing : boolean, waitTimeout : number ) : Tuple
--- @field RemoveAsync fun( self : MemoryStoreQueue, id : string ) : void
--}}} End of MemoryStoreQueue;

--{{{ MemoryStoreService
--- @class MemoryStoreService : Instance
--- @field GetQueue fun( self : MemoryStoreService, name : string, invisibilityTimeout : number ) : MemoryStoreQueue
--- @field GetSortedMap fun( self : MemoryStoreService, name : string ) : MemoryStoreSortedMap
--}}} End of MemoryStoreService;

--{{{ MemoryStoreSortedMap
--- @class MemoryStoreSortedMap : Instance
--- @field GetAsync fun( self : MemoryStoreSortedMap, key : string ) : Variant
--- @field GetRangeAsync fun( self : MemoryStoreSortedMap, direction : Enum.SortDirection, count : number, exclusiveLowerBound : string, exclusiveUpperBound : string ) : Array
--- @field RemoveAsync fun( self : MemoryStoreSortedMap, key : string ) : void
--- @field SetAsync fun( self : MemoryStoreSortedMap, key : string, value : Variant, expiration : number ) : boolean
--- @field UpdateAsync fun( self : MemoryStoreSortedMap, key : string, transformFunction : Function, expiration : number ) : Variant
--}}} End of MemoryStoreSortedMap;

--{{{ MessageBusConnection
--- @class MessageBusConnection : Instance
--- @field Disconnect fun( self : MessageBusConnection ) : void
--}}} End of MessageBusConnection;

--{{{ MessageBusService
--- @class MessageBusService : Instance
--- @field Call fun( self : MessageBusService, key : string, input : Variant ) : Variant
--- @field GetLast fun( self : MessageBusService, mid : string ) : Variant
--- @field GetMessageId fun( self : MessageBusService, domainName : string, messageName : string ) : string
--- @field GetProtocolMethodRequestMessageId fun( self : MessageBusService, protocolName : string, methodName : string ) : string
--- @field GetProtocolMethodResponseMessageId fun( self : MessageBusService, protocolName : string, methodName : string ) : string
--- @field Publish fun( self : MessageBusService, mid : string, params : Variant ) : void
--- @field PublishProtocolMethodRequest fun( self : MessageBusService, protocolName : string, methodName : string, message : Variant, customTelemetryData : Variant ) : void
--- @field PublishProtocolMethodResponse fun( self : MessageBusService, protocolName : string, methodName : string, message : Variant, responseCode : number, customTelemetryData : Variant ) : void
--- @field Subscribe fun( self : MessageBusService, mid : string, callback : Function, once : boolean, sticky : boolean ) : Instance
--- @field SubscribeToProtocolMethodRequest fun( self : MessageBusService, protocolName : string, methodName : string, callback : Function, once : boolean, sticky : boolean ) : Instance
--- @field SubscribeToProtocolMethodResponse fun( self : MessageBusService, protocolName : string, methodName : string, callback : Function, once : boolean, sticky : boolean ) : Instance
--}}} End of MessageBusService;

--{{{ MessagingService
--- @class MessagingService : Instance
--- @field PublishAsync fun( self : MessagingService, topic : string, message : Variant ) : void
--- @field SubscribeAsync fun( self : MessagingService, topic : string, callback : Function ) : RBXScriptConnection
--}}} End of MessagingService;

--{{{ MetaBreakpoint
--- @class MetaBreakpoint : Instance
--- @field Condition string
--- @field ContinueExecution boolean
--- @field Enabled boolean
--- @field Id number
--- @field IsLogpoint boolean
--- @field Line number
--- @field LogMessage string
--- @field Script string
--- @field Valid boolean
--- @field GetContextBreakpoints fun( self : MetaBreakpoint ) : Dictionary
--- @field Remove fun( self : MetaBreakpoint, status : Function ) : number
--- @field SetChildBreakpointEnabledByScriptAndContext fun( self : MetaBreakpoint, script : string, contextGST : number, enabled : boolean ) : void
--- @field SetContextEnabled fun( self : MetaBreakpoint, context : number, enabled : boolean ) : void
--- @field SetContinueExecution fun( self : MetaBreakpoint, enabled : boolean ) : void
--- @field SetEnabled fun( self : MetaBreakpoint, enabled : boolean ) : void
--- @field SetLine fun( self : MetaBreakpoint, line : number, status : Function ) : number
--}}} End of MetaBreakpoint;

--{{{ MetaBreakpointContext
--- @class MetaBreakpointContext : Instance
--}}} End of MetaBreakpointContext;

--{{{ MetaBreakpointManager
--- @class MetaBreakpointManager : Instance
--- @field AddBreakpoint fun( self : MetaBreakpointManager, script : Instance, line : number, condition : Instance ) : Instance
--- @field GetBreakpointById fun( self : MetaBreakpointManager, metaBreakpointId : number ) : MetaBreakpoint
--- @field RemoveBreakpointById fun( self : MetaBreakpointManager, metaBreakpointId : number ) : void
--- @field MetaBreakpointAdded RBXScriptSignal @function( self : MetaBreakpointManager, breakpoint : MetaBreakpoint )
--- @field MetaBreakpointChanged RBXScriptSignal @function( self : MetaBreakpointManager, breakpoint : MetaBreakpoint )
--- @field MetaBreakpointRemoved RBXScriptSignal @function( self : MetaBreakpointManager, breakpoint : MetaBreakpoint )
--- @field MetaBreakpointSetChanged RBXScriptSignal @function( self : MetaBreakpointManager, breakpoint : MetaBreakpoint, detail : Dictionary )
--}}} End of MetaBreakpointManager;

--{{{ Mouse
--- @class Mouse : Instance
--- @field Hit CFrame
--- @field Icon Content
--- @field Origin CFrame
--- @field Target BasePart
--- @field TargetFilter Instance
--- @field TargetSurface Enum.NormalId
--- @field UnitRay Ray
--- @field ViewSizeX number
--- @field ViewSizeY number
--- @field X number
--- @field Y number
--- @field hit CFrame
--- @field target BasePart
--- @field Button1Down RBXScriptSignal @function( self : Mouse )
--- @field Button1Up RBXScriptSignal @function( self : Mouse )
--- @field Button2Down RBXScriptSignal @function( self : Mouse )
--- @field Button2Up RBXScriptSignal @function( self : Mouse )
--- @field Idle RBXScriptSignal @function( self : Mouse )
--- @field KeyDown RBXScriptSignal @function( self : Mouse, key : string )
--- @field KeyUp RBXScriptSignal @function( self : Mouse, key : string )
--- @field Move RBXScriptSignal @function( self : Mouse )
--- @field WheelBackward RBXScriptSignal @function( self : Mouse )
--- @field WheelForward RBXScriptSignal @function( self : Mouse )
--- @field keyDown RBXScriptSignal @function( self : Mouse, key : string )
--}}} End of Mouse;

--{{{ PlayerMouse
--- @class PlayerMouse : Mouse
--}}} End of PlayerMouse;

--{{{ PluginMouse
--- @class PluginMouse : Mouse
--- @field DragEnter RBXScriptSignal @function( self : PluginMouse, instances : Objects )
--}}} End of PluginMouse;

--{{{ MouseService
--- @class MouseService : Instance
--}}} End of MouseService;

--{{{ MultipleDocumentInterfaceInstance
--- @class MultipleDocumentInterfaceInstance : Instance
--- @field FocusedDataModelSession Instance
--- @field DataModelSessionEnded RBXScriptSignal @function( self : MultipleDocumentInterfaceInstance, dataModelSession : Instance )
--- @field DataModelSessionStarted RBXScriptSignal @function( self : MultipleDocumentInterfaceInstance, dataModelSession : Instance )
--}}} End of MultipleDocumentInterfaceInstance;

--{{{ NetworkMarker
--- @class NetworkMarker : Instance
--- @field Received RBXScriptSignal @function( self : NetworkMarker )
--}}} End of NetworkMarker;

--{{{ NetworkPeer
--- @class NetworkPeer : Instance
--- @field SetOutgoingKBPSLimit fun( self : NetworkPeer, limit : number ) : void
--}}} End of NetworkPeer;

--{{{ NetworkClient
--- @class NetworkClient : NetworkPeer
--- @field ConnectionAccepted RBXScriptSignal @function( self : NetworkClient, peer : string, replicator : Instance )
--- @field ConnectionFailed RBXScriptSignal @function( self : NetworkClient, peer : string, code : number, reason : string )
--}}} End of NetworkClient;

--{{{ NetworkServer
--- @class NetworkServer : NetworkPeer
--- @field EncryptStringForPlayerId fun( self : NetworkServer, toEncrypt : string, playerId : number ) : string
--}}} End of NetworkServer;

--{{{ NetworkReplicator
--- @class NetworkReplicator : Instance
--- @field GetPlayer fun( self : NetworkReplicator ) : Instance
--}}} End of NetworkReplicator;

--{{{ ClientReplicator
--- @class ClientReplicator : NetworkReplicator
--- @field RequestRCCProfilerData fun( self : ClientReplicator, frameRate : number, timeFrame : number ) : void
--- @field RequestServerStats fun( self : ClientReplicator, request : boolean ) : void
--- @field RCCProfilerDataComplete RBXScriptSignal @function( self : ClientReplicator, success : boolean, message : string )
--- @field StatsReceived RBXScriptSignal @function( self : ClientReplicator, stats : Dictionary )
--}}} End of ClientReplicator;

--{{{ ServerReplicator
--- @class ServerReplicator : NetworkReplicator
--}}} End of ServerReplicator;

--{{{ NetworkSettings
--- @class NetworkSettings : Instance
--- @field EmulatedTotalMemoryInMB number
--- @field FreeMemoryMBytes number
--- @field HttpProxyEnabled boolean
--- @field HttpProxyURL string
--- @field IncomingReplicationLag number
--- @field PrintJoinSizeBreakdown boolean
--- @field PrintPhysicsErrors boolean
--- @field PrintStreamInstanceQuota boolean
--- @field RandomizeJoinInstanceOrder boolean
--- @field RenderStreamedRegions boolean
--- @field ShowActiveAnimationAsset boolean
--}}} End of NetworkSettings;

--{{{ NoCollisionConstraint
--- @class NoCollisionConstraint : Instance
--- @field Enabled boolean
--- @field Part0 BasePart
--- @field Part1 BasePart
--}}} End of NoCollisionConstraint;

--{{{ NotificationService
--- @class NotificationService : Instance
--- @field IsLuaChatEnabled boolean
--- @field IsLuaGameDetailsEnabled boolean
--- @field SelectedTheme string
--- @field ActionEnabled fun( self : NotificationService, actionType : Enum.AppShellActionType ) : void
--- @field ActionTaken fun( self : NotificationService, actionType : Enum.AppShellActionType ) : void
--- @field CancelAllNotification fun( self : NotificationService, userId : number ) : void
--- @field CancelNotification fun( self : NotificationService, userId : number, alertId : number ) : void
--- @field ScheduleNotification fun( self : NotificationService, userId : number, alertId : number, alertMsg : string, minutesToFire : number ) : void
--- @field SwitchedToAppShellFeature fun( self : NotificationService, appShellFeature : Enum.AppShellFeature ) : void
--- @field GetScheduledNotifications fun( self : NotificationService, userId : number ) : Array
--- @field Roblox17sConnectionChanged RBXScriptSignal @function( self : NotificationService, connectionName : string, connectionState : Enum.ConnectionState, namespaceSequenceNumbers : string )
--- @field Roblox17sEventReceived RBXScriptSignal @function( self : NotificationService, eventData : Map )
--- @field RobloxConnectionChanged RBXScriptSignal @function( self : NotificationService, connectionName : string, connectionState : Enum.ConnectionState, sequenceNumber : string, namespaceSequenceNumbers : string )
--- @field RobloxEventReceived RBXScriptSignal @function( self : NotificationService, eventData : Map )
--}}} End of NotificationService;

--{{{ PVInstance
--- @class PVInstance : Instance
--- @field Origin Orientation Vector3
--- @field Origin Position Vector3
--- @field Pivot Offset Orientation Vector3
--- @field Pivot Offset Position Vector3
--- @field GetPivot fun( self : PVInstance ) : CFrame
--- @field PivotTo fun( self : PVInstance, targetCFrame : CFrame ) : void
--}}} End of PVInstance;

--{{{ BasePart
--- @class BasePart : PVInstance
--- @field Anchored boolean
--- @field AssemblyAngularVelocity Vector3
--- @field AssemblyCenterOfMass Vector3
--- @field AssemblyLinearVelocity Vector3
--- @field AssemblyMass number
--- @field AssemblyRootPart BasePart
--- @field BackParamA number
--- @field BackParamB number
--- @field BackSurface Enum.SurfaceType
--- @field BackSurfaceInput Enum.InputType
--- @field BottomParamA number
--- @field BottomParamB number
--- @field BottomSurface Enum.SurfaceType
--- @field BottomSurfaceInput Enum.InputType
--- @field BrickColor BrickColor
--- @field CFrame CFrame
--- @field CanCollide boolean
--- @field CanQuery boolean
--- @field CanTouch boolean
--- @field CastShadow boolean
--- @field CenterOfMass Vector3
--- @field CollisionGroup string
--- @field CollisionGroupId number
--- @field Color Color3
--- @field CustomPhysicalProperties PhysicalProperties
--- @field Elasticity number
--- @field Friction number
--- @field FrontParamA number
--- @field FrontParamB number
--- @field FrontSurface Enum.SurfaceType
--- @field FrontSurfaceInput Enum.InputType
--- @field LeftParamA number
--- @field LeftParamB number
--- @field LeftSurface Enum.SurfaceType
--- @field LeftSurfaceInput Enum.InputType
--- @field LocalTransparencyModifier number
--- @field Locked boolean
--- @field Mass number
--- @field Massless boolean
--- @field Material Enum.Material
--- @field MaterialVariant string
--- @field Orientation Vector3
--- @field PivotOffset CFrame
--- @field Position Vector3
--- @field ReceiveAge number
--- @field Reflectance number
--- @field ResizeIncrement number
--- @field ResizeableFaces Faces
--- @field RightParamA number
--- @field RightParamB number
--- @field RightSurface Enum.SurfaceType
--- @field RightSurfaceInput Enum.InputType
--- @field RootPriority number
--- @field RotVelocity Vector3
--- @field Rotation Vector3
--- @field Size Vector3
--- @field SpecificGravity number
--- @field TopParamA number
--- @field TopParamB number
--- @field TopSurface Enum.SurfaceType
--- @field TopSurfaceInput Enum.InputType
--- @field Transparency number
--- @field Velocity Vector3
--- @field brickColor BrickColor
--- @field ApplyAngularImpulse fun( self : BasePart, impulse : Vector3 ) : void
--- @field ApplyImpulse fun( self : BasePart, impulse : Vector3 ) : void
--- @field ApplyImpulseAtPosition fun( self : BasePart, impulse : Vector3, position : Vector3 ) : void
--- @field BreakJoints fun( self : BasePart ) : void
--- @field CanCollideWith fun( self : BasePart, part : BasePart ) : boolean
--- @field CanSetNetworkOwnership fun( self : BasePart ) : Tuple
--- @field GetConnectedParts fun( self : BasePart, recursive : boolean ) : Objects
--- @field GetJoints fun( self : BasePart ) : Objects
--- @field GetMass fun( self : BasePart ) : number
--- @field GetNetworkOwner fun( self : BasePart ) : Instance
--- @field GetNetworkOwnershipAuto fun( self : BasePart ) : boolean
--- @field GetRenderCFrame fun( self : BasePart ) : CFrame
--- @field GetRootPart fun( self : BasePart ) : Instance
--- @field GetTouchingParts fun( self : BasePart ) : Objects
--- @field GetVelocityAtPosition fun( self : BasePart, position : Vector3 ) : Vector3
--- @field IsGrounded fun( self : BasePart ) : boolean
--- @field MakeJoints fun( self : BasePart ) : void
--- @field Resize fun( self : BasePart, normalId : Enum.NormalId, deltaAmount : number ) : boolean
--- @field SetNetworkOwner fun( self : BasePart, playerInstance : Player ) : void
--- @field SetNetworkOwnershipAuto fun( self : BasePart ) : void
--- @field breakJoints fun( self : BasePart ) : void
--- @field getMass fun( self : BasePart ) : number
--- @field makeJoints fun( self : BasePart ) : void
--- @field resize fun( self : BasePart, normalId : Enum.NormalId, deltaAmount : number ) : boolean
--- @field SubtractAsync fun( self : BasePart, parts : Objects, collisionfidelity : Enum.CollisionFidelity, renderFidelity : Enum.RenderFidelity ) : Instance
--- @field UnionAsync fun( self : BasePart, parts : Objects, collisionfidelity : Enum.CollisionFidelity, renderFidelity : Enum.RenderFidelity ) : Instance
--- @field LocalSimulationTouched RBXScriptSignal @function( self : BasePart, part : BasePart )
--- @field OutfitChanged RBXScriptSignal @function( self : BasePart )
--- @field StoppedTouching RBXScriptSignal @function( self : BasePart, otherPart : BasePart )
--- @field TouchEnded RBXScriptSignal @function( self : BasePart, otherPart : BasePart )
--- @field Touched RBXScriptSignal @function( self : BasePart, otherPart : BasePart )
--}}} End of BasePart;

--{{{ AdPortal
--- @class AdPortal : BasePart
--}}} End of AdPortal;

--{{{ CornerWedgePart
--- @class CornerWedgePart : BasePart
--}}} End of CornerWedgePart;

--{{{ FormFactorPart
--- @class FormFactorPart : BasePart
--- @field FormFactor Enum.FormFactor
--- @field formFactor Enum.FormFactor
--}}} End of FormFactorPart;

--{{{ Part
--- @class Part : FormFactorPart
--- @field Shape Enum.PartType
--}}} End of Part;

--{{{ Platform
--- @class Platform : Part
--}}} End of Platform;

--{{{ Seat
--- @class Seat : Part
--- @field Disabled boolean
--- @field Occupant Humanoid
--- @field Sit fun( self : Seat, humanoid : Instance ) : void
--}}} End of Seat;

--{{{ SpawnLocation
--- @class SpawnLocation : Part
--- @field AllowTeamChangeOnTouch boolean
--- @field Duration number
--- @field Enabled boolean
--- @field Neutral boolean
--- @field TeamColor BrickColor
--}}} End of SpawnLocation;

--{{{ WedgePart
--- @class WedgePart : FormFactorPart
--}}} End of WedgePart;

--{{{ Terrain
--- @class Terrain : BasePart
--- @field Decoration boolean
--- @field IsSmooth boolean
--- @field LastUsedModificationMethod Enum.TerrainAcquisitionMethod
--- @field MaterialColors BinaryString
--- @field MaxExtents Region3int16
--- @field WaterColor Color3
--- @field WaterReflectance number
--- @field WaterTransparency number
--- @field WaterWaveSize number
--- @field WaterWaveSpeed number
--- @field AutowedgeCell fun( self : Terrain, x : number, y : number, z : number ) : boolean
--- @field AutowedgeCells fun( self : Terrain, region : Region3int16 ) : void
--- @field CellCenterToWorld fun( self : Terrain, x : number, y : number, z : number ) : Vector3
--- @field CellCornerToWorld fun( self : Terrain, x : number, y : number, z : number ) : Vector3
--- @field Clear fun( self : Terrain ) : void
--- @field ConvertToSmooth fun( self : Terrain ) : void
--- @field CopyRegion fun( self : Terrain, region : Region3int16 ) : TerrainRegion
--- @field CountCells fun( self : Terrain ) : number
--- @field FillBall fun( self : Terrain, center : Vector3, radius : number, material : Enum.Material ) : void
--- @field FillBlock fun( self : Terrain, cframe : CFrame, size : Vector3, material : Enum.Material ) : void
--- @field FillCylinder fun( self : Terrain, cframe : CFrame, height : number, radius : number, material : Enum.Material ) : void
--- @field FillRegion fun( self : Terrain, region : Region3, resolution : number, material : Enum.Material ) : void
--- @field FillWedge fun( self : Terrain, cframe : CFrame, size : Vector3, material : Enum.Material ) : void
--- @field GetCell fun( self : Terrain, x : number, y : number, z : number ) : Tuple
--- @field GetMaterialColor fun( self : Terrain, material : Enum.Material ) : Color3
--- @field GetWaterCell fun( self : Terrain, x : number, y : number, z : number ) : Tuple
--- @field PasteRegion fun( self : Terrain, region : TerrainRegion, corner : Vector3int16, pasteEmptyCells : boolean ) : void
--- @field ReadVoxels fun( self : Terrain, region : Region3, resolution : number ) : Tuple
--- @field ReplaceMaterial fun( self : Terrain, region : Region3, resolution : number, sourceMaterial : Enum.Material, targetMaterial : Enum.Material ) : void
--- @field SetCell fun( self : Terrain, x : number, y : number, z : number, material : Enum.CellMaterial, block : Enum.CellBlock, orientation : Enum.CellOrientation ) : void
--- @field SetCells fun( self : Terrain, region : Region3int16, material : Enum.CellMaterial, block : Enum.CellBlock, orientation : Enum.CellOrientation ) : void
--- @field SetMaterialColor fun( self : Terrain, material : Enum.Material, value : Color3 ) : void
--- @field SetWaterCell fun( self : Terrain, x : number, y : number, z : number, force : Enum.WaterForce, direction : Enum.WaterDirection ) : void
--- @field WorldToCell fun( self : Terrain, position : Vector3 ) : Vector3
--- @field WorldToCellPreferEmpty fun( self : Terrain, position : Vector3 ) : Vector3
--- @field WorldToCellPreferSolid fun( self : Terrain, position : Vector3 ) : Vector3
--- @field WriteVoxels fun( self : Terrain, region : Region3, resolution : number, materials : Array, occupancy : Array ) : void
--}}} End of Terrain;

--{{{ TriangleMeshPart
--- @class TriangleMeshPart : BasePart
--- @field CollisionFidelity Enum.CollisionFidelity
--- @field MeshSize Vector3
--}}} End of TriangleMeshPart;

--{{{ MeshPart
--- @class MeshPart : TriangleMeshPart
--- @field DoubleSided boolean
--- @field HasJointOffset boolean
--- @field HasSkinnedMesh boolean
--- @field JointOffset Vector3
--- @field MeshId Content
--- @field RenderFidelity Enum.RenderFidelity
--- @field TextureID Content
--- @field ApplyMesh fun( self : MeshPart, meshPart : Instance ) : void
--}}} End of MeshPart;

--{{{ PartOperation
--- @class PartOperation : TriangleMeshPart
--- @field RenderFidelity Enum.RenderFidelity
--- @field SmoothingAngle number
--- @field TriangleCount number
--- @field UsePartColor boolean
--}}} End of PartOperation;

--{{{ NegateOperation
--- @class NegateOperation : PartOperation
--}}} End of NegateOperation;

--{{{ UnionOperation
--- @class UnionOperation : PartOperation
--}}} End of UnionOperation;

--{{{ TrussPart
--- @class TrussPart : BasePart
--- @field Style Enum.Style
--}}} End of TrussPart;

--{{{ VehicleSeat
--- @class VehicleSeat : BasePart
--- @field AreHingesDetected number
--- @field Disabled boolean
--- @field HeadsUpDisplay boolean
--- @field MaxSpeed number
--- @field Occupant Humanoid
--- @field Steer number
--- @field SteerFloat number
--- @field Throttle number
--- @field ThrottleFloat number
--- @field Torque number
--- @field TurnSpeed number
--- @field Sit fun( self : VehicleSeat, humanoid : Instance ) : void
--}}} End of VehicleSeat;

--{{{ Model
--- @class Model : PVInstance
--- @field LevelOfDetail Enum.ModelLevelOfDetail
--- @field PrimaryPart BasePart
--- @field World Pivot Orientation Vector3
--- @field World Pivot Position Vector3
--- @field WorldPivot CFrame
--- @field BreakJoints fun( self : Model ) : void
--- @field GetBoundingBox fun( self : Model ) : Tuple
--- @field GetExtentsSize fun( self : Model ) : Vector3
--- @field GetModelCFrame fun( self : Model ) : CFrame
--- @field GetModelSize fun( self : Model ) : Vector3
--- @field GetPrimaryPartCFrame fun( self : Model ) : CFrame
--- @field MakeJoints fun( self : Model ) : void
--- @field MoveTo fun( self : Model, position : Vector3 ) : void
--- @field ResetOrientationToIdentity fun( self : Model ) : void
--- @field SetIdentityOrientation fun( self : Model ) : void
--- @field SetPrimaryPartCFrame fun( self : Model, cframe : CFrame ) : void
--- @field TranslateBy fun( self : Model, delta : Vector3 ) : void
--- @field breakJoints fun( self : Model ) : void
--- @field makeJoints fun( self : Model ) : void
--- @field move fun( self : Model, location : Vector3 ) : void
--- @field moveTo fun( self : Model, location : Vector3 ) : void
--}}} End of Model;

--{{{ Actor
--- @class Actor : Model
--}}} End of Actor;

--{{{ WorldRoot
--- @class WorldRoot : Model
--- @field ArePartsTouchingOthers fun( self : WorldRoot, partList : Objects, overlapIgnored : number ) : boolean
--- @field BulkMoveTo fun( self : WorldRoot, partList : Objects, cframeList : Array, eventMode : Enum.BulkMoveMode ) : void
--- @field FindPartOnRay fun( self : WorldRoot, ray : Ray, ignoreDescendantsInstance : Instance, terrainCellsAreCubes : boolean, ignoreWater : boolean ) : Tuple
--- @field FindPartOnRayWithIgnoreList fun( self : WorldRoot, ray : Ray, ignoreDescendantsTable : Objects, terrainCellsAreCubes : boolean, ignoreWater : boolean ) : Tuple
--- @field FindPartOnRayWithWhitelist fun( self : WorldRoot, ray : Ray, whitelistDescendantsTable : Objects, ignoreWater : boolean ) : Tuple
--- @field FindPartsInRegion3 fun( self : WorldRoot, region : Region3, ignoreDescendantsInstance : Instance, maxParts : number ) : Objects
--- @field FindPartsInRegion3WithIgnoreList fun( self : WorldRoot, region : Region3, ignoreDescendantsTable : Objects, maxParts : number ) : Objects
--- @field FindPartsInRegion3WithWhiteList fun( self : WorldRoot, region : Region3, whitelistDescendantsTable : Objects, maxParts : number ) : Objects
--- @field GetPartBoundsInBox fun( self : WorldRoot, cframe : CFrame, size : Vector3, overlapParams : OverlapParams ) : Objects
--- @field GetPartBoundsInRadius fun( self : WorldRoot, position : Vector3, radius : number, overlapParams : OverlapParams ) : Objects
--- @field GetPartsInPart fun( self : WorldRoot, part : BasePart, overlapParams : OverlapParams ) : Objects
--- @field IKMoveTo fun( self : WorldRoot, part : BasePart, target : CFrame, translateStiffness : number, rotateStiffness : number, collisionsMode : Enum.IKCollisionsMode ) : void
--- @field IsRegion3Empty fun( self : WorldRoot, region : Region3, ignoreDescendentsInstance : Instance ) : boolean
--- @field IsRegion3EmptyWithIgnoreList fun( self : WorldRoot, region : Region3, ignoreDescendentsTable : Objects ) : boolean
--- @field Raycast fun( self : WorldRoot, origin : Vector3, direction : Vector3, raycastParams : RaycastParams ) : RaycastResult
--- @field SetInsertPoint fun( self : WorldRoot, point : Vector3, ignoreGrid : boolean ) : void
--- @field findPartOnRay fun( self : WorldRoot, ray : Ray, ignoreDescendantsInstance : Instance, terrainCellsAreCubes : boolean, ignoreWater : boolean ) : Tuple
--- @field findPartsInRegion3 fun( self : WorldRoot, region : Region3, ignoreDescendantsInstance : Instance, maxParts : number ) : Objects
--}}} End of WorldRoot;

--{{{ Workspace
--- @class Workspace : WorldRoot
--- @field AllowThirdPartySales boolean
--- @field AnimationWeightedBlendFix Enum.NewAnimationRuntimeSetting
--- @field ClientAnimatorThrottling Enum.ClientAnimatorThrottlingMode
--- @field CurrentCamera Camera
--- @field DistributedGameTime number
--- @field FallenPartsDestroyHeight number
--- @field FilteringEnabled boolean
--- @field GlobalWind Vector3
--- @field Gravity number
--- @field HumanoidOnlySetCollisionsOnStateChange Enum.HumanoidOnlySetCollisionsOnStateChange
--- @field InterpolationThrottling Enum.InterpolationThrottlingMode
--- @field MeshPartHeadsAndAccessories Enum.MeshPartHeadsAndAccessories
--- @field PhysicsSteppingMethod Enum.PhysicsSteppingMethod
--- @field ReplicateInstanceDestroySetting Enum.ReplicateInstanceDestroySetting
--- @field Retargeting Enum.AnimatorRetargetingMode
--- @field SignalBehavior Enum.SignalBehavior
--- @field StreamOutBehavior Enum.StreamOutBehavior
--- @field StreamingEnabled boolean
--- @field StreamingIntegrityMode Enum.StreamingIntegrityMode
--- @field StreamingMinRadius number
--- @field StreamingPauseMode Enum.StreamingPauseMode
--- @field StreamingTargetRadius number
--- @field Terrain Terrain
--- @field TouchesUseCollisionGroups boolean
--- @field UnionsScaleNonuniformly Enum.UnionsScaleNonuniformly
--- @field BreakJoints fun( self : Workspace, objects : Objects ) : void
--- @field CalculateJumpDistance fun( self : Workspace, gravity : number, jumpPower : number, walkSpeed : number ) : number
--- @field CalculateJumpHeight fun( self : Workspace, gravity : number, jumpPower : number ) : number
--- @field CalculateJumpPower fun( self : Workspace, gravity : number, jumpHeight : number ) : number
--- @field ExperimentalSolverIsEnabled fun( self : Workspace ) : boolean
--- @field GetNumAwakeParts fun( self : Workspace ) : number
--- @field GetPhysicsThrottling fun( self : Workspace ) : number
--- @field GetRealPhysicsFPS fun( self : Workspace ) : number
--- @field GetServerTimeNow fun( self : Workspace ) : number
--- @field JoinToOutsiders fun( self : Workspace, objects : Objects, jointType : Enum.JointCreationMode ) : void
--- @field MakeJoints fun( self : Workspace, objects : Objects ) : void
--- @field PGSIsEnabled fun( self : Workspace ) : boolean
--- @field SetMeshPartHeadsAndAccessories fun( self : Workspace, value : Enum.MeshPartHeadsAndAccessories ) : void
--- @field SetPhysicsThrottleEnabled fun( self : Workspace, value : boolean ) : void
--- @field UnjoinFromOutsiders fun( self : Workspace, objects : Objects ) : void
--- @field ZoomToExtents fun( self : Workspace ) : void
--}}} End of Workspace;

--{{{ WorldModel
--- @class WorldModel : WorldRoot
--}}} End of WorldModel;

--{{{ PackageLink
--- @class PackageLink : Instance
--- @field AutoUpdate boolean
--- @field Creator string
--- @field Package Id Content
--- @field PackageAssetName string
--- @field PackageId Content
--- @field PermissionLevel Enum.PackagePermission
--- @field Status string
--- @field Version Number number
--- @field VersionNumber number
--}}} End of PackageLink;

--{{{ PackageService
--- @class PackageService : Instance
--}}} End of PackageService;

--{{{ PackageUIService
--- @class PackageUIService : Instance
--- @field ConvertToPackageUpload fun( self : PackageUIService, uploadUrl : string, cloneInstances : Objects, originalInstances : Objects ) : void
--- @field GetPackageInfo fun( self : PackageUIService, packageAssetId : number ) : Dictionary
--- @field PublishPackage fun( self : PackageUIService, packageInstance : Instance ) : void
--- @field SetPackageVersion fun( self : PackageUIService, packageInstance : Instance, versionNumber : number ) : Instance
--- @field OnConvertToPackageResult RBXScriptSignal @function( self : PackageUIService, isSuccessful : boolean, errorMessage : string )
--- @field OnOpenConvertToPackagePlugin RBXScriptSignal @function( self : PackageUIService, instances : Objects, name : string, cloneInstances : Objects )
--}}} End of PackageUIService;

--{{{ Pages
--- @class Pages : Instance
--- @field IsFinished boolean
--- @field GetCurrentPage fun( self : Pages ) : Array
--- @field AdvanceToNextPageAsync fun( self : Pages ) : void
--}}} End of Pages;

--{{{ CatalogPages
--- @class CatalogPages : Pages
--}}} End of CatalogPages;

--{{{ DataStoreKeyPages
--- @class DataStoreKeyPages : Pages
--}}} End of DataStoreKeyPages;

--{{{ DataStoreListingPages
--- @class DataStoreListingPages : Pages
--}}} End of DataStoreListingPages;

--{{{ DataStorePages
--- @class DataStorePages : Pages
--}}} End of DataStorePages;

--{{{ DataStoreVersionPages
--- @class DataStoreVersionPages : Pages
--}}} End of DataStoreVersionPages;

--{{{ FriendPages
--- @class FriendPages : Pages
--}}} End of FriendPages;

--{{{ InventoryPages
--- @class InventoryPages : Pages
--}}} End of InventoryPages;

--{{{ EmotesPages
--- @class EmotesPages : InventoryPages
--}}} End of EmotesPages;

--{{{ OutfitPages
--- @class OutfitPages : Pages
--}}} End of OutfitPages;

--{{{ StandardPages
--- @class StandardPages : Pages
--}}} End of StandardPages;

--{{{ PartOperationAsset
--- @class PartOperationAsset : Instance
--}}} End of PartOperationAsset;

--{{{ ParticleEmitter
--- @class ParticleEmitter : Instance
--- @field Acceleration Vector3
--- @field Brightness number
--- @field Color ColorSequence
--- @field Drag number
--- @field EmissionDirection Enum.NormalId
--- @field Enabled boolean
--- @field FlipbookFramerate NumberRange
--- @field FlipbookIncompatible string
--- @field FlipbookLayout Enum.ParticleFlipbookLayout
--- @field FlipbookMode Enum.ParticleFlipbookMode
--- @field FlipbookStartRandom boolean
--- @field Lifetime NumberRange
--- @field LightEmission number
--- @field LightInfluence number
--- @field LockedToPart boolean
--- @field Orientation Enum.ParticleOrientation
--- @field Rate number
--- @field RotSpeed NumberRange
--- @field Rotation NumberRange
--- @field Shape Enum.ParticleEmitterShape
--- @field ShapeInOut Enum.ParticleEmitterShapeInOut
--- @field ShapePartial number
--- @field ShapeStyle Enum.ParticleEmitterShapeStyle
--- @field Size NumberSequence
--- @field Speed NumberRange
--- @field SpreadAngle Vector2
--- @field Squash NumberSequence
--- @field Texture Content
--- @field TimeScale number
--- @field Transparency NumberSequence
--- @field VelocityInheritance number
--- @field VelocitySpread number
--- @field ZOffset number
--- @field Clear fun( self : ParticleEmitter ) : void
--- @field Emit fun( self : ParticleEmitter, particleCount : number ) : void
--}}} End of ParticleEmitter;

--{{{ PatchMapping
--- @class PatchMapping : Instance
--- @field FlattenTree boolean
--- @field PatchId string
--- @field TargetPath string
--}}} End of PatchMapping;

--{{{ Path
--- @class Path : Instance
--- @field Status Enum.PathStatus
--- @field GetPointCoordinates fun( self : Path ) : Array
--- @field GetWaypoints fun( self : Path ) : Array
--- @field CheckOcclusionAsync fun( self : Path, start : number ) : number
--- @field ComputeAsync fun( self : Path, start : Vector3, finish : Vector3 ) : void
--- @field Blocked RBXScriptSignal @function( self : Path, blockedWaypointIdx : number )
--- @field Unblocked RBXScriptSignal @function( self : Path, unblockedWaypointIdx : number )
--}}} End of Path;

--{{{ PathfindingLink
--- @class PathfindingLink : Instance
--- @field Attachment0 Attachment
--- @field Attachment1 Attachment
--- @field IsBidirectional boolean
--- @field Label string
--}}} End of PathfindingLink;

--{{{ PathfindingModifier
--- @class PathfindingModifier : Instance
--- @field Label string
--- @field PassThrough boolean
--}}} End of PathfindingModifier;

--{{{ PathfindingService
--- @class PathfindingService : Instance
--- @field EmptyCutoff number
--- @field CreatePath fun( self : PathfindingService, agentParameters : Dictionary ) : Instance
--- @field ComputeRawPathAsync fun( self : PathfindingService, start : Vector3, finish : Vector3, maxDistance : number ) : Instance
--- @field ComputeSmoothPathAsync fun( self : PathfindingService, start : Vector3, finish : Vector3, maxDistance : number ) : Instance
--- @field FindPathAsync fun( self : PathfindingService, start : Vector3, finish : Vector3 ) : Instance
--}}} End of PathfindingService;

--{{{ PausedState
--- @class PausedState : Instance
--- @field AllThreadsPaused boolean
--- @field Reason Enum.DebuggerPauseReason
--- @field ThreadId number
--}}} End of PausedState;

--{{{ PausedStateBreakpoint
--- @class PausedStateBreakpoint : PausedState
--- @field Breakpoint Breakpoint
--}}} End of PausedStateBreakpoint;

--{{{ PausedStateException
--- @class PausedStateException : PausedState
--- @field ExceptionText string
--}}} End of PausedStateException;

--{{{ PermissionsService
--- @class PermissionsService : Instance
--- @field GetIsThirdPartyAssetAllowed fun( self : PermissionsService ) : boolean
--- @field GetIsThirdPartyPurchaseAllowed fun( self : PermissionsService ) : boolean
--- @field GetIsThirdPartyTeleportAllowed fun( self : PermissionsService ) : boolean
--- @field GetPermissions fun( self : PermissionsService, assetId : string ) : Array
--- @field SetPermissions fun( self : PermissionsService, assetId : string, permissions : Array ) : void
--}}} End of PermissionsService;

--{{{ PhysicsService
--- @class PhysicsService : Instance
--- @field CollisionGroupContainsPart fun( self : PhysicsService, name : string, part : BasePart ) : boolean
--- @field CollisionGroupSetCollidable fun( self : PhysicsService, name1 : string, name2 : string, collidable : boolean ) : void
--- @field CollisionGroupsAreCollidable fun( self : PhysicsService, name1 : string, name2 : string ) : boolean
--- @field CreateCollisionGroup fun( self : PhysicsService, name : string ) : number
--- @field GetCollisionGroupId fun( self : PhysicsService, name : string ) : number
--- @field GetCollisionGroupName fun( self : PhysicsService, name : number ) : string
--- @field GetCollisionGroups fun( self : PhysicsService ) : Array
--- @field GetMaxCollisionGroups fun( self : PhysicsService ) : number
--- @field GetRegisteredCollisionGroups fun( self : PhysicsService ) : Array
--- @field IkSolve fun( self : PhysicsService, part : BasePart, target : CFrame, translateStiffness : number, rotateStiffness : number ) : void
--- @field LocalIkSolve fun( self : PhysicsService, part : BasePart, target : CFrame, translateStiffness : number, rotateStiffness : number ) : void
--- @field RegisterCollisionGroup fun( self : PhysicsService, name : string ) : void
--- @field RemoveCollisionGroup fun( self : PhysicsService, name : string ) : void
--- @field RenameCollisionGroup fun( self : PhysicsService, from : string, to : string ) : void
--- @field SetPartCollisionGroup fun( self : PhysicsService, part : BasePart, name : string ) : void
--- @field UnregisterCollisionGroup fun( self : PhysicsService, name : string ) : void
--}}} End of PhysicsService;

--{{{ PhysicsSettings
--- @class PhysicsSettings : Instance
--- @field AllowSleep boolean
--- @field AreAnchorsShown boolean
--- @field AreAssembliesShown boolean
--- @field AreAwakePartsHighlighted boolean
--- @field AreBodyTypesShown boolean
--- @field AreContactIslandsShown boolean
--- @field AreContactPointsShown boolean
--- @field AreJointCoordinatesShown boolean
--- @field AreMechanismsShown boolean
--- @field AreModelCoordsShown boolean
--- @field AreOwnersShown boolean
--- @field ArePartCoordsShown boolean
--- @field AreRegionsShown boolean
--- @field AreTerrainReplicationRegionsShown boolean
--- @field AreTimestepsShown boolean
--- @field AreUnalignedPartsShown boolean
--- @field AreWorldCoordsShown boolean
--- @field DisableCSGv2 boolean
--- @field ForceCSGv2 boolean
--- @field IsInterpolationThrottleShown boolean
--- @field IsReceiveAgeShown boolean
--- @field IsTreeShown boolean
--- @field PhysicsEnvironmentalThrottle Enum.EnviromentalPhysicsThrottle
--- @field ShowDecompositionGeometry boolean
--- @field ThrottleAdjustTime number
--- @field UseCSGv2 boolean
--}}} End of PhysicsSettings;

--{{{ Player
--- @class Player : Instance
--- @field AccountAge number
--- @field AppearanceDidLoad boolean
--- @field AutoJumpEnabled boolean
--- @field CameraMaxZoomDistance number
--- @field CameraMinZoomDistance number
--- @field CameraMode Enum.CameraMode
--- @field CanLoadCharacterAppearance boolean
--- @field Character Model
--- @field CharacterAppearance string
--- @field CharacterAppearanceId number
--- @field ChatMode Enum.ChatMode
--- @field DataComplexity number
--- @field DataComplexityLimit number
--- @field DataReady boolean
--- @field DevCameraOcclusionMode Enum.DevCameraOcclusionMode
--- @field DevComputerCameraMode Enum.DevComputerCameraMovementMode
--- @field DevComputerMovementMode Enum.DevComputerMovementMode
--- @field DevEnableMouseLock boolean
--- @field DevTouchCameraMode Enum.DevTouchCameraMovementMode
--- @field DevTouchMovementMode Enum.DevTouchMovementMode
--- @field DisplayName string
--- @field FollowUserId number
--- @field GameplayPaused boolean
--- @field Guest boolean
--- @field HealthDisplayDistance number
--- @field LocaleId string
--- @field MaximumSimulationRadius number
--- @field MembershipType Enum.MembershipType
--- @field NameDisplayDistance number
--- @field Neutral boolean
--- @field OsPlatform string
--- @field PlatformName string
--- @field ReplicationFocus Instance
--- @field RespawnLocation SpawnLocation
--- @field SimulationRadius number
--- @field Team Team
--- @field TeamColor BrickColor
--- @field Teleported boolean
--- @field TeleportedIn boolean
--- @field UserId number
--- @field VRDevice string
--- @field userId number
--- @field AddToBlockList fun( self : Player, userIds : Array ) : void
--- @field ClearCharacterAppearance fun( self : Player ) : void
--- @field DistanceFromCharacter fun( self : Player, point : Vector3 ) : number
--- @field GetFriendStatus fun( self : Player, player : Player ) : Enum.FriendStatus
--- @field GetGameSessionID fun( self : Player ) : string
--- @field GetJoinData fun( self : Player ) : Dictionary
--- @field GetMouse fun( self : Player ) : Mouse
--- @field GetNetworkPing fun( self : Player ) : number
--- @field GetUnder13 fun( self : Player ) : boolean
--- @field HasAppearanceLoaded fun( self : Player ) : boolean
--- @field Kick fun( self : Player, message : string ) : void
--- @field LoadBoolean fun( self : Player, key : string ) : boolean
--- @field LoadCharacterAppearance fun( self : Player, assetInstance : Instance ) : void
--- @field LoadData fun( self : Player ) : void
--- @field LoadInstance fun( self : Player, key : string ) : Instance
--- @field LoadNumber fun( self : Player, key : string ) : number
--- @field LoadString fun( self : Player, key : string ) : string
--- @field Move fun( self : Player, walkDirection : Vector3, relativeToCamera : boolean ) : void
--- @field RemoveCharacter fun( self : Player ) : void
--- @field RequestFriendship fun( self : Player, player : Player ) : void
--- @field RevokeFriendship fun( self : Player, player : Player ) : void
--- @field SaveBoolean fun( self : Player, key : string, value : boolean ) : void
--- @field SaveData fun( self : Player ) : void
--- @field SaveInstance fun( self : Player, key : string, value : Instance ) : void
--- @field SaveNumber fun( self : Player, key : string, value : number ) : void
--- @field SaveString fun( self : Player, key : string, value : string ) : void
--- @field SetAccountAge fun( self : Player, accountAge : number ) : void
--- @field SetCharacterAppearanceJson fun( self : Player, jsonBlob : string ) : void
--- @field SetMembershipType fun( self : Player, membershipType : Enum.MembershipType ) : void
--- @field SetModerationAccessKey fun( self : Player, moderationAccessKey : string ) : void
--- @field SetSuperSafeChat fun( self : Player, value : boolean ) : void
--- @field SetUnder13 fun( self : Player, value : boolean ) : void
--- @field UpdatePlayerBlocked fun( self : Player, userId : number, blocked : boolean ) : void
--- @field loadBoolean fun( self : Player, key : string ) : boolean
--- @field loadInstance fun( self : Player, key : string ) : Instance
--- @field loadNumber fun( self : Player, key : string ) : number
--- @field loadString fun( self : Player, key : string ) : string
--- @field saveBoolean fun( self : Player, key : string, value : boolean ) : void
--- @field saveInstance fun( self : Player, key : string, value : Instance ) : void
--- @field saveNumber fun( self : Player, key : string, value : number ) : void
--- @field saveString fun( self : Player, key : string, value : string ) : void
--- @field GetFriendsOnline fun( self : Player, maxFriends : number ) : Array
--- @field GetRankInGroup fun( self : Player, groupId : number ) : number
--- @field GetRoleInGroup fun( self : Player, groupId : number ) : string
--- @field IsBestFriendsWith fun( self : Player, userId : number ) : boolean
--- @field IsFriendsWith fun( self : Player, userId : number ) : boolean
--- @field IsInGroup fun( self : Player, groupId : number ) : boolean
--- @field LoadCharacter fun( self : Player ) : void
--- @field LoadCharacterBlocking fun( self : Player ) : void
--- @field LoadCharacterWithHumanoidDescription fun( self : Player, humanoidDescription : HumanoidDescription ) : void
--- @field RequestStreamAroundAsync fun( self : Player, position : Vector3, timeOut : number ) : void
--- @field WaitForDataReady fun( self : Player ) : boolean
--- @field isFriendsWith fun( self : Player, userId : number ) : boolean
--- @field waitForDataReady fun( self : Player ) : boolean
--- @field CharacterAdded RBXScriptSignal @function( self : Player, character : Model )
--- @field CharacterAppearanceLoaded RBXScriptSignal @function( self : Player, character : Model )
--- @field CharacterRemoving RBXScriptSignal @function( self : Player, character : Model )
--- @field Chatted RBXScriptSignal @function( self : Player, message : string, recipient : Player )
--- @field FriendStatusChanged RBXScriptSignal @function( self : Player, player : Player, friendStatus : Enum.FriendStatus )
--- @field Idled RBXScriptSignal @function( self : Player, time : number )
--- @field OnTeleport RBXScriptSignal @function( self : Player, teleportState : Enum.TeleportState, placeId : number, spawnName : string )
--- @field SimulationRadiusChanged RBXScriptSignal @function( self : Player, radius : number )
--}}} End of Player;

--{{{ PlayerEmulatorService
--- @class PlayerEmulatorService : Instance
--- @field CustomPoliciesEnabled boolean
--- @field EmulatedCountryCode string
--- @field EmulatedGameLocale string
--- @field PlayerEmulationEnabled boolean
--- @field SerializedEmulatedPolicyInfo BinaryString
--- @field GetEmulatedPolicyInfo fun( self : PlayerEmulatorService ) : Dictionary
--- @field RegionCodeWillHaveAutomaticNonCustomPolicies fun( self : PlayerEmulatorService, regionCode : string ) : boolean
--- @field SetEmulatedPolicyInfo fun( self : PlayerEmulatorService, emulatedPolicyInfo : Dictionary ) : void
--}}} End of PlayerEmulatorService;

--{{{ PlayerScripts
--- @class PlayerScripts : Instance
--- @field ClearComputerCameraMovementModes fun( self : PlayerScripts ) : void
--- @field ClearComputerMovementModes fun( self : PlayerScripts ) : void
--- @field ClearTouchCameraMovementModes fun( self : PlayerScripts ) : void
--- @field ClearTouchMovementModes fun( self : PlayerScripts ) : void
--- @field GetRegisteredComputerCameraMovementModes fun( self : PlayerScripts ) : Array
--- @field GetRegisteredComputerMovementModes fun( self : PlayerScripts ) : Array
--- @field GetRegisteredTouchCameraMovementModes fun( self : PlayerScripts ) : Array
--- @field GetRegisteredTouchMovementModes fun( self : PlayerScripts ) : Array
--- @field RegisterComputerCameraMovementMode fun( self : PlayerScripts, cameraMovementMode : Enum.ComputerCameraMovementMode ) : void
--- @field RegisterComputerMovementMode fun( self : PlayerScripts, movementMode : Enum.ComputerMovementMode ) : void
--- @field RegisterTouchCameraMovementMode fun( self : PlayerScripts, cameraMovementMode : Enum.TouchCameraMovementMode ) : void
--- @field RegisterTouchMovementMode fun( self : PlayerScripts, movementMode : Enum.TouchMovementMode ) : void
--- @field ComputerCameraMovementModeRegistered RBXScriptSignal @function( self : PlayerScripts )
--- @field ComputerMovementModeRegistered RBXScriptSignal @function( self : PlayerScripts )
--- @field TouchCameraMovementModeRegistered RBXScriptSignal @function( self : PlayerScripts )
--- @field TouchMovementModeRegistered RBXScriptSignal @function( self : PlayerScripts )
--}}} End of PlayerScripts;

--{{{ Players
--- @class Players : Instance
--- @field BubbleChat boolean
--- @field CharacterAutoLoads boolean
--- @field ClassicChat boolean
--- @field LocalPlayer Player
--- @field MaxPlayers number
--- @field MaxPlayersInternal number
--- @field NumPlayers number
--- @field PreferredPlayers number
--- @field PreferredPlayersInternal number
--- @field RespawnTime number
--- @field localPlayer Player
--- @field numPlayers number
--- @field Chat fun( self : Players, message : string ) : void
--- @field CreateLocalPlayer fun( self : Players ) : Player
--- @field GetPlayerByUserId fun( self : Players, userId : number ) : Player
--- @field GetPlayerFromCharacter fun( self : Players, character : Model ) : Player
--- @field GetPlayers fun( self : Players ) : Objects
--- @field ReportAbuse fun( self : Players, player : Player, reason : string, optionalMessage : string ) : void
--- @field ReportAbuseV3 fun( self : Players, player : Player, jsonTags : string ) : void
--- @field SetChatStyle fun( self : Players, style : Enum.ChatStyle ) : void
--- @field SetLocalPlayerInfo fun( self : Players, userId : number, userName : string, displayName : string, membershipType : Enum.MembershipType, isUnder13 : boolean ) : void
--- @field TeamChat fun( self : Players, message : string ) : void
--- @field WhisperChat fun( self : Players, message : string, player : Instance ) : void
--- @field getPlayers fun( self : Players ) : Objects
--- @field playerFromCharacter fun( self : Players, character : Model ) : Player
--- @field players fun( self : Players ) : Objects
--- @field CreateHumanoidModelFromDescription fun( self : Players, description : HumanoidDescription, rigType : Enum.HumanoidRigType, assetTypeVerification : Enum.AssetTypeVerification ) : Model
--- @field CreateHumanoidModelFromUserId fun( self : Players, userId : number ) : Model
--- @field GetCharacterAppearanceAsync fun( self : Players, userId : number ) : Model
--- @field GetCharacterAppearanceInfoAsync fun( self : Players, userId : number ) : Dictionary
--- @field GetFriendsAsync fun( self : Players, userId : number ) : FriendPages
--- @field GetHumanoidDescriptionFromOutfitId fun( self : Players, outfitId : number ) : HumanoidDescription
--- @field GetHumanoidDescriptionFromUserId fun( self : Players, userId : number ) : HumanoidDescription
--- @field GetNameFromUserIdAsync fun( self : Players, userId : number ) : string
--- @field GetUserIdFromNameAsync fun( self : Players, userName : string ) : number
--- @field GetUserThumbnailAsync fun( self : Players, userId : number, thumbnailType : Enum.ThumbnailType, thumbnailSize : Enum.ThumbnailSize ) : Tuple
--- @field FriendRequestEvent RBXScriptSignal @function( self : Players, player : Player, player : Player, friendRequestEvent : Enum.FriendRequestEvent )
--- @field GameAnnounce RBXScriptSignal @function( self : Players, message : string )
--- @field PlayerAdded RBXScriptSignal @function( self : Players, player : Player )
--- @field PlayerChatted RBXScriptSignal @function( self : Players, chatType : Enum.PlayerChatType, player : Player, message : string, targetPlayer : Player )
--- @field PlayerConnecting RBXScriptSignal @function( self : Players, player : Player )
--- @field PlayerDisconnecting RBXScriptSignal @function( self : Players, player : Player )
--- @field PlayerMembershipChanged RBXScriptSignal @function( self : Players, player : Player )
--- @field PlayerRejoining RBXScriptSignal @function( self : Players, player : Player )
--- @field PlayerRemoving RBXScriptSignal @function( self : Players, player : Player )
--}}} End of Players;

--{{{ Plugin
--- @class Plugin : Instance
--- @field CollisionEnabled boolean
--- @field GridSize number
--- @field HostDataModelType Enum.StudioDataModelType
--- @field HostDataModelTypeIsCurrent boolean
--- @field MultipleDocumentInterfaceInstance MultipleDocumentInterfaceInstance
--- @field UsesAssetInsertionDrag boolean
--- @field Activate fun( self : Plugin, exclusiveMouse : boolean ) : void
--- @field CreatePluginAction fun( self : Plugin, actionId : string, text : string, statusTip : string, iconName : string, allowBinding : boolean ) : PluginAction
--- @field CreatePluginMenu fun( self : Plugin, id : string, title : string, icon : string ) : PluginMenu
--- @field CreateToolbar fun( self : Plugin, name : string ) : PluginToolbar
--- @field Deactivate fun( self : Plugin ) : void
--- @field GetItem fun( self : Plugin, key : string, defaultValue : Variant ) : Variant
--- @field GetJoinMode fun( self : Plugin ) : Enum.JointCreationMode
--- @field GetMouse fun( self : Plugin ) : PluginMouse
--- @field GetSelectedRibbonTool fun( self : Plugin ) : Enum.RibbonTool
--- @field GetSetting fun( self : Plugin, key : string ) : Variant
--- @field GetStudioUserId fun( self : Plugin ) : number
--- @field Invoke fun( self : Plugin, key : string, arguments : Tuple ) : void
--- @field IsActivated fun( self : Plugin ) : boolean
--- @field IsActivatedWithExclusiveMouse fun( self : Plugin ) : boolean
--- @field Negate fun( self : Plugin, objects : Objects ) : Objects
--- @field OnInvoke fun( self : Plugin, key : string, callback : Function ) : Instance
--- @field OnSetItem fun( self : Plugin, key : string, callback : Function ) : Instance
--- @field OpenScript fun( self : Plugin, script : LuaSourceContainer, lineNumber : number ) : void
--- @field OpenWikiPage fun( self : Plugin, url : string ) : void
--- @field PauseSound fun( self : Plugin, sound : Instance ) : void
--- @field PlaySound fun( self : Plugin, sound : Instance, normalizedTimePosition : number ) : void
--- @field ResumeSound fun( self : Plugin, sound : Instance ) : void
--- @field SaveSelectedToRoblox fun( self : Plugin ) : void
--- @field SelectRibbonTool fun( self : Plugin, tool : Enum.RibbonTool, position : UDim2 ) : void
--- @field Separate fun( self : Plugin, objects : Objects ) : Objects
--- @field SetItem fun( self : Plugin, key : string, value : Variant ) : void
--- @field SetReady fun( self : Plugin ) : void
--- @field SetSetting fun( self : Plugin, key : string, value : Variant ) : void
--- @field StartDecalDrag fun( self : Plugin, decal : Instance ) : void
--- @field StartDrag fun( self : Plugin, dragData : Dictionary ) : void
--- @field StopAllSounds fun( self : Plugin ) : void
--- @field Union fun( self : Plugin, objects : Objects ) : Instance
--- @field CreateDockWidgetPluginGui fun( self : Plugin, pluginGuiId : string, dockWidgetPluginGuiInfo : DockWidgetPluginGuiInfo ) : DockWidgetPluginGui
--- @field CreateQWidgetPluginGui fun( self : Plugin, pluginGuiId : string, pluginGuiOptions : Dictionary ) : QWidgetPluginGui
--- @field ImportFbxAnimation fun( self : Plugin, rigModel : Instance, isR15 : boolean ) : Instance
--- @field ImportFbxRig fun( self : Plugin, isR15 : boolean ) : Instance
--- @field PromptForExistingAssetId fun( self : Plugin, assetType : string ) : number
--- @field PromptSaveSelection fun( self : Plugin, suggestedFileName : string ) : boolean
--- @field Deactivation RBXScriptSignal @function( self : Plugin )
--- @field Ready RBXScriptSignal @function( self : Plugin )
--- @field Unloading RBXScriptSignal @function( self : Plugin )
--- @field ProcessAssetInsertionDrag fun( self : Plugin, assetId : string, assetTypeId : number, instances : Objects ) : Objects @Callback
--- @field ProcessAssetInsertionDrop fun( self : Plugin ) : void @Callback
--}}} End of Plugin;

--{{{ PluginAction
--- @class PluginAction : Instance
--- @field ActionId string
--- @field AllowBinding boolean
--- @field Checked boolean
--- @field DefaultShortcut string
--- @field Enabled boolean
--- @field StatusTip string
--- @field Text string
--- @field Triggered RBXScriptSignal @function( self : PluginAction )
--}}} End of PluginAction;

--{{{ PluginDebugService
--- @class PluginDebugService : Instance
--}}} End of PluginDebugService;

--{{{ PluginDragEvent
--- @class PluginDragEvent : Instance
--- @field Data string
--- @field MimeType string
--- @field Position Vector2
--- @field Sender string
--}}} End of PluginDragEvent;

--{{{ PluginGuiService
--- @class PluginGuiService : Instance
--}}} End of PluginGuiService;

--{{{ PluginManagementService
--- @class PluginManagementService : Instance
--- @field SetAutoUpdate fun( self : PluginManagementService, pluginId : number, state : boolean ) : void
--}}} End of PluginManagementService;

--{{{ PluginManager
--- @class PluginManager : Instance
--- @field CreatePlugin fun( self : PluginManager ) : Instance
--- @field ExportPlace fun( self : PluginManager, filePath : string ) : void
--- @field ExportSelection fun( self : PluginManager, filePath : string ) : void
--}}} End of PluginManager;

--{{{ PluginManagerInterface
--- @class PluginManagerInterface : Instance
--- @field CreatePlugin fun( self : PluginManagerInterface ) : Instance
--- @field ExportPlace fun( self : PluginManagerInterface, filePath : string ) : void
--- @field ExportSelection fun( self : PluginManagerInterface, filePath : string ) : void
--}}} End of PluginManagerInterface;

--{{{ PluginMenu
--- @class PluginMenu : Instance
--- @field Icon string
--- @field Title string
--- @field AddAction fun( self : PluginMenu, action : Instance ) : void
--- @field AddMenu fun( self : PluginMenu, menu : Instance ) : void
--- @field AddNewAction fun( self : PluginMenu, actionId : string, text : string, icon : string ) : Instance
--- @field AddSeparator fun( self : PluginMenu ) : void
--- @field Clear fun( self : PluginMenu ) : void
--- @field ShowAsync fun( self : PluginMenu ) : Instance
--}}} End of PluginMenu;

--{{{ PluginPolicyService
--- @class PluginPolicyService : Instance
--- @field GetPluginPolicy fun( self : PluginPolicyService, pluginName : string ) : Dictionary
--}}} End of PluginPolicyService;

--{{{ PluginToolbar
--- @class PluginToolbar : Instance
--- @field CreateButton fun( self : PluginToolbar, buttonId : string, tooltip : string, iconname : string, text : string ) : Instance
--}}} End of PluginToolbar;

--{{{ PluginToolbarButton
--- @class PluginToolbarButton : Instance
--- @field ClickableWhenViewportHidden boolean
--- @field Enabled boolean
--- @field Icon Content
--- @field SetActive fun( self : PluginToolbarButton, active : boolean ) : void
--- @field Click RBXScriptSignal @function( self : PluginToolbarButton )
--}}} End of PluginToolbarButton;

--{{{ PolicyService
--- @class PolicyService : Instance
--- @field IsLuobuServer Enum.TriStateBoolean
--- @field LuobuWhitelisted Enum.TriStateBoolean
--- @field GetPolicyInfoForPlayerAsync fun( self : PolicyService, player : Instance ) : Dictionary
--- @field GetPolicyInfoForServerRobloxOnlyAsync fun( self : PolicyService ) : Dictionary
--}}} End of PolicyService;

--{{{ PoseBase
--- @class PoseBase : Instance
--- @field EasingDirection Enum.PoseEasingDirection
--- @field EasingStyle Enum.PoseEasingStyle
--- @field Weight number
--}}} End of PoseBase;

--{{{ NumberPose
--- @class NumberPose : PoseBase
--- @field Value number
--}}} End of NumberPose;

--{{{ Pose
--- @class Pose : PoseBase
--- @field CFrame CFrame
--- @field MaskWeight number
--- @field AddSubPose fun( self : Pose, pose : Instance ) : void
--- @field GetSubPoses fun( self : Pose ) : Objects
--- @field RemoveSubPose fun( self : Pose, pose : Instance ) : void
--}}} End of Pose;

--{{{ PostEffect
--- @class PostEffect : Instance
--- @field Enabled boolean
--}}} End of PostEffect;

--{{{ BloomEffect
--- @class BloomEffect : PostEffect
--- @field Intensity number
--- @field Size number
--- @field Threshold number
--}}} End of BloomEffect;

--{{{ BlurEffect
--- @class BlurEffect : PostEffect
--- @field Size number
--}}} End of BlurEffect;

--{{{ ColorCorrectionEffect
--- @class ColorCorrectionEffect : PostEffect
--- @field Brightness number
--- @field Contrast number
--- @field Saturation number
--- @field TintColor Color3
--}}} End of ColorCorrectionEffect;

--{{{ DepthOfFieldEffect
--- @class DepthOfFieldEffect : PostEffect
--- @field FarIntensity number
--- @field FocusDistance number
--- @field InFocusRadius number
--- @field NearIntensity number
--}}} End of DepthOfFieldEffect;

--{{{ SunRaysEffect
--- @class SunRaysEffect : PostEffect
--- @field Intensity number
--- @field Spread number
--}}} End of SunRaysEffect;

--{{{ ProcessInstancePhysicsService
--- @class ProcessInstancePhysicsService : Instance
--}}} End of ProcessInstancePhysicsService;

--{{{ ProximityPrompt
--- @class ProximityPrompt : Instance
--- @field ActionText string
--- @field AutoLocalize boolean
--- @field ClickablePrompt boolean
--- @field Enabled boolean
--- @field Exclusivity Enum.ProximityPromptExclusivity
--- @field GamepadKeyCode Enum.KeyCode
--- @field HoldDuration number
--- @field KeyboardKeyCode Enum.KeyCode
--- @field MaxActivationDistance number
--- @field ObjectText string
--- @field RequiresLineOfSight boolean
--- @field RootLocalizationTable LocalizationTable
--- @field Style Enum.ProximityPromptStyle
--- @field UIOffset Vector2
--- @field InputHoldBegin fun( self : ProximityPrompt ) : void
--- @field InputHoldEnd fun( self : ProximityPrompt ) : void
--- @field PromptButtonHoldBegan RBXScriptSignal @function( self : ProximityPrompt, playerWhoTriggered : Player )
--- @field PromptButtonHoldEnded RBXScriptSignal @function( self : ProximityPrompt, playerWhoTriggered : Player )
--- @field PromptHidden RBXScriptSignal @function( self : ProximityPrompt )
--- @field PromptShown RBXScriptSignal @function( self : ProximityPrompt, inputType : Enum.ProximityPromptInputType )
--- @field TriggerEnded RBXScriptSignal @function( self : ProximityPrompt, playerWhoTriggered : Player )
--- @field Triggered RBXScriptSignal @function( self : ProximityPrompt, playerWhoTriggered : Player )
--}}} End of ProximityPrompt;

--{{{ ProximityPromptService
--- @class ProximityPromptService : Instance
--- @field Enabled boolean
--- @field MaxPromptsVisible number
--- @field PromptButtonHoldBegan RBXScriptSignal @function( self : ProximityPromptService, prompt : ProximityPrompt, playerWhoTriggered : Player )
--- @field PromptButtonHoldEnded RBXScriptSignal @function( self : ProximityPromptService, prompt : ProximityPrompt, playerWhoTriggered : Player )
--- @field PromptHidden RBXScriptSignal @function( self : ProximityPromptService, prompt : ProximityPrompt )
--- @field PromptShown RBXScriptSignal @function( self : ProximityPromptService, prompt : ProximityPrompt, inputType : Enum.ProximityPromptInputType )
--- @field PromptTriggerEnded RBXScriptSignal @function( self : ProximityPromptService, prompt : ProximityPrompt, playerWhoTriggered : Player )
--- @field PromptTriggered RBXScriptSignal @function( self : ProximityPromptService, prompt : ProximityPrompt, playerWhoTriggered : Player )
--}}} End of ProximityPromptService;

--{{{ PublishService
--- @class PublishService : Instance
--- @field PublishDescendantAssets fun( self : PublishService, instance : Instance ) : boolean
--- @field PublishCageMeshAsync fun( self : PublishService, wrap : Instance, cageType : Enum.CageType ) : Content
--}}} End of PublishService;

--{{{ RbxAnalyticsService
--- @class RbxAnalyticsService : Instance
--- @field AddGlobalPointsField fun( self : RbxAnalyticsService, key : string, value : number ) : void
--- @field AddGlobalPointsTag fun( self : RbxAnalyticsService, key : string, value : string ) : void
--- @field GetClientId fun( self : RbxAnalyticsService ) : string
--- @field GetSessionId fun( self : RbxAnalyticsService ) : string
--- @field ReleaseRBXEventStream fun( self : RbxAnalyticsService, target : string ) : void
--- @field RemoveGlobalPointsField fun( self : RbxAnalyticsService, key : string ) : void
--- @field RemoveGlobalPointsTag fun( self : RbxAnalyticsService, key : string ) : void
--- @field ReportCounter fun( self : RbxAnalyticsService, counterName : string, amount : number ) : void
--- @field ReportInfluxSeries fun( self : RbxAnalyticsService, seriesName : string, points : Dictionary, throttlingPercentage : number ) : void
--- @field ReportStats fun( self : RbxAnalyticsService, category : string, value : number ) : void
--- @field ReportToDiagByCountryCode fun( self : RbxAnalyticsService, featureName : string, measureName : string, seconds : number ) : void
--- @field SendEventDeferred fun( self : RbxAnalyticsService, target : string, eventContext : string, eventName : string, additionalArgs : Dictionary ) : void
--- @field SendEventImmediately fun( self : RbxAnalyticsService, target : string, eventContext : string, eventName : string, additionalArgs : Dictionary ) : void
--- @field SetRBXEvent fun( self : RbxAnalyticsService, target : string, eventContext : string, eventName : string, additionalArgs : Dictionary ) : void
--- @field SetRBXEventStream fun( self : RbxAnalyticsService, target : string, eventContext : string, eventName : string, additionalArgs : Dictionary ) : void
--- @field TrackEvent fun( self : RbxAnalyticsService, category : string, action : string, label : string, value : number ) : void
--- @field TrackEventWithArgs fun( self : RbxAnalyticsService, category : string, action : string, label : string, args : Dictionary, value : number ) : void
--- @field UpdateHeartbeatObject fun( self : RbxAnalyticsService, args : Dictionary ) : void
--}}} End of RbxAnalyticsService;

--{{{ ReflectionMetadata
--- @class ReflectionMetadata : Instance
--}}} End of ReflectionMetadata;

--{{{ ReflectionMetadataCallbacks
--- @class ReflectionMetadataCallbacks : Instance
--}}} End of ReflectionMetadataCallbacks;

--{{{ ReflectionMetadataClasses
--- @class ReflectionMetadataClasses : Instance
--}}} End of ReflectionMetadataClasses;

--{{{ ReflectionMetadataEnums
--- @class ReflectionMetadataEnums : Instance
--}}} End of ReflectionMetadataEnums;

--{{{ ReflectionMetadataEvents
--- @class ReflectionMetadataEvents : Instance
--}}} End of ReflectionMetadataEvents;

--{{{ ReflectionMetadataFunctions
--- @class ReflectionMetadataFunctions : Instance
--}}} End of ReflectionMetadataFunctions;

--{{{ ReflectionMetadataItem
--- @class ReflectionMetadataItem : Instance
--- @field Browsable boolean
--- @field ClassCategory string
--- @field ClientOnly boolean
--- @field Constraint string
--- @field Deprecated boolean
--- @field EditingDisabled boolean
--- @field EditorType string
--- @field FFlag string
--- @field IsBackend boolean
--- @field PropertyOrder number
--- @field ScriptContext string
--- @field ServerOnly boolean
--- @field SliderScaling string
--- @field UIMaximum number
--- @field UIMinimum number
--- @field UINumTicks number
--}}} End of ReflectionMetadataItem;

--{{{ ReflectionMetadataClass
--- @class ReflectionMetadataClass : ReflectionMetadataItem
--- @field ExplorerImageIndex number
--- @field ExplorerOrder number
--- @field Insertable boolean
--- @field PreferredParent string
--}}} End of ReflectionMetadataClass;

--{{{ ReflectionMetadataEnum
--- @class ReflectionMetadataEnum : ReflectionMetadataItem
--}}} End of ReflectionMetadataEnum;

--{{{ ReflectionMetadataEnumItem
--- @class ReflectionMetadataEnumItem : ReflectionMetadataItem
--}}} End of ReflectionMetadataEnumItem;

--{{{ ReflectionMetadataMember
--- @class ReflectionMetadataMember : ReflectionMetadataItem
--}}} End of ReflectionMetadataMember;

--{{{ ReflectionMetadataProperties
--- @class ReflectionMetadataProperties : Instance
--}}} End of ReflectionMetadataProperties;

--{{{ ReflectionMetadataYieldFunctions
--- @class ReflectionMetadataYieldFunctions : Instance
--}}} End of ReflectionMetadataYieldFunctions;

--{{{ RemoteDebuggerServer
--- @class RemoteDebuggerServer : Instance
--}}} End of RemoteDebuggerServer;

--{{{ RemoteEvent
--- @class RemoteEvent : Instance
--- @field FireAllClients fun( self : RemoteEvent, arguments : Tuple ) : void
--- @field FireClient fun( self : RemoteEvent, player : Player, arguments : Tuple ) : void
--- @field FireServer fun( self : RemoteEvent, arguments : Tuple ) : void
--- @field OnClientEvent RBXScriptSignal @function( self : RemoteEvent, arguments : Tuple )
--- @field OnServerEvent RBXScriptSignal @function( self : RemoteEvent, player : Player, arguments : Tuple )
--}}} End of RemoteEvent;

--{{{ RemoteFunction
--- @class RemoteFunction : Instance
--- @field InvokeClient fun( self : RemoteFunction, player : Player, arguments : Tuple ) : Tuple
--- @field InvokeServer fun( self : RemoteFunction, arguments : Tuple ) : Tuple
--- @field OnClientInvoke fun( self : RemoteFunction, arguments : Tuple ) : Tuple @Callback
--- @field OnServerInvoke fun( self : RemoteFunction, player : Player, arguments : Tuple ) : Tuple @Callback
--}}} End of RemoteFunction;

--{{{ RenderSettings
--- @class RenderSettings : Instance
--- @field AutoFRMLevel number
--- @field EagerBulkExecution boolean
--- @field EditQualityLevel Enum.QualityLevel
--- @field EnableFRM boolean
--- @field ExportMergeByMaterial boolean
--- @field FrameRateManager Enum.FramerateManagerMode
--- @field GraphicsMode Enum.GraphicsMode
--- @field MeshCacheSize number
--- @field MeshPartDetailLevel Enum.MeshPartDetailLevel
--- @field QualityLevel Enum.QualityLevel
--- @field ReloadAssets boolean
--- @field RenderCSGTrianglesDebug boolean
--- @field ShowBoundingBoxes boolean
--- @field GetMaxQualityLevel fun( self : RenderSettings ) : number
--}}} End of RenderSettings;

--{{{ RenderingTest
--- @class RenderingTest : Instance
--- @field CFrame CFrame
--- @field ComparisonDiffThreshold number
--- @field ComparisonMethod Enum.RenderingTestComparisonMethod
--- @field ComparisonPsnrThreshold number
--- @field Description string
--- @field FieldOfView number
--- @field Orientation Vector3
--- @field Position Vector3
--- @field QualityLevel number
--- @field ShouldSkip boolean
--- @field Ticket string
--- @field RenderdocTriggerCapture fun( self : RenderingTest ) : void
--}}} End of RenderingTest;

--{{{ ReplicatedFirst
--- @class ReplicatedFirst : Instance
--- @field IsDefaultLoadingGuiRemoved fun( self : ReplicatedFirst ) : boolean
--- @field IsFinishedReplicating fun( self : ReplicatedFirst ) : boolean
--- @field RemoveDefaultLoadingScreen fun( self : ReplicatedFirst ) : void
--- @field SetDefaultLoadingGuiRemoved fun( self : ReplicatedFirst ) : void
--- @field DefaultLoadingGuiRemoved RBXScriptSignal @function( self : ReplicatedFirst )
--- @field FinishedReplicating RBXScriptSignal @function( self : ReplicatedFirst )
--- @field RemoveDefaultLoadingGuiSignal RBXScriptSignal @function( self : ReplicatedFirst )
--}}} End of ReplicatedFirst;

--{{{ ReplicatedStorage
--- @class ReplicatedStorage : Instance
--}}} End of ReplicatedStorage;

--{{{ RobloxPluginGuiService
--- @class RobloxPluginGuiService : Instance
--}}} End of RobloxPluginGuiService;

--{{{ RobloxReplicatedStorage
--- @class RobloxReplicatedStorage : Instance
--}}} End of RobloxReplicatedStorage;

--{{{ RotationCurve
--- @class RotationCurve : Instance
--- @field Length number
--- @field GetKeyAtIndex fun( self : RotationCurve, index : number ) : RotationCurveKey
--- @field GetKeyIndicesAtTime fun( self : RotationCurve, time : number ) : Array
--- @field GetKeys fun( self : RotationCurve ) : Array
--- @field GetValueAtTime fun( self : RotationCurve, time : number ) : CoordinateFrame?
--- @field InsertKey fun( self : RotationCurve, key : RotationCurveKey ) : Array
--- @field RemoveKeyAtIndex fun( self : RotationCurve, startingIndex : number, count : number ) : number
--- @field SetKeys fun( self : RotationCurve, keys : Array ) : number
--}}} End of RotationCurve;

--{{{ RtMessagingService
--- @class RtMessagingService : Instance
--}}} End of RtMessagingService;

--{{{ RunService
--- @class RunService : Instance
--- @field ClientGitHash string
--- @field BindToRenderStep fun( self : RunService, name : string, priority : number, function : Function ) : void
--- @field GetCoreScriptVersion fun( self : RunService ) : string
--- @field GetRobloxClientChannel fun( self : RunService ) : string
--- @field GetRobloxVersion fun( self : RunService ) : string
--- @field IsClient fun( self : RunService ) : boolean
--- @field IsEdit fun( self : RunService ) : boolean
--- @field IsRunMode fun( self : RunService ) : boolean
--- @field IsRunning fun( self : RunService ) : boolean
--- @field IsServer fun( self : RunService ) : boolean
--- @field IsStudio fun( self : RunService ) : boolean
--- @field Pause fun( self : RunService ) : void
--- @field Reset fun( self : RunService ) : void
--- @field Run fun( self : RunService ) : void
--- @field Set3dRenderingEnabled fun( self : RunService, enable : boolean ) : void
--- @field SetRobloxGuiFocused fun( self : RunService, focus : boolean ) : void
--- @field Stop fun( self : RunService ) : void
--- @field UnbindFromRenderStep fun( self : RunService, name : string ) : void
--- @field setThrottleFramerateEnabled fun( self : RunService, enable : boolean ) : void
--- @field Heartbeat RBXScriptSignal @function( self : RunService, deltaTime : number )
--- @field PostSimulation RBXScriptSignal @function( self : RunService, deltaTime : number )
--- @field PreAnimation RBXScriptSignal @function( self : RunService, deltaTime : number )
--- @field PreRender RBXScriptSignal @function( self : RunService, deltaTime : number )
--- @field PreSimulation RBXScriptSignal @function( self : RunService, deltaTime : number )
--- @field RenderStepped RBXScriptSignal @function( self : RunService, deltaTime : number )
--- @field Stepped RBXScriptSignal @function( self : RunService, time : number, deltaTime : number )
--}}} End of RunService;

--{{{ RuntimeScriptService
--- @class RuntimeScriptService : Instance
--}}} End of RuntimeScriptService;

--{{{ ScreenshotHud
--- @class ScreenshotHud : Instance
--- @field CameraButtonIcon Content
--- @field CameraButtonPosition UDim2
--- @field CloseButtonPosition UDim2
--- @field CloseWhenScreenshotTaken boolean
--- @field ExperienceNameOverlayEnabled boolean
--- @field OverlayFont Enum.Font
--- @field UsernameOverlayEnabled boolean
--- @field Visible boolean
--}}} End of ScreenshotHud;

--{{{ ScriptChangeService
--- @class ScriptChangeService : Instance
--- @field ScriptAdded RBXScriptSignal @function( self : ScriptChangeService, script : LuaSourceContainer )
--- @field ScriptBeingRemoved RBXScriptSignal @function( self : ScriptChangeService, script : LuaSourceContainer )
--- @field ScriptChanged RBXScriptSignal @function( self : ScriptChangeService, script : LuaSourceContainer, property : string )
--- @field ScriptFullNameChanged RBXScriptSignal @function( self : ScriptChangeService, script : LuaSourceContainer )
--- @field ScriptSourceChanged RBXScriptSignal @function( self : ScriptChangeService, script : LuaSourceContainer )
--- @field ScriptSourceEdited RBXScriptSignal @function( self : ScriptChangeService, script : LuaSourceContainer, edits : Array )
--}}} End of ScriptChangeService;

--{{{ ScriptCloneWatcher
--- @class ScriptCloneWatcher : Instance
--}}} End of ScriptCloneWatcher;

--{{{ ScriptCloneWatcherHelper
--- @class ScriptCloneWatcherHelper : Instance
--}}} End of ScriptCloneWatcherHelper;

--{{{ ScriptContext
--- @class ScriptContext : Instance
--- @field ScriptsDisabled boolean
--- @field AddCoreScriptLocal fun( self : ScriptContext, name : string, parent : Instance ) : void
--- @field ClearScriptProfilingData fun( self : ScriptContext ) : void
--- @field GetCoverageStats fun( self : ScriptContext ) : Array
--- @field SetTimeout fun( self : ScriptContext, seconds : number ) : void
--- @field StartScriptProfiling fun( self : ScriptContext ) : void
--- @field StopScriptProfiling fun( self : ScriptContext ) : string
--- @field Error RBXScriptSignal @function( self : ScriptContext, message : string, stackTrace : string, script : Instance )
--- @field ErrorDetailed RBXScriptSignal @function( self : ScriptContext, message : string, stackTrace : string, script : Instance, details : string, securityLevel : number )
--}}} End of ScriptContext;

--{{{ ScriptDebugger
--- @class ScriptDebugger : Instance
--- @field CurrentLine number
--- @field IsDebugging boolean
--- @field IsPaused boolean
--- @field Script Instance
--- @field AddWatch fun( self : ScriptDebugger, expression : string ) : Instance
--- @field GetBreakpoints fun( self : ScriptDebugger ) : Objects
--- @field GetGlobals fun( self : ScriptDebugger, stackFrame : number ) : Map
--- @field GetLocals fun( self : ScriptDebugger, stackFrame : number ) : Map
--- @field GetStack fun( self : ScriptDebugger ) : Array
--- @field GetUpvalues fun( self : ScriptDebugger, stackFrame : number ) : Map
--- @field GetWatchValue fun( self : ScriptDebugger, watch : Instance ) : Variant
--- @field GetWatches fun( self : ScriptDebugger ) : Objects
--- @field SetBreakpoint fun( self : ScriptDebugger, line : number, isContextDependentBreakpoint : boolean ) : Instance
--- @field SetGlobal fun( self : ScriptDebugger, name : string, value : Variant, stackFrame : number ) : void
--- @field SetLocal fun( self : ScriptDebugger, name : string, value : Variant, stackFrame : number ) : void
--- @field SetUpvalue fun( self : ScriptDebugger, name : string, value : Variant, stackFrame : number ) : void
--- @field BreakpointAdded RBXScriptSignal @function( self : ScriptDebugger, breakpoint : Instance )
--- @field BreakpointRemoved RBXScriptSignal @function( self : ScriptDebugger, breakpoint : Instance )
--- @field EncounteredBreak RBXScriptSignal @function( self : ScriptDebugger, line : number, breakReason : Enum.BreakReason )
--- @field Resuming RBXScriptSignal @function( self : ScriptDebugger )
--- @field WatchAdded RBXScriptSignal @function( self : ScriptDebugger, watch : Instance )
--- @field WatchRemoved RBXScriptSignal @function( self : ScriptDebugger, watch : Instance )
--}}} End of ScriptDebugger;

--{{{ ScriptDocument
--- @class ScriptDocument : Instance
--- @field GetInternalUri fun( self : ScriptDocument ) : string
--- @field GetLine fun( self : ScriptDocument, lineIndex : int? ) : string
--- @field GetLineCount fun( self : ScriptDocument ) : number
--- @field GetScript fun( self : ScriptDocument ) : LuaSourceContainer
--- @field GetSelectedText fun( self : ScriptDocument ) : string
--- @field GetSelection fun( self : ScriptDocument ) : Tuple
--- @field GetSelectionEnd fun( self : ScriptDocument ) : Tuple
--- @field GetSelectionStart fun( self : ScriptDocument ) : Tuple
--- @field GetText fun( self : ScriptDocument, startLine : int?, startCharacter : int?, endLine : int?, endCharacter : int? ) : string
--- @field GetViewport fun( self : ScriptDocument ) : Tuple
--- @field HasSelectedText fun( self : ScriptDocument ) : boolean
--- @field IsCommandBar fun( self : ScriptDocument ) : boolean
--- @field EditTextAsync fun( self : ScriptDocument, newText : string, startLine : number, startCharacter : number, endLine : number, endCharacter : number ) : Tuple
--- @field ForceSetSelectionAsync fun( self : ScriptDocument, cursorLine : number, cursorCharacter : number, anchorLine : int?, anchorCharacter : int? ) : Tuple
--- @field RequestSetSelectionAsync fun( self : ScriptDocument, cursorLine : number, cursorCharacter : number, anchorLine : int?, anchorCharacter : int? ) : Tuple
--- @field SelectionChanged RBXScriptSignal @function( self : ScriptDocument, positionLine : number, positionCharacter : number, anchorLine : number, anchorCharacter : number )
--- @field ViewportChanged RBXScriptSignal @function( self : ScriptDocument, startLine : number, endLine : number )
--}}} End of ScriptDocument;

--{{{ ScriptEditorService
--- @class ScriptEditorService : Instance
--- @field FindScriptDocument fun( self : ScriptEditorService, script : LuaSourceContainer ) : ScriptDocument
--- @field GetScriptDocuments fun( self : ScriptEditorService ) : Objects
--- @field RegisterLSPCallback fun( self : ScriptEditorService, methodToOverride : Enum.LSPMethodType, callbackFunction : Function ) : void
--- @field OpenScriptDocumentAsync fun( self : ScriptEditorService, script : LuaSourceContainer ) : Tuple
--- @field TextDocumentDidChange RBXScriptSignal @function( self : ScriptEditorService, document : ScriptDocument, changesArray : Variant )
--- @field TextDocumentDidClose RBXScriptSignal @function( self : ScriptEditorService, oldDocument : ScriptDocument )
--- @field TextDocumentDidOpen RBXScriptSignal @function( self : ScriptEditorService, newDocument : ScriptDocument )
--}}} End of ScriptEditorService;

--{{{ ScriptRegistrationService
--- @class ScriptRegistrationService : Instance
--- @field GetSourceContainerByScriptGuid fun( self : ScriptRegistrationService, guid : string ) : LuaSourceContainer
--}}} End of ScriptRegistrationService;

--{{{ ScriptService
--- @class ScriptService : Instance
--}}} End of ScriptService;

--{{{ Selection
--- @class Selection : Instance
--- @field ActiveInstance Instance
--- @field SelectionThickness number
--- @field Add fun( self : Selection, instancesToAdd : Objects ) : void
--- @field ClearTerrainSelectionHack fun( self : Selection ) : void
--- @field Get fun( self : Selection ) : Objects
--- @field Remove fun( self : Selection, instancesToRemove : Objects ) : void
--- @field Set fun( self : Selection, selection : Objects ) : void
--- @field SetTerrainSelectionHack fun( self : Selection, center : Vector3, size : Vector3 ) : void
--- @field SelectionChanged RBXScriptSignal @function( self : Selection )
--}}} End of Selection;

--{{{ ServerScriptService
--- @class ServerScriptService : Instance
--- @field LoadStringEnabled boolean
--}}} End of ServerScriptService;

--{{{ ServerStorage
--- @class ServerStorage : Instance
--}}} End of ServerStorage;

--{{{ ServiceProvider
--- @class ServiceProvider : Instance
--- @field FindService fun( self : ServiceProvider, className : string ) : Instance
--- @field GetService fun( self : ServiceProvider, className : string ) : Instance
--- @field getService fun( self : ServiceProvider, className : string ) : Instance
--- @field service fun( self : ServiceProvider, className : string ) : Instance
--- @field Close RBXScriptSignal @function( self : ServiceProvider )
--- @field CloseLate RBXScriptSignal @function( self : ServiceProvider )
--- @field ServiceAdded RBXScriptSignal @function( self : ServiceProvider, service : Instance )
--- @field ServiceRemoving RBXScriptSignal @function( self : ServiceProvider, service : Instance )
--}}} End of ServiceProvider;

--{{{ DataModel
--- @class DataModel : ServiceProvider
--- @field CreatorId number
--- @field CreatorType Enum.CreatorType
--- @field GameId number
--- @field GearGenreSetting Enum.GearGenreSetting
--- @field Genre Enum.Genre
--- @field IsSFFlagsLoaded boolean
--- @field JobId string
--- @field PlaceId number
--- @field PlaceVersion number
--- @field PrivateServerId string
--- @field PrivateServerOwnerId number
--- @field VIPServerId string
--- @field VIPServerOwnerId number
--- @field Workspace Workspace
--- @field lighting Instance
--- @field workspace Workspace
--- @field BindToClose fun( self : DataModel, function : Function ) : void
--- @field DefineFastFlag fun( self : DataModel, name : string, defaultValue : boolean ) : boolean
--- @field DefineFastInt fun( self : DataModel, name : string, defaultValue : number ) : number
--- @field DefineFastString fun( self : DataModel, name : string, defaultValue : string ) : string
--- @field GetEngineFeature fun( self : DataModel, name : string ) : boolean
--- @field GetFastFlag fun( self : DataModel, name : string ) : boolean
--- @field GetFastInt fun( self : DataModel, name : string ) : number
--- @field GetFastString fun( self : DataModel, name : string ) : string
--- @field GetJobsInfo fun( self : DataModel ) : Array
--- @field GetMessage fun( self : DataModel ) : string
--- @field GetObjects fun( self : DataModel, url : Content ) : Objects
--- @field GetObjectsAllOrNone fun( self : DataModel, url : Content ) : Objects
--- @field GetObjectsList fun( self : DataModel, urls : Array ) : Array
--- @field GetRemoteBuildMode fun( self : DataModel ) : boolean
--- @field IsGearTypeAllowed fun( self : DataModel, gearType : Enum.GearType ) : boolean
--- @field IsLoaded fun( self : DataModel ) : boolean
--- @field Load fun( self : DataModel, url : Content ) : void
--- @field OpenScreenshotsFolder fun( self : DataModel ) : void
--- @field OpenVideosFolder fun( self : DataModel ) : void
--- @field ReportInGoogleAnalytics fun( self : DataModel, category : string, action : string, label : string, value : number ) : void
--- @field SetFastFlagForTesting fun( self : DataModel, name : string, newValue : boolean ) : boolean
--- @field SetFastIntForTesting fun( self : DataModel, name : string, newValue : number ) : number
--- @field SetFastStringForTesting fun( self : DataModel, name : string, newValue : string ) : string
--- @field SetPlaceId fun( self : DataModel, placeId : number ) : void
--- @field SetUniverseId fun( self : DataModel, universeId : number ) : void
--- @field Shutdown fun( self : DataModel ) : void
--- @field GetObjectsAsync fun( self : DataModel, url : Content ) : Objects
--- @field HttpGetAsync fun( self : DataModel, url : string, httpRequestType : Enum.HttpRequestType ) : string
--- @field HttpPostAsync fun( self : DataModel, url : string, data : string, contentType : string, httpRequestType : Enum.HttpRequestType ) : string
--- @field InsertObjectsAndJoinIfLegacyAsync fun( self : DataModel, url : Content ) : Objects
--- @field SavePlace fun( self : DataModel, saveFilter : Enum.SaveFilter ) : boolean
--- @field AllowedGearTypeChanged RBXScriptSignal @function( self : DataModel )
--- @field GraphicsQualityChangeRequest RBXScriptSignal @function( self : DataModel, betterQuality : boolean )
--- @field ItemChanged RBXScriptSignal @function( self : DataModel, object : Instance, descriptor : string )
--- @field Loaded RBXScriptSignal @function( self : DataModel )
--- @field ScreenshotReady RBXScriptSignal @function( self : DataModel, path : string )
--- @field ScreenshotSavedToAlbum RBXScriptSignal @function( self : DataModel, filename : string, success : boolean, message : string )
--- @field OnClose fun( self : DataModel ) : Tuple @Callback
--}}} End of DataModel;

--{{{ GenericSettings
--- @class GenericSettings : ServiceProvider
--}}} End of GenericSettings;

--{{{ AnalysticsSettings
--- @class AnalysticsSettings : GenericSettings
--}}} End of AnalysticsSettings;

--{{{ GlobalSettings
--- @class GlobalSettings : GenericSettings
--- @field GetFFlag fun( self : GlobalSettings, name : string ) : boolean
--- @field GetFVariable fun( self : GlobalSettings, name : string ) : string
--}}} End of GlobalSettings;

--{{{ UserSettings
--- @class UserSettings : GenericSettings
--- @field IsUserFeatureEnabled fun( self : UserSettings, name : string ) : boolean
--- @field Reset fun( self : UserSettings ) : void
--}}} End of UserSettings;

--{{{ SessionService
--- @class SessionService : Instance
--- @field GetCreatedTimestampUtcMs fun( self : SessionService, sid : string ) : number
--- @field GetMetadata fun( self : SessionService, sid : string, key : string ) : Variant
--- @field GetRootSID fun( self : SessionService ) : string
--- @field RemoveMetadata fun( self : SessionService, sid : string, key : string ) : void
--- @field RemoveSession fun( self : SessionService, sid : string ) : void
--- @field RemoveSessionsWithMetadataKey fun( self : SessionService, key : string ) : void
--- @field ReplaceSession fun( self : SessionService, sid : string, tag : string ) : void
--- @field SessionExists fun( self : SessionService, sid : string ) : boolean
--- @field SetMetadata fun( self : SessionService, sid : string, key : string, value : Variant ) : void
--- @field SetSession fun( self : SessionService, parentSid : string, childSid : string, tag : string ) : void
--}}} End of SessionService;

--{{{ Sky
--- @class Sky : Instance
--- @field CelestialBodiesShown boolean
--- @field MoonAngularSize number
--- @field MoonTextureId Content
--- @field SkyboxBk Content
--- @field SkyboxDn Content
--- @field SkyboxFt Content
--- @field SkyboxLf Content
--- @field SkyboxRt Content
--- @field SkyboxUp Content
--- @field StarCount number
--- @field SunAngularSize number
--- @field SunTextureId Content
--}}} End of Sky;

--{{{ Smoke
--- @class Smoke : Instance
--- @field Color Color3
--- @field Enabled boolean
--- @field Opacity number
--- @field RiseVelocity number
--- @field Size number
--- @field TimeScale number
--}}} End of Smoke;

--{{{ SnippetService
--- @class SnippetService : Instance
--}}} End of SnippetService;

--{{{ SocialService
--- @class SocialService : Instance
--- @field InvokeGameInvitePromptClosed fun( self : SocialService, player : Instance, recipientIds : Array ) : void
--- @field PromptGameInvite fun( self : SocialService, player : Instance ) : void
--- @field CanSendGameInviteAsync fun( self : SocialService, player : Instance ) : boolean
--- @field GameInvitePromptClosed RBXScriptSignal @function( self : SocialService, player : Instance, recipientIds : Array )
--- @field PromptInviteRequested RBXScriptSignal @function( self : SocialService, player : Instance )
--}}} End of SocialService;

--{{{ Sound
--- @class Sound : Instance
--- @field ChannelCount number
--- @field EmitterSize number
--- @field IsLoaded boolean
--- @field IsPaused boolean
--- @field IsPlaying boolean
--- @field Looped boolean
--- @field MaxDistance number
--- @field MinDistance number
--- @field Pitch number
--- @field PlayOnRemove boolean
--- @field PlaybackLoudness number
--- @field PlaybackSpeed number
--- @field Playing boolean
--- @field RollOffMaxDistance number
--- @field RollOffMinDistance number
--- @field RollOffMode Enum.RollOffMode
--- @field SoundGroup SoundGroup
--- @field SoundId Content
--- @field TimeLength number
--- @field TimePosition number
--- @field UsageContextPermission Enum.UsageContext
--- @field Volume number
--- @field isPlaying boolean
--- @field Pause fun( self : Sound ) : void
--- @field Play fun( self : Sound ) : void
--- @field Resume fun( self : Sound ) : void
--- @field Stop fun( self : Sound ) : void
--- @field pause fun( self : Sound ) : void
--- @field play fun( self : Sound ) : void
--- @field stop fun( self : Sound ) : void
--- @field DidLoop RBXScriptSignal @function( self : Sound, soundId : string, numOfTimesLooped : number )
--- @field Ended RBXScriptSignal @function( self : Sound, soundId : string )
--- @field Loaded RBXScriptSignal @function( self : Sound, soundId : string )
--- @field Paused RBXScriptSignal @function( self : Sound, soundId : string )
--- @field Played RBXScriptSignal @function( self : Sound, soundId : string )
--- @field Resumed RBXScriptSignal @function( self : Sound, soundId : string )
--- @field Stopped RBXScriptSignal @function( self : Sound, soundId : string )
--}}} End of Sound;

--{{{ SoundEffect
--- @class SoundEffect : Instance
--- @field Enabled boolean
--- @field Priority number
--}}} End of SoundEffect;

--{{{ AssetSoundEffect
--- @class AssetSoundEffect : SoundEffect
--}}} End of AssetSoundEffect;

--{{{ ChorusSoundEffect
--- @class ChorusSoundEffect : SoundEffect
--- @field Depth number
--- @field Mix number
--- @field Rate number
--}}} End of ChorusSoundEffect;

--{{{ CompressorSoundEffect
--- @class CompressorSoundEffect : SoundEffect
--- @field Attack number
--- @field GainMakeup number
--- @field Ratio number
--- @field Release number
--- @field SideChain Instance
--- @field Threshold number
--}}} End of CompressorSoundEffect;

--{{{ CustomSoundEffect
--- @class CustomSoundEffect : SoundEffect
--}}} End of CustomSoundEffect;

--{{{ ChannelSelectorSoundEffect
--- @class ChannelSelectorSoundEffect : CustomSoundEffect
--- @field Channel number
--}}} End of ChannelSelectorSoundEffect;

--{{{ DistortionSoundEffect
--- @class DistortionSoundEffect : SoundEffect
--- @field Level number
--}}} End of DistortionSoundEffect;

--{{{ EchoSoundEffect
--- @class EchoSoundEffect : SoundEffect
--- @field Delay number
--- @field DryLevel number
--- @field Feedback number
--- @field WetLevel number
--}}} End of EchoSoundEffect;

--{{{ EqualizerSoundEffect
--- @class EqualizerSoundEffect : SoundEffect
--- @field HighGain number
--- @field LowGain number
--- @field MidGain number
--}}} End of EqualizerSoundEffect;

--{{{ FlangeSoundEffect
--- @class FlangeSoundEffect : SoundEffect
--- @field Depth number
--- @field Mix number
--- @field Rate number
--}}} End of FlangeSoundEffect;

--{{{ PitchShiftSoundEffect
--- @class PitchShiftSoundEffect : SoundEffect
--- @field Octave number
--}}} End of PitchShiftSoundEffect;

--{{{ ReverbSoundEffect
--- @class ReverbSoundEffect : SoundEffect
--- @field DecayTime number
--- @field Density number
--- @field Diffusion number
--- @field DryLevel number
--- @field WetLevel number
--}}} End of ReverbSoundEffect;

--{{{ TremoloSoundEffect
--- @class TremoloSoundEffect : SoundEffect
--- @field Depth number
--- @field Duty number
--- @field Frequency number
--}}} End of TremoloSoundEffect;

--{{{ SoundGroup
--- @class SoundGroup : Instance
--- @field Volume number
--}}} End of SoundGroup;

--{{{ SoundService
--- @class SoundService : Instance
--- @field AmbientReverb Enum.ReverbType
--- @field DistanceFactor number
--- @field DopplerScale number
--- @field RespectFilteringEnabled boolean
--- @field RolloffScale number
--- @field VolumetricAudio Enum.VolumetricAudio
--- @field BeginRecording fun( self : SoundService ) : boolean
--- @field GetListener fun( self : SoundService ) : Tuple
--- @field GetOutputDevice fun( self : SoundService ) : Tuple
--- @field GetOutputDevices fun( self : SoundService ) : Tuple
--- @field GetSoundMemoryData fun( self : SoundService ) : Dictionary
--- @field PlayLocalSound fun( self : SoundService, sound : Instance ) : void
--- @field SetListener fun( self : SoundService, listenerType : Enum.ListenerType, listener : Tuple ) : void
--- @field SetOutputDevice fun( self : SoundService, name : string, guid : string ) : void
--- @field SetRecordingDevice fun( self : SoundService, deviceIndex : number ) : boolean
--- @field EndRecording fun( self : SoundService ) : Dictionary
--- @field GetRecordingDevices fun( self : SoundService ) : Dictionary
--- @field DeviceListChanged RBXScriptSignal @function( self : SoundService, newDevices : Tuple )
--}}} End of SoundService;

--{{{ Sparkles
--- @class Sparkles : Instance
--- @field Color Color3
--- @field Enabled boolean
--- @field SparkleColor Color3
--- @field TimeScale number
--}}} End of Sparkles;

--{{{ SpawnerService
--- @class SpawnerService : Instance
--}}} End of SpawnerService;

--{{{ StackFrame
--- @class StackFrame : Instance
--- @field FrameId number
--- @field FrameName string
--- @field FrameType Enum.DebuggerFrameType
--- @field Globals DebuggerVariable
--- @field Line number
--- @field Locals DebuggerVariable
--- @field Populated boolean
--- @field Script string
--- @field Upvalues DebuggerVariable
--}}} End of StackFrame;

--{{{ StandalonePluginScripts
--- @class StandalonePluginScripts : Instance
--}}} End of StandalonePluginScripts;

--{{{ StarterGear
--- @class StarterGear : Instance
--}}} End of StarterGear;

--{{{ StarterPack
--- @class StarterPack : Instance
--}}} End of StarterPack;

--{{{ StarterPlayer
--- @class StarterPlayer : Instance
--- @field AllowCustomAnimations boolean
--- @field AutoJumpEnabled boolean
--- @field CameraMaxZoomDistance number
--- @field CameraMinZoomDistance number
--- @field CameraMode Enum.CameraMode
--- @field CharacterJumpHeight number
--- @field CharacterJumpPower number
--- @field CharacterMaxSlopeAngle number
--- @field CharacterUseJumpPower boolean
--- @field CharacterWalkSpeed number
--- @field DevCameraOcclusionMode Enum.DevCameraOcclusionMode
--- @field DevComputerCameraMovementMode Enum.DevComputerCameraMovementMode
--- @field DevComputerMovementMode Enum.DevComputerMovementMode
--- @field DevTouchCameraMovementMode Enum.DevTouchCameraMovementMode
--- @field DevTouchMovementMode Enum.DevTouchMovementMode
--- @field EnableDynamicHeads Enum.LoadDynamicHeads
--- @field EnableMouseLockOption boolean
--- @field GameSettingsAssetIDFace number
--- @field GameSettingsAssetIDHead number
--- @field GameSettingsAssetIDLeftArm number
--- @field GameSettingsAssetIDLeftLeg number
--- @field GameSettingsAssetIDPants number
--- @field GameSettingsAssetIDRightArm number
--- @field GameSettingsAssetIDRightLeg number
--- @field GameSettingsAssetIDShirt number
--- @field GameSettingsAssetIDTeeShirt number
--- @field GameSettingsAssetIDTorso number
--- @field GameSettingsAvatar Enum.GameAvatarType
--- @field GameSettingsR15Collision Enum.R15CollisionType
--- @field GameSettingsScaleRangeBodyType NumberRange
--- @field GameSettingsScaleRangeHead NumberRange
--- @field GameSettingsScaleRangeHeight NumberRange
--- @field GameSettingsScaleRangeProportion NumberRange
--- @field GameSettingsScaleRangeWidth NumberRange
--- @field HealthDisplayDistance number
--- @field LoadCharacterAppearance boolean
--- @field LoadCharacterLayeredClothing  Enum.LoadCharacterLayeredClothing
--- @field NameDisplayDistance number
--- @field UserEmotesEnabled boolean
--- @field ClearDefaults fun( self : StarterPlayer ) : void
--}}} End of StarterPlayer;

--{{{ StarterPlayerScripts
--- @class StarterPlayerScripts : Instance
--}}} End of StarterPlayerScripts;

--{{{ StarterCharacterScripts
--- @class StarterCharacterScripts : StarterPlayerScripts
--}}} End of StarterCharacterScripts;

--{{{ Stats
--- @class Stats : Instance
--- @field ContactsCount number
--- @field DataReceiveKbps number
--- @field DataSendKbps number
--- @field HeartbeatTimeMs number
--- @field InstanceCount number
--- @field MovingPrimitivesCount number
--- @field PhysicsReceiveKbps number
--- @field PhysicsSendKbps number
--- @field PhysicsStepTimeMs number
--- @field PrimitivesCount number
--- @field GetBrowserTrackerId fun( self : Stats ) : string
--- @field GetMemoryUsageMbForTag fun( self : Stats, tag : Enum.DeveloperMemoryTag ) : number
--- @field GetTotalMemoryUsageMb fun( self : Stats ) : number
--- @field GetPaginatedMemoryByTexture fun( self : Stats, queryType : Enum.TextureQueryType, pageIndex : number, pageSize : number ) : Dictionary
--}}} End of Stats;

--{{{ StatsItem
--- @class StatsItem : Instance
--- @field DisplayName string
--- @field GetValue fun( self : StatsItem ) : number
--- @field GetValueString fun( self : StatsItem ) : string
--}}} End of StatsItem;

--{{{ RunningAverageItemDouble
--- @class RunningAverageItemDouble : StatsItem
--}}} End of RunningAverageItemDouble;

--{{{ RunningAverageItemInt
--- @class RunningAverageItemInt : StatsItem
--}}} End of RunningAverageItemInt;

--{{{ RunningAverageTimeIntervalItem
--- @class RunningAverageTimeIntervalItem : StatsItem
--}}} End of RunningAverageTimeIntervalItem;

--{{{ TotalCountTimeIntervalItem
--- @class TotalCountTimeIntervalItem : StatsItem
--}}} End of TotalCountTimeIntervalItem;

--{{{ StopWatchReporter
--- @class StopWatchReporter : Instance
--- @field FinishTask fun( self : StopWatchReporter, taskId : number ) : void
--- @field SendReport fun( self : StopWatchReporter, reportName : string ) : void
--- @field StartTask fun( self : StopWatchReporter, reportName : string, taskName : string ) : number
--}}} End of StopWatchReporter;

--{{{ StudioAssetService
--- @class StudioAssetService : Instance
--- @field ConvertToPackageUpload fun( self : StudioAssetService, uploadUrl : string, cloneInstances : Objects, originalInstances : Objects ) : void
--- @field SerializeInstances fun( self : StudioAssetService, instances : Objects ) : string
--- @field OnConvertToPackageResult RBXScriptSignal @function( self : StudioAssetService, isSuccessful : boolean, errorMessage : string )
--- @field OnSaveToRoblox RBXScriptSignal @function( self : StudioAssetService, instances : Objects )
--}}} End of StudioAssetService;

--{{{ StudioData
--- @class StudioData : Instance
--- @field EnableScriptCollabByDefaultOnLoad boolean
--- @field SrcPlaceId number
--- @field SrcUniverseId number
--}}} End of StudioData;

--{{{ StudioDeviceEmulatorService
--- @class StudioDeviceEmulatorService : Instance
--- @field HasMultiTouchStarted boolean
--- @field IsMultiTouchEmulationOn boolean
--- @field IsMultiTouchEnabled boolean
--- @field PivotPosition Vector2
--- @field GetMaxNumTouches fun( self : StudioDeviceEmulatorService ) : number
--- @field GetTouchInBounds fun( self : StudioDeviceEmulatorService, index : number ) : boolean
--- @field GetTouchPosition fun( self : StudioDeviceEmulatorService, index : number ) : Vector2
--- @field EmulatePCDeviceWithResolution fun( self : StudioDeviceEmulatorService, deviceId : string, resolution : Vector2 ) : boolean
--- @field GetCurrentDeviceId fun( self : StudioDeviceEmulatorService ) : string
--- @field GetCurrentOrientation fun( self : StudioDeviceEmulatorService ) : Enum.ScreenOrientation
--- @field HasDeviceWithId fun( self : StudioDeviceEmulatorService, deviceId : string ) : boolean
--- @field SetCurrentDeviceId fun( self : StudioDeviceEmulatorService, deviceId : string ) : void
--- @field SetCurrentOrientation fun( self : StudioDeviceEmulatorService, orientation : Enum.ScreenOrientation ) : void
--- @field CurrentDeviceIdChanged RBXScriptSignal @function( self : StudioDeviceEmulatorService )
--- @field OrientationChanged RBXScriptSignal @function( self : StudioDeviceEmulatorService )
--- @field TouchInBoundsChanged RBXScriptSignal @function( self : StudioDeviceEmulatorService )
--- @field TouchPositionsChanged RBXScriptSignal @function( self : StudioDeviceEmulatorService )
--}}} End of StudioDeviceEmulatorService;

--{{{ StudioHighDpiService
--- @class StudioHighDpiService : Instance
--- @field IsNotHighDPIAwareBuild fun( self : StudioHighDpiService ) : boolean
--}}} End of StudioHighDpiService;

--{{{ StudioPublishService
--- @class StudioPublishService : Instance
--- @field ClearUploadNames fun( self : StudioPublishService ) : void
--- @field PublishAs fun( self : StudioPublishService, universeId : number, placeId : number, groupId : number, isPublish : boolean, publishParameters : Variant ) : void
--- @field PublishThenTurnOnTeamCreate fun( self : StudioPublishService ) : void
--- @field RefreshDocumentDisplayName fun( self : StudioPublishService ) : void
--- @field SetTeamCreateOnPublishInfo fun( self : StudioPublishService, shouldTurnOnTcOnPublish : boolean, newPlaceName : string ) : void
--- @field SetUniverseDisplayName fun( self : StudioPublishService, newName : string ) : void
--- @field SetUploadNames fun( self : StudioPublishService, placeName : string, universeName : string ) : void
--- @field ShowSaveOrPublishPlaceToRoblox fun( self : StudioPublishService, showGameSelect : boolean, isPublish : boolean, closeMode : Enum.StudioCloseMode ) : void
--- @field GameNameUpdated RBXScriptSignal @function( self : StudioPublishService, name : string )
--- @field GamePublishCancelled RBXScriptSignal @function( self : StudioPublishService )
--- @field GamePublishFinished RBXScriptSignal @function( self : StudioPublishService, success : boolean, gameId : number )
--- @field OnSaveOrPublishPlaceToRoblox RBXScriptSignal @function( self : StudioPublishService, showGameSelect : boolean, isPublish : boolean, closeMode : Enum.StudioCloseMode )
--}}} End of StudioPublishService;

--{{{ StudioScriptDebugEventListener
--- @class StudioScriptDebugEventListener : Instance
--}}} End of StudioScriptDebugEventListener;

--{{{ StudioService
--- @class StudioService : Instance
--- @field ActiveScript Instance
--- @field AlignDraggedObjects boolean
--- @field DraggerSolveConstraints boolean
--- @field DrawConstraintsOnTop boolean
--- @field GridSize number
--- @field HoverInstance Instance
--- @field InstalledPluginData string
--- @field PivotSnapToGeometry boolean
--- @field RotateIncrement number
--- @field ShowActiveInstanceHighlight boolean
--- @field ShowConstraintDetails boolean
--- @field StudioLocaleId string
--- @field UseLocalSpace boolean
--- @field AnimationIdSelected fun( self : StudioService, id : number ) : void
--- @field CopyToClipboard fun( self : StudioService, stringToCopy : string ) : void
--- @field GetBadgeConfigureUrl fun( self : StudioService, badgeId : number ) : string
--- @field GetBadgeUploadUrl fun( self : StudioService ) : string
--- @field GetClassIcon fun( self : StudioService, className : string ) : Dictionary
--- @field GetPlaceIsPersistedToCloud fun( self : StudioService ) : boolean
--- @field GetResourceByCategory fun( self : StudioService, category : string ) : Dictionary
--- @field GetStartupAssetId fun( self : StudioService ) : string
--- @field GetStartupPluginId fun( self : StudioService ) : string
--- @field GetTermsOfUseUrl fun( self : StudioService ) : string
--- @field GetUserId fun( self : StudioService ) : number
--- @field GizmoRaycast fun( self : StudioService, origin : Vector3, direction : Vector3, raycastParams : RaycastParams ) : RaycastResult
--- @field HasInternalPermission fun( self : StudioService ) : boolean
--- @field IsPluginInstalled fun( self : StudioService, assetId : number ) : boolean
--- @field IsPluginUpToDate fun( self : StudioService, assetId : number, currentAssetVersion : number ) : boolean
--- @field OpenInBrowser_DONOTUSE fun( self : StudioService, url : string ) : void
--- @field RequestClose fun( self : StudioService, closeMode : Enum.StudioCloseMode ) : void
--- @field SetPluginEnabled fun( self : StudioService, assetId : number, state : boolean ) : void
--- @field ShowPlaceVersionHistoryDialog fun( self : StudioService, placeId : number ) : void
--- @field ShowPublishToRoblox fun( self : StudioService ) : void
--- @field UninstallPlugin fun( self : StudioService, assetId : number ) : void
--- @field UpdatePluginManagement fun( self : StudioService ) : void
--- @field PromptImportFile fun( self : StudioService, fileTypeFilter : Array ) : Instance
--- @field PromptImportFiles fun( self : StudioService, fileTypeFilter : Array ) : Objects
--- @field TryInstallPlugin fun( self : StudioService, assetId : number, assetVersionId : number ) : void
--- @field OnImportFromRoblox RBXScriptSignal @function( self : StudioService )
--- @field OnOpenGameSettings RBXScriptSignal @function( self : StudioService, pageIdentifier : string )
--- @field OnOpenManagePackagePlugin RBXScriptSignal @function( self : StudioService, userId : number, assetId : number )
--- @field OnPluginInstalledFromToolbox RBXScriptSignal @function( self : StudioService )
--- @field OnPluginInstalledFromWeb RBXScriptSignal @function( self : StudioService, pluginId : string )
--- @field OnPublishAsPlugin RBXScriptSignal @function( self : StudioService, instances : Objects )
--- @field OnSaveToRoblox RBXScriptSignal @function( self : StudioService, instances : Objects )
--- @field PromptTransformPluginCheckEnable RBXScriptSignal @function( self : StudioService )
--- @field SaveLocallyAsComplete RBXScriptSignal @function( self : StudioService, success : boolean )
--}}} End of StudioService;

--{{{ StudioTheme
--- @class StudioTheme : Instance
--- @field GetColor fun( self : StudioTheme, styleguideitem : Enum.StudioStyleGuideColor, modifier : Enum.StudioStyleGuideModifier ) : Color3
--}}} End of StudioTheme;

--{{{ SurfaceAppearance
--- @class SurfaceAppearance : Instance
--- @field AlphaMode Enum.AlphaMode
--- @field ColorMap Content
--- @field MetalnessMap Content
--- @field NormalMap Content
--- @field RoughnessMap Content
--- @field TexturePack Content
--}}} End of SurfaceAppearance;

--{{{ TaskScheduler
--- @class TaskScheduler : Instance
--- @field SchedulerDutyCycle number
--- @field SchedulerRate number
--- @field ThreadPoolConfig Enum.ThreadPoolConfig
--- @field ThreadPoolSize number
--}}} End of TaskScheduler;

--{{{ Team
--- @class Team : Instance
--- @field AutoAssignable boolean
--- @field AutoColorCharacters boolean
--- @field ChildOrder number
--- @field Score number
--- @field TeamColor BrickColor
--- @field GetPlayers fun( self : Team ) : Objects
--- @field PlayerAdded RBXScriptSignal @function( self : Team, player : Player )
--- @field PlayerRemoved RBXScriptSignal @function( self : Team, player : Player )
--}}} End of Team;

--{{{ TeamCreateService
--- @class TeamCreateService : Instance
--- @field ToggleManageCollaborators RBXScriptSignal @function( self : TeamCreateService )
--}}} End of TeamCreateService;

--{{{ Teams
--- @class Teams : Instance
--- @field GetTeams fun( self : Teams ) : Objects
--- @field RebalanceTeams fun( self : Teams ) : void
--}}} End of Teams;

--{{{ TeleportAsyncResult
--- @class TeleportAsyncResult : Instance
--- @field PrivateServerId string
--- @field ReservedServerAccessCode string
--}}} End of TeleportAsyncResult;

--{{{ TeleportOptions
--- @class TeleportOptions : Instance
--- @field ReservedServerAccessCode string
--- @field ServerInstanceId string
--- @field ShouldReserveServer boolean
--- @field GetTeleportData fun( self : TeleportOptions ) : Variant
--- @field SetTeleportData fun( self : TeleportOptions, teleportData : Variant ) : void
--}}} End of TeleportOptions;

--{{{ TeleportService
--- @class TeleportService : Instance
--- @field CustomizedTeleportUI boolean
--- @field GetArrivingTeleportGui fun( self : TeleportService ) : Instance
--- @field GetLocalPlayerTeleportData fun( self : TeleportService ) : Variant
--- @field GetTeleportSetting fun( self : TeleportService, setting : string ) : Variant
--- @field SetTeleportGui fun( self : TeleportService, gui : Instance ) : void
--- @field SetTeleportSetting fun( self : TeleportService, setting : string, value : Variant ) : void
--- @field Teleport fun( self : TeleportService, placeId : number, player : Instance, teleportData : Variant, customLoadingScreen : Instance ) : void
--- @field TeleportCancel fun( self : TeleportService ) : void
--- @field TeleportToPlaceInstance fun( self : TeleportService, placeId : number, instanceId : string, player : Instance, spawnName : string, teleportData : Variant, customLoadingScreen : Instance ) : void
--- @field TeleportToPrivateServer fun( self : TeleportService, placeId : number, reservedServerAccessCode : string, players : Objects, spawnName : string, teleportData : Variant, customLoadingScreen : Instance ) : void
--- @field TeleportToSpawnByName fun( self : TeleportService, placeId : number, spawnName : string, player : Instance, teleportData : Variant, customLoadingScreen : Instance ) : void
--- @field GetPlayerPlaceInstanceAsync fun( self : TeleportService, userId : number ) : Tuple
--- @field ReserveServer fun( self : TeleportService, placeId : number ) : Tuple
--- @field TeleportAsync fun( self : TeleportService, placeId : number, players : Objects, teleportOptions : Instance ) : Instance
--- @field TeleportPartyAsync fun( self : TeleportService, placeId : number, players : Objects, teleportData : Variant, customLoadingScreen : Instance ) : string
--- @field LocalPlayerArrivedFromTeleport RBXScriptSignal @function( self : TeleportService, loadingGui : Instance, dataTable : Variant )
--- @field TeleportInitFailed RBXScriptSignal @function( self : TeleportService, player : Instance, teleportResult : Enum.TeleportResult, errorMessage : string, placeId : number, teleportOptions : Instance )
--}}} End of TeleportService;

--{{{ TemporaryCageMeshProvider
--- @class TemporaryCageMeshProvider : Instance
--}}} End of TemporaryCageMeshProvider;

--{{{ TemporaryScriptService
--- @class TemporaryScriptService : Instance
--}}} End of TemporaryScriptService;

--{{{ TerrainDetail
--- @class TerrainDetail : Instance
--- @field ColorMap Content
--- @field Face Enum.TerrainFace
--- @field MaterialPattern Enum.MaterialPattern
--- @field MetalnessMap Content
--- @field NormalMap Content
--- @field RoughnessMap Content
--- @field StudsPerTile number
--}}} End of TerrainDetail;

--{{{ TerrainRegion
--- @class TerrainRegion : Instance
--- @field IsSmooth boolean
--- @field SizeInCells Vector3
--- @field ConvertToSmooth fun( self : TerrainRegion ) : void
--}}} End of TerrainRegion;

--{{{ TestService
--- @class TestService : Instance
--- @field AutoRuns boolean
--- @field Description string
--- @field ErrorCount number
--- @field ExecuteWithStudioRun boolean
--- @field Is30FpsThrottleEnabled boolean
--- @field IsPhysicsEnvironmentalThrottled boolean
--- @field IsSleepAllowed boolean
--- @field NumberOfPlayers number
--- @field SimulateSecondsLag number
--- @field TestCount number
--- @field Timeout number
--- @field WarnCount number
--- @field Check fun( self : TestService, condition : boolean, description : string, source : Instance, line : number ) : void
--- @field Checkpoint fun( self : TestService, text : string, source : Instance, line : number ) : void
--- @field Done fun( self : TestService ) : void
--- @field Error fun( self : TestService, description : string, source : Instance, line : number ) : void
--- @field Fail fun( self : TestService, description : string, source : Instance, line : number ) : void
--- @field Message fun( self : TestService, text : string, source : Instance, line : number ) : void
--- @field Require fun( self : TestService, condition : boolean, description : string, source : Instance, line : number ) : void
--- @field ScopeTime fun( self : TestService ) : Dictionary
--- @field Warn fun( self : TestService, condition : boolean, description : string, source : Instance, line : number ) : void
--- @field isFeatureEnabled fun( self : TestService, name : string ) : boolean
--- @field Run fun( self : TestService ) : void
--- @field ServerCollectConditionalResult RBXScriptSignal @function( self : TestService, condition : boolean, text : string, script : Instance, line : number )
--- @field ServerCollectResult RBXScriptSignal @function( self : TestService, text : string, script : Instance, line : number )
--}}} End of TestService;

--{{{ TextBoxService
--- @class TextBoxService : Instance
--}}} End of TextBoxService;

--{{{ TextChannel
--- @class TextChannel : Instance
--- @field DisplaySystemMessage fun( self : TextChannel, systemMessage : string, metadata : string ) : TextChatMessage
--- @field AddUserAsync fun( self : TextChannel, userId : number ) : Tuple
--- @field SendAsync fun( self : TextChannel, message : string, metadata : string ) : TextChatMessage
--- @field MessageReceived RBXScriptSignal @function( self : TextChannel, incomingMessage : TextChatMessage )
--- @field OnIncomingMessage fun( self : TextChannel, message : TextChatMessage ) : Tuple @Callback
--}}} End of TextChannel;

--{{{ TextChatCommand
--- @class TextChatCommand : Instance
--- @field Enabled boolean
--- @field PrimaryAlias string
--- @field SecondaryAlias string
--- @field Triggered RBXScriptSignal @function( self : TextChatCommand, originTextSource : TextSource, unfilteredText : string )
--}}} End of TextChatCommand;

--{{{ TextChatConfigurations
--- @class TextChatConfigurations : Instance
--}}} End of TextChatConfigurations;

--{{{ ChatInputBarConfiguration
--- @class ChatInputBarConfiguration : TextChatConfigurations
--- @field AbsolutePosition Vector2
--- @field AbsolutePositionWrite Vector2
--- @field AbsoluteSize Vector2
--- @field AbsoluteSizeWrite Vector2
--- @field Enabled boolean
--- @field TargetTextChannel TextChannel
--}}} End of ChatInputBarConfiguration;

--{{{ ChatWindowConfiguration
--- @class ChatWindowConfiguration : TextChatConfigurations
--- @field AbsolutePosition Vector2
--- @field AbsolutePositionWrite Vector2
--- @field AbsoluteSize Vector2
--- @field AbsoluteSizeWrite Vector2
--- @field Enabled boolean
--}}} End of ChatWindowConfiguration;

--{{{ TextChatMessage
--- @class TextChatMessage : Instance
--- @field MessageId string
--- @field Metadata string
--- @field PrefixText string
--- @field Status Enum.TextChatMessageStatus
--- @field Text string
--- @field TextChannel TextChannel
--- @field TextSource TextSource
--- @field Timestamp DateTime
--}}} End of TextChatMessage;

--{{{ TextChatMessageProperties
--- @class TextChatMessageProperties : Instance
--- @field PrefixText string
--- @field Text string
--}}} End of TextChatMessageProperties;

--{{{ TextChatService
--- @class TextChatService : Instance
--- @field ChatVersion Enum.ChatVersion
--- @field CreateDefaultCommands boolean
--- @field CreateDefaultTextChannels boolean
--- @field MessageReceived RBXScriptSignal @function( self : TextChatService, textChatMessage : TextChatMessage )
--- @field SendingMessage RBXScriptSignal @function( self : TextChatService, textChatMessage : TextChatMessage )
--- @field OnIncomingMessage fun( self : TextChatService, message : TextChatMessage ) : Tuple @Callback
--}}} End of TextChatService;

--{{{ TextFilterResult
--- @class TextFilterResult : Instance
--- @field GetChatForUserAsync fun( self : TextFilterResult, toUserId : number ) : string
--- @field GetNonChatStringForBroadcastAsync fun( self : TextFilterResult ) : string
--- @field GetNonChatStringForUserAsync fun( self : TextFilterResult, toUserId : number ) : string
--}}} End of TextFilterResult;

--{{{ TextService
--- @class TextService : Instance
--- @field GetTextSize fun( self : TextService, string : string, fontSize : number, font : Enum.Font, frameSize : Vector2 ) : Vector2
--- @field SetResolutionScale fun( self : TextService, scale : number ) : void
--- @field FilterStringAsync fun( self : TextService, stringToFilter : string, fromUserId : number, textContext : Enum.TextFilterContext ) : Instance
--- @field GetFamilyInfoAsync fun( self : TextService, assetId : Content ) : Dictionary
--- @field GetTextBoundsAsync fun( self : TextService, params : GetTextBoundsParams ) : Vector2
--}}} End of TextService;

--{{{ TextSource
--- @class TextSource : Instance
--- @field CanSend boolean
--- @field UserId number
--}}} End of TextSource;

--{{{ ThirdPartyUserService
--- @class ThirdPartyUserService : Instance
--- @field GetUserPlatformId fun( self : ThirdPartyUserService ) : string
--- @field GetUserPlatformName fun( self : ThirdPartyUserService ) : string
--- @field HaveActiveUser fun( self : ThirdPartyUserService ) : boolean
--- @field ReturnToEngagement fun( self : ThirdPartyUserService ) : void
--- @field ShowAccountPicker fun( self : ThirdPartyUserService ) : void
--- @field RegisterActiveUser fun( self : ThirdPartyUserService, gamepadId : Enum.UserInputType ) : number
--- @field ActiveGamepadAdded RBXScriptSignal @function( self : ThirdPartyUserService )
--- @field ActiveGamepadRemoved RBXScriptSignal @function( self : ThirdPartyUserService )
--- @field ActiveUserSignedOut RBXScriptSignal @function( self : ThirdPartyUserService, signOutStatus : number )
--}}} End of ThirdPartyUserService;

--{{{ ThreadState
--- @class ThreadState : Instance
--- @field FrameCount number
--- @field Populated boolean
--- @field ThreadId number
--- @field ThreadName string
--- @field GetFrame fun( self : ThreadState, index : number ) : Instance
--}}} End of ThreadState;

--{{{ TimerService
--- @class TimerService : Instance
--}}} End of TimerService;

--{{{ ToastNotificationService
--- @class ToastNotificationService : Instance
--- @field HideNotification fun( self : ToastNotificationService, notificationId : string ) : void
--- @field ShowNotification fun( self : ToastNotificationService, message : string, notificationId : string ) : void
--}}} End of ToastNotificationService;

--{{{ TouchInputService
--- @class TouchInputService : Instance
--}}} End of TouchInputService;

--{{{ TouchTransmitter
--- @class TouchTransmitter : Instance
--}}} End of TouchTransmitter;

--{{{ TracerService
--- @class TracerService : Instance
--- @field FinishSpan fun( self : TracerService, spanId : string ) : void
--- @field StartSpan fun( self : TracerService, name : string, parentId : string ) : string
--}}} End of TracerService;

--{{{ TrackerStreamAnimation
--- @class TrackerStreamAnimation : Instance
--}}} End of TrackerStreamAnimation;

--{{{ Trail
--- @class Trail : Instance
--- @field Attachment0 Attachment
--- @field Attachment1 Attachment
--- @field Brightness number
--- @field Color ColorSequence
--- @field Enabled boolean
--- @field FaceCamera boolean
--- @field Lifetime number
--- @field LightEmission number
--- @field LightInfluence number
--- @field MaxLength number
--- @field MinLength number
--- @field Texture Content
--- @field TextureLength number
--- @field TextureMode Enum.TextureMode
--- @field Transparency NumberSequence
--- @field WidthScale NumberSequence
--- @field Clear fun( self : Trail ) : void
--}}} End of Trail;

--{{{ Translator
--- @class Translator : Instance
--- @field LocaleId string
--- @field FormatByKey fun( self : Translator, key : string, args : Variant ) : string
--- @field RobloxOnlyTranslate fun( self : Translator, context : Instance, text : string ) : string
--- @field Translate fun( self : Translator, context : Instance, text : string ) : string
--}}} End of Translator;

--{{{ TweenBase
--- @class TweenBase : Instance
--- @field PlaybackState Enum.PlaybackState
--- @field Cancel fun( self : TweenBase ) : void
--- @field Pause fun( self : TweenBase ) : void
--- @field Play fun( self : TweenBase ) : void
--- @field Completed RBXScriptSignal @function( self : TweenBase, playbackState : Enum.PlaybackState )
--}}} End of TweenBase;

--{{{ Tween
--- @class Tween : TweenBase
--- @field Instance Instance
--- @field TweenInfo TweenInfo
--}}} End of Tween;

--{{{ TweenService
--- @class TweenService : Instance
--- @field Create fun( self : TweenService, instance : Instance, tweenInfo : TweenInfo, propertyTable : Dictionary ) : Tween
--- @field GetValue fun( self : TweenService, alpha : number, easingStyle : Enum.EasingStyle, easingDirection : Enum.EasingDirection ) : number
--}}} End of TweenService;

--{{{ UGCValidationService
--- @class UGCValidationService : Instance
--- @field GetMeshTriCountSync fun( self : UGCValidationService, meshId : string ) : number
--- @field GetMeshVertsSync fun( self : UGCValidationService, meshId : string ) : Array
--- @field GetTextureSizeSync fun( self : UGCValidationService, textureId : string ) : Vector2
--- @field SetMeshIdBlocking fun( self : UGCValidationService, meshPart : Instance, meshId : string ) : void
--- @field FetchAssetWithFormat fun( self : UGCValidationService, url : Content, assetFormat : string ) : Objects
--- @field GetMeshTriCount fun( self : UGCValidationService, meshId : string ) : number
--- @field GetMeshVertColors fun( self : UGCValidationService, meshId : string ) : Array
--- @field GetMeshVerts fun( self : UGCValidationService, meshId : string ) : Array
--- @field GetTextureSize fun( self : UGCValidationService, textureId : string ) : Vector2
--- @field ValidateMeshTriangles fun( self : UGCValidationService, meshId : string ) : boolean
--- @field ValidateMeshVertColors fun( self : UGCValidationService, meshId : string ) : boolean
--- @field ValidateTextureSize fun( self : UGCValidationService, textureId : string ) : boolean
--- @field ValidateUVSpace fun( self : UGCValidationService, meshId : string ) : boolean
--}}} End of UGCValidationService;

--{{{ UIBase
--- @class UIBase : Instance
--}}} End of UIBase;

--{{{ UIComponent
--- @class UIComponent : UIBase
--}}} End of UIComponent;

--{{{ UIConstraint
--- @class UIConstraint : UIComponent
--}}} End of UIConstraint;

--{{{ UIAspectRatioConstraint
--- @class UIAspectRatioConstraint : UIConstraint
--- @field AspectRatio number
--- @field AspectType Enum.AspectType
--- @field DominantAxis Enum.DominantAxis
--}}} End of UIAspectRatioConstraint;

--{{{ UISizeConstraint
--- @class UISizeConstraint : UIConstraint
--- @field MaxSize Vector2
--- @field MinSize Vector2
--}}} End of UISizeConstraint;

--{{{ UITextSizeConstraint
--- @class UITextSizeConstraint : UIConstraint
--- @field MaxTextSize number
--- @field MinTextSize number
--}}} End of UITextSizeConstraint;

--{{{ UICorner
--- @class UICorner : UIComponent
--- @field CornerRadius UDim
--}}} End of UICorner;

--{{{ UIGradient
--- @class UIGradient : UIComponent
--- @field Color ColorSequence
--- @field Enabled boolean
--- @field Offset Vector2
--- @field Rotation number
--- @field Transparency NumberSequence
--}}} End of UIGradient;

--{{{ UILayout
--- @class UILayout : UIComponent
--}}} End of UILayout;

--{{{ UIGridStyleLayout
--- @class UIGridStyleLayout : UILayout
--- @field AbsoluteContentSize Vector2
--- @field FillDirection Enum.FillDirection
--- @field HorizontalAlignment Enum.HorizontalAlignment
--- @field SortOrder Enum.SortOrder
--- @field VerticalAlignment Enum.VerticalAlignment
--- @field ApplyLayout fun( self : UIGridStyleLayout ) : void
--- @field SetCustomSortFunction fun( self : UIGridStyleLayout, function : Function ) : void
--}}} End of UIGridStyleLayout;

--{{{ UIGridLayout
--- @class UIGridLayout : UIGridStyleLayout
--- @field AbsoluteCellCount Vector2
--- @field AbsoluteCellSize Vector2
--- @field CellPadding UDim2
--- @field CellSize UDim2
--- @field FillDirectionMaxCells number
--- @field StartCorner Enum.StartCorner
--}}} End of UIGridLayout;

--{{{ UIListLayout
--- @class UIListLayout : UIGridStyleLayout
--- @field Padding UDim
--}}} End of UIListLayout;

--{{{ UIPageLayout
--- @class UIPageLayout : UIGridStyleLayout
--- @field Animated boolean
--- @field Circular boolean
--- @field CurrentPage GuiObject
--- @field EasingDirection Enum.EasingDirection
--- @field EasingStyle Enum.EasingStyle
--- @field GamepadInputEnabled boolean
--- @field Padding UDim
--- @field ScrollWheelInputEnabled boolean
--- @field TouchInputEnabled boolean
--- @field TweenTime number
--- @field JumpTo fun( self : UIPageLayout, page : Instance ) : void
--- @field JumpToIndex fun( self : UIPageLayout, index : number ) : void
--- @field Next fun( self : UIPageLayout ) : void
--- @field Previous fun( self : UIPageLayout ) : void
--- @field PageEnter RBXScriptSignal @function( self : UIPageLayout, page : Instance )
--- @field PageLeave RBXScriptSignal @function( self : UIPageLayout, page : Instance )
--- @field Stopped RBXScriptSignal @function( self : UIPageLayout, currentPage : Instance )
--}}} End of UIPageLayout;

--{{{ UITableLayout
--- @class UITableLayout : UIGridStyleLayout
--- @field FillEmptySpaceColumns boolean
--- @field FillEmptySpaceRows boolean
--- @field MajorAxis Enum.TableMajorAxis
--- @field Padding UDim2
--}}} End of UITableLayout;

--{{{ UIPadding
--- @class UIPadding : UIComponent
--- @field PaddingBottom UDim
--- @field PaddingLeft UDim
--- @field PaddingRight UDim
--- @field PaddingTop UDim
--}}} End of UIPadding;

--{{{ UIScale
--- @class UIScale : UIComponent
--- @field Scale number
--}}} End of UIScale;

--{{{ UIStroke
--- @class UIStroke : UIComponent
--- @field ApplyStrokeMode Enum.ApplyStrokeMode
--- @field Color Color3
--- @field Enabled boolean
--- @field LineJoinMode Enum.LineJoinMode
--- @field Thickness number
--- @field Transparency number
--}}} End of UIStroke;

--{{{ UnvalidatedAssetService
--- @class UnvalidatedAssetService : Instance
--- @field AppendTempAssetId fun( self : UnvalidatedAssetService, userId : number, id : number, lookAt : Vector3, camPos : Vector3, usage : string ) : void
--- @field AppendVantagePoint fun( self : UnvalidatedAssetService, userId : number, id : number, lookAt : Vector3, camPos : Vector3 ) : boolean
--- @field UpgradeTempAssetId fun( self : UnvalidatedAssetService, userId : number, tempId : number, assetId : number ) : boolean
--}}} End of UnvalidatedAssetService;

--{{{ UserGameSettings
--- @class UserGameSettings : Instance
--- @field AllTutorialsDisabled boolean
--- @field CameraMode Enum.CustomCameraMode
--- @field CameraYInverted boolean
--- @field ChatVisible boolean
--- @field ComputerCameraMovementMode Enum.ComputerCameraMovementMode
--- @field ComputerMovementMode Enum.ComputerMovementMode
--- @field ControlMode Enum.ControlMode
--- @field DefaultCameraID string
--- @field Fullscreen boolean
--- @field GamepadCameraSensitivity number
--- @field GraphicsQualityLevel number
--- @field HasEverUsedVR boolean
--- @field IsUsingCameraYInverted boolean
--- @field IsUsingGamepadCameraSensitivity boolean
--- @field MasterVolume number
--- @field MicroProfilerWebServerEnabled boolean
--- @field MicroProfilerWebServerIP string
--- @field MicroProfilerWebServerPort number
--- @field MouseSensitivity number
--- @field MouseSensitivityFirstPerson Vector2
--- @field MouseSensitivityThirdPerson Vector2
--- @field OnScreenProfilerEnabled boolean
--- @field OnboardingsCompleted string
--- @field PerformanceStatsVisible boolean
--- @field RCCProfilerRecordFrameRate number
--- @field RCCProfilerRecordTimeFrame number
--- @field RotationType Enum.RotationType
--- @field SavedQualityLevel Enum.SavedQualitySetting
--- @field StartMaximized boolean
--- @field StartScreenPosition Vector2
--- @field StartScreenSize Vector2
--- @field TouchCameraMovementMode Enum.TouchCameraMovementMode
--- @field TouchMovementMode Enum.TouchMovementMode
--- @field UsedCoreGuiIsVisibleToggle boolean
--- @field UsedCustomGuiIsVisibleToggle boolean
--- @field UsedHideHudShortcut boolean
--- @field VREnabled boolean
--- @field VRRotationIntensity number
--- @field VignetteEnabled boolean
--- @field GetCameraYInvertValue fun( self : UserGameSettings ) : number
--- @field GetOnboardingCompleted fun( self : UserGameSettings, onboardingId : string ) : boolean
--- @field GetTutorialState fun( self : UserGameSettings, tutorialId : string ) : boolean
--- @field InFullScreen fun( self : UserGameSettings ) : boolean
--- @field InStudioMode fun( self : UserGameSettings ) : boolean
--- @field ResetOnboardingCompleted fun( self : UserGameSettings, onboardingId : string ) : void
--- @field SetCameraYInvertVisible fun( self : UserGameSettings ) : void
--- @field SetGamepadCameraSensitivityVisible fun( self : UserGameSettings ) : void
--- @field SetOnboardingCompleted fun( self : UserGameSettings, onboardingId : string ) : void
--- @field SetTutorialState fun( self : UserGameSettings, tutorialId : string, value : boolean ) : void
--- @field FullscreenChanged RBXScriptSignal @function( self : UserGameSettings, isFullscreen : boolean )
--- @field PerformanceStatsVisibleChanged RBXScriptSignal @function( self : UserGameSettings, isPerformanceStatsVisible : boolean )
--- @field StudioModeChanged RBXScriptSignal @function( self : UserGameSettings, isStudioMode : boolean )
--}}} End of UserGameSettings;

--{{{ UserInputService
--- @class UserInputService : Instance
--- @field AccelerometerEnabled boolean
--- @field BottomBarSize Vector2
--- @field GamepadEnabled boolean
--- @field GazeSelectionEnabled boolean
--- @field GyroscopeEnabled boolean
--- @field KeyboardEnabled boolean
--- @field LegacyInputEventsEnabled boolean
--- @field ModalEnabled boolean
--- @field MouseBehavior Enum.MouseBehavior
--- @field MouseDeltaSensitivity number
--- @field MouseEnabled boolean
--- @field MouseIconEnabled boolean
--- @field NavBarSize Vector2
--- @field OnScreenKeyboardAnimationDuration number
--- @field OnScreenKeyboardPosition Vector2
--- @field OnScreenKeyboardSize Vector2
--- @field OnScreenKeyboardVisible boolean
--- @field OverrideMouseIconBehavior Enum.OverrideMouseIconBehavior
--- @field RightBarSize Vector2
--- @field StatusBarSize Vector2
--- @field TouchEnabled boolean
--- @field UserHeadCFrame CFrame
--- @field VREnabled boolean
--- @field GamepadSupports fun( self : UserInputService, gamepadNum : Enum.UserInputType, gamepadKeyCode : Enum.KeyCode ) : boolean
--- @field GetConnectedGamepads fun( self : UserInputService ) : Array
--- @field GetDeviceAcceleration fun( self : UserInputService ) : InputObject
--- @field GetDeviceGravity fun( self : UserInputService ) : InputObject
--- @field GetDeviceRotation fun( self : UserInputService ) : Tuple
--- @field GetDeviceType fun( self : UserInputService ) : Enum.DeviceType
--- @field GetFocusedTextBox fun( self : UserInputService ) : TextBox
--- @field GetGamepadConnected fun( self : UserInputService, gamepadNum : Enum.UserInputType ) : boolean
--- @field GetGamepadState fun( self : UserInputService, gamepadNum : Enum.UserInputType ) : Array
--- @field GetKeysPressed fun( self : UserInputService ) : Array
--- @field GetLastInputType fun( self : UserInputService ) : Enum.UserInputType
--- @field GetMouseButtonsPressed fun( self : UserInputService ) : Array
--- @field GetMouseDelta fun( self : UserInputService ) : Vector2
--- @field GetMouseLocation fun( self : UserInputService ) : Vector2
--- @field GetNavigationGamepads fun( self : UserInputService ) : Array
--- @field GetPlatform fun( self : UserInputService ) : Enum.Platform
--- @field GetStringForKeyCode fun( self : UserInputService, keyCode : Enum.KeyCode ) : string
--- @field GetSupportedGamepadKeyCodes fun( self : UserInputService, gamepadNum : Enum.UserInputType ) : Array
--- @field GetUserCFrame fun( self : UserInputService, type : Enum.UserCFrame ) : CFrame
--- @field IsGamepadButtonDown fun( self : UserInputService, gamepadNum : Enum.UserInputType, gamepadKeyCode : Enum.KeyCode ) : boolean
--- @field IsKeyDown fun( self : UserInputService, keyCode : Enum.KeyCode ) : boolean
--- @field IsMouseButtonPressed fun( self : UserInputService, mouseButton : Enum.UserInputType ) : boolean
--- @field IsNavigationGamepad fun( self : UserInputService, gamepadEnum : Enum.UserInputType ) : boolean
--- @field RecenterUserHeadCFrame fun( self : UserInputService ) : void
--- @field SendAppUISizes fun( self : UserInputService, statusBarSize : Vector2, navBarSize : Vector2, bottomBarSize : Vector2, rightBarSize : Vector2 ) : void
--- @field SetNavigationGamepad fun( self : UserInputService, gamepadEnum : Enum.UserInputType, enabled : boolean ) : void
--- @field DeviceAccelerationChanged RBXScriptSignal @function( self : UserInputService, acceleration : InputObject )
--- @field DeviceGravityChanged RBXScriptSignal @function( self : UserInputService, gravity : InputObject )
--- @field DeviceRotationChanged RBXScriptSignal @function( self : UserInputService, rotation : InputObject, cframe : CFrame )
--- @field GamepadConnected RBXScriptSignal @function( self : UserInputService, gamepadNum : Enum.UserInputType )
--- @field GamepadDisconnected RBXScriptSignal @function( self : UserInputService, gamepadNum : Enum.UserInputType )
--- @field InputBegan RBXScriptSignal @function( self : UserInputService, input : InputObject, gameProcessedEvent : boolean )
--- @field InputChanged RBXScriptSignal @function( self : UserInputService, input : InputObject, gameProcessedEvent : boolean )
--- @field InputEnded RBXScriptSignal @function( self : UserInputService, input : InputObject, gameProcessedEvent : boolean )
--- @field JumpRequest RBXScriptSignal @function( self : UserInputService )
--- @field LastInputTypeChanged RBXScriptSignal @function( self : UserInputService, lastInputType : Enum.UserInputType )
--- @field PointerAction RBXScriptSignal @function( self : UserInputService, wheel : number, pan : Vector2, pinch : number, gameProcessedEvent : boolean )
--- @field StatusBarTapped RBXScriptSignal @function( self : UserInputService, position : Vector2 )
--- @field TextBoxFocusReleased RBXScriptSignal @function( self : UserInputService, textboxReleased : TextBox )
--- @field TextBoxFocused RBXScriptSignal @function( self : UserInputService, textboxFocused : TextBox )
--- @field TouchEnded RBXScriptSignal @function( self : UserInputService, touch : InputObject, gameProcessedEvent : boolean )
--- @field TouchLongPress RBXScriptSignal @function( self : UserInputService, touchPositions : Array, state : Enum.UserInputState, gameProcessedEvent : boolean )
--- @field TouchMoved RBXScriptSignal @function( self : UserInputService, touch : InputObject, gameProcessedEvent : boolean )
--- @field TouchPan RBXScriptSignal @function( self : UserInputService, touchPositions : Array, totalTranslation : Vector2, velocity : Vector2, state : Enum.UserInputState, gameProcessedEvent : boolean )
--- @field TouchPinch RBXScriptSignal @function( self : UserInputService, touchPositions : Array, scale : number, velocity : number, state : Enum.UserInputState, gameProcessedEvent : boolean )
--- @field TouchRotate RBXScriptSignal @function( self : UserInputService, touchPositions : Array, rotation : number, velocity : number, state : Enum.UserInputState, gameProcessedEvent : boolean )
--- @field TouchStarted RBXScriptSignal @function( self : UserInputService, touch : InputObject, gameProcessedEvent : boolean )
--- @field TouchSwipe RBXScriptSignal @function( self : UserInputService, swipeDirection : Enum.SwipeDirection, numberOfTouches : number, gameProcessedEvent : boolean )
--- @field TouchTap RBXScriptSignal @function( self : UserInputService, touchPositions : Array, gameProcessedEvent : boolean )
--- @field TouchTapInWorld RBXScriptSignal @function( self : UserInputService, position : Vector2, processedByUI : boolean )
--- @field UserCFrameChanged RBXScriptSignal @function( self : UserInputService, type : Enum.UserCFrame, value : CFrame )
--- @field WindowFocusReleased RBXScriptSignal @function( self : UserInputService )
--- @field WindowFocused RBXScriptSignal @function( self : UserInputService )
--}}} End of UserInputService;

--{{{ UserService
--- @class UserService : Instance
--- @field GetUserInfosByUserIdsAsync fun( self : UserService, userIds : Array ) : Array
--}}} End of UserService;

--{{{ VRService
--- @class VRService : Instance
--- @field DidPointerHit boolean
--- @field GuiInputUserCFrame Enum.UserCFrame
--- @field PointerHitCFrame CFrame
--- @field VRDeviceAvailable boolean
--- @field VRDeviceName string
--- @field VREnabled boolean
--- @field GetTouchpadMode fun( self : VRService, pad : Enum.VRTouchpad ) : Enum.VRTouchpadMode
--- @field GetUserCFrame fun( self : VRService, type : Enum.UserCFrame ) : CFrame
--- @field GetUserCFrameEnabled fun( self : VRService, type : Enum.UserCFrame ) : boolean
--- @field RecenterUserHeadCFrame fun( self : VRService ) : void
--- @field RequestNavigation fun( self : VRService, cframe : CFrame, inputUserCFrame : Enum.UserCFrame ) : void
--- @field SetTouchpadMode fun( self : VRService, pad : Enum.VRTouchpad, mode : Enum.VRTouchpadMode ) : void
--- @field NavigationRequested RBXScriptSignal @function( self : VRService, cframe : CFrame, inputUserCFrame : Enum.UserCFrame )
--- @field TouchpadModeChanged RBXScriptSignal @function( self : VRService, pad : Enum.VRTouchpad, mode : Enum.VRTouchpadMode )
--- @field UserCFrameChanged RBXScriptSignal @function( self : VRService, type : Enum.UserCFrame, value : CFrame )
--- @field UserCFrameEnabled RBXScriptSignal @function( self : VRService, type : Enum.UserCFrame, enabled : boolean )
--}}} End of VRService;

--{{{ ValueBase
--- @class ValueBase : Instance
--}}} End of ValueBase;

--{{{ BinaryStringValue
--- @class BinaryStringValue : ValueBase
--- @field Changed RBXScriptSignal @function( self : BinaryStringValue, value : BinaryString )
--}}} End of BinaryStringValue;

--{{{ BoolValue
--- @class BoolValue : ValueBase
--- @field Value boolean
--- @field Changed RBXScriptSignal @function( self : BoolValue, value : boolean )
--- @field changed RBXScriptSignal @function( self : BoolValue, value : boolean )
--}}} End of BoolValue;

--{{{ BrickColorValue
--- @class BrickColorValue : ValueBase
--- @field Value BrickColor
--- @field Changed RBXScriptSignal @function( self : BrickColorValue, value : BrickColor )
--- @field changed RBXScriptSignal @function( self : BrickColorValue, value : BrickColor )
--}}} End of BrickColorValue;

--{{{ CFrameValue
--- @class CFrameValue : ValueBase
--- @field Value CFrame
--- @field Changed RBXScriptSignal @function( self : CFrameValue, value : CFrame )
--- @field changed RBXScriptSignal @function( self : CFrameValue, value : CFrame )
--}}} End of CFrameValue;

--{{{ Color3Value
--- @class Color3Value : ValueBase
--- @field Value Color3
--- @field Changed RBXScriptSignal @function( self : Color3Value, value : Color3 )
--- @field changed RBXScriptSignal @function( self : Color3Value, value : Color3 )
--}}} End of Color3Value;

--{{{ IntValue
--- @class IntValue : ValueBase
--- @field Value number
--- @field Changed RBXScriptSignal @function( self : IntValue, value : number )
--- @field changed RBXScriptSignal @function( self : IntValue, value : number )
--}}} End of IntValue;

--{{{ NumberValue
--- @class NumberValue : ValueBase
--- @field Value number
--- @field Changed RBXScriptSignal @function( self : NumberValue, value : number )
--- @field changed RBXScriptSignal @function( self : NumberValue, value : number )
--}}} End of NumberValue;

--{{{ ObjectValue
--- @class ObjectValue : ValueBase
--- @field Value Instance
--- @field Changed RBXScriptSignal @function( self : ObjectValue, value : Instance )
--- @field changed RBXScriptSignal @function( self : ObjectValue, value : Instance )
--}}} End of ObjectValue;

--{{{ RayValue
--- @class RayValue : ValueBase
--- @field Value Ray
--- @field Changed RBXScriptSignal @function( self : RayValue, value : Ray )
--- @field changed RBXScriptSignal @function( self : RayValue, value : Ray )
--}}} End of RayValue;

--{{{ StringValue
--- @class StringValue : ValueBase
--- @field Value string
--- @field Changed RBXScriptSignal @function( self : StringValue, value : string )
--- @field changed RBXScriptSignal @function( self : StringValue, value : string )
--}}} End of StringValue;

--{{{ Vector3Value
--- @class Vector3Value : ValueBase
--- @field Value Vector3
--- @field Changed RBXScriptSignal @function( self : Vector3Value, value : Vector3 )
--- @field changed RBXScriptSignal @function( self : Vector3Value, value : Vector3 )
--}}} End of Vector3Value;

--{{{ Vector3Curve
--- @class Vector3Curve : Instance
--- @field GetValueAtTime fun( self : Vector3Curve, time : number ) : Array
--- @field X fun( self : Vector3Curve ) : FloatCurve
--- @field Y fun( self : Vector3Curve ) : FloatCurve
--- @field Z fun( self : Vector3Curve ) : FloatCurve
--}}} End of Vector3Curve;

--{{{ VersionControlService
--- @class VersionControlService : Instance
--- @field ScriptCollabEnabled boolean
--}}} End of VersionControlService;

--{{{ VideoCaptureService
--- @class VideoCaptureService : Instance
--- @field Active boolean
--- @field CameraID string
--- @field GetCameraDevices fun( self : VideoCaptureService ) : Map
--- @field DevicesChanged RBXScriptSignal @function( self : VideoCaptureService )
--- @field Error RBXScriptSignal @function( self : VideoCaptureService, cameraid : string, errorcode : string )
--- @field Started RBXScriptSignal @function( self : VideoCaptureService, cameraid : string )
--- @field Stopped RBXScriptSignal @function( self : VideoCaptureService, cameraid : string )
--}}} End of VideoCaptureService;

--{{{ VirtualInputManager
--- @class VirtualInputManager : Instance
--- @field AdditionalLuaState string
--- @field Dump fun( self : VirtualInputManager ) : void
--- @field HandleGamepadAxisInput fun( self : VirtualInputManager, objectId : number, keyCode : Enum.KeyCode, x : number, y : number, z : number ) : void
--- @field HandleGamepadButtonInput fun( self : VirtualInputManager, deviceId : number, keyCode : Enum.KeyCode, buttonState : number ) : void
--- @field HandleGamepadConnect fun( self : VirtualInputManager, deviceId : number ) : void
--- @field HandleGamepadDisconnect fun( self : VirtualInputManager, deviceId : number ) : void
--- @field SendAccelerometerEvent fun( self : VirtualInputManager, x : number, y : number, z : number ) : void
--- @field SendGravityEvent fun( self : VirtualInputManager, x : number, y : number, z : number ) : void
--- @field SendGyroscopeEvent fun( self : VirtualInputManager, quatX : number, quatY : number, quatZ : number, quatW : number ) : void
--- @field SendKeyEvent fun( self : VirtualInputManager, isPressed : boolean, keyCode : Enum.KeyCode, isRepeatedKey : boolean, layerCollector : Instance ) : void
--- @field SendMouseButtonEvent fun( self : VirtualInputManager, x : number, y : number, mouseButton : number, isDown : boolean, layerCollector : Instance, repeatCount : number ) : void
--- @field SendMouseMoveEvent fun( self : VirtualInputManager, x : number, y : number, layerCollector : Instance ) : void
--- @field SendMouseWheelEvent fun( self : VirtualInputManager, x : number, y : number, isForwardScroll : boolean, layerCollector : Instance ) : void
--- @field SendTextInputCharacterEvent fun( self : VirtualInputManager, str : string, layerCollector : Instance ) : void
--- @field SendTouchEvent fun( self : VirtualInputManager, touchId : number, state : number, x : number, y : number ) : void
--- @field SetInputTypesToIgnore fun( self : VirtualInputManager, inputTypesToIgnore : Variant ) : void
--- @field StartPlaying fun( self : VirtualInputManager, fileName : string ) : void
--- @field StartPlayingJSON fun( self : VirtualInputManager, string : string ) : void
--- @field StartRecording fun( self : VirtualInputManager ) : void
--- @field StopPlaying fun( self : VirtualInputManager ) : void
--- @field StopRecording fun( self : VirtualInputManager ) : void
--- @field sendRobloxEvent fun( self : VirtualInputManager, namespace : string, detail : string, detailType : string ) : void
--- @field sendThemeChangeEvent fun( self : VirtualInputManager, themeName : string ) : void
--- @field WaitForInputEventsProcessed fun( self : VirtualInputManager ) : void
--- @field PlaybackCompleted RBXScriptSignal @function( self : VirtualInputManager, additionalLuaState : string )
--- @field RecordingCompleted RBXScriptSignal @function( self : VirtualInputManager, result : string )
--}}} End of VirtualInputManager;

--{{{ VirtualUser
--- @class VirtualUser : Instance
--- @field Button1Down fun( self : VirtualUser, position : Vector2, camera : CFrame ) : void
--- @field Button1Up fun( self : VirtualUser, position : Vector2, camera : CFrame ) : void
--- @field Button2Down fun( self : VirtualUser, position : Vector2, camera : CFrame ) : void
--- @field Button2Up fun( self : VirtualUser, position : Vector2, camera : CFrame ) : void
--- @field CaptureController fun( self : VirtualUser ) : void
--- @field ClickButton1 fun( self : VirtualUser, position : Vector2, camera : CFrame ) : void
--- @field ClickButton2 fun( self : VirtualUser, position : Vector2, camera : CFrame ) : void
--- @field MoveMouse fun( self : VirtualUser, position : Vector2, camera : CFrame ) : void
--- @field SetKeyDown fun( self : VirtualUser, key : string ) : void
--- @field SetKeyUp fun( self : VirtualUser, key : string ) : void
--- @field StartRecording fun( self : VirtualUser ) : void
--- @field StopRecording fun( self : VirtualUser ) : string
--- @field TypeKey fun( self : VirtualUser, key : string ) : void
--}}} End of VirtualUser;

--{{{ VisibilityService
--- @class VisibilityService : Instance
--}}} End of VisibilityService;

--{{{ Visit
--- @class Visit : Instance
--}}} End of Visit;

--{{{ VoiceChannel
--- @class VoiceChannel : Instance
--- @field AddUserAsync fun( self : VoiceChannel, userId : number ) : VoiceSource
--}}} End of VoiceChannel;

--{{{ VoiceChatInternal
--- @class VoiceChatInternal : Instance
--- @field VoiceChatState Enum.VoiceChatState
--- @field GetAndClearCallFailureMessage fun( self : VoiceChatInternal ) : string
--- @field GetAudioProcessingSettings fun( self : VoiceChatInternal ) : Tuple
--- @field GetChannelId fun( self : VoiceChatInternal ) : string
--- @field GetGroupId fun( self : VoiceChatInternal ) : string
--- @field GetMicDevices fun( self : VoiceChatInternal ) : Tuple
--- @field GetParticipants fun( self : VoiceChatInternal ) : Array
--- @field GetSpeakerDevices fun( self : VoiceChatInternal ) : Tuple
--- @field GetVoiceChatApiVersion fun( self : VoiceChatInternal ) : number
--- @field GetVoiceChatAvailable fun( self : VoiceChatInternal ) : number
--- @field IsContextVoiceEnabled fun( self : VoiceChatInternal ) : boolean
--- @field IsPublishPaused fun( self : VoiceChatInternal ) : boolean
--- @field IsSubscribePaused fun( self : VoiceChatInternal, userId : number ) : boolean
--- @field JoinByGroupId fun( self : VoiceChatInternal, groupId : string, isMicMuted : boolean ) : boolean
--- @field JoinByGroupIdToken fun( self : VoiceChatInternal, groupId : string, isMicMuted : boolean ) : boolean
--- @field Leave fun( self : VoiceChatInternal ) : void
--- @field PublishPause fun( self : VoiceChatInternal, paused : boolean ) : boolean
--- @field SetMicDevice fun( self : VoiceChatInternal, micDeviceName : string, micDeviceGuid : string ) : void
--- @field SetSpeakerDevice fun( self : VoiceChatInternal, speakerDeviceName : string, speakerDeviceGuid : string ) : void
--- @field SubscribeBlock fun( self : VoiceChatInternal, userId : number ) : boolean
--- @field SubscribePause fun( self : VoiceChatInternal, userId : number, paused : boolean ) : boolean
--- @field SubscribePauseAll fun( self : VoiceChatInternal, paused : boolean ) : boolean
--- @field SubscribeRetry fun( self : VoiceChatInternal, userId : number ) : boolean
--- @field SubscribeUnblock fun( self : VoiceChatInternal, userId : number ) : boolean
--- @field IsVoiceEnabledForUserIdAsync fun( self : VoiceChatInternal, userId : number ) : boolean
--- @field ParticipantsStateChanged RBXScriptSignal @function( self : VoiceChatInternal, participantsLeft : Array, participantsJoined : Array, updatedStates : Array )
--- @field PlayerMicActivitySignalChange RBXScriptSignal @function( self : VoiceChatInternal, activityInfo : Dictionary )
--- @field StateChanged RBXScriptSignal @function( self : VoiceChatInternal, old : Enum.VoiceChatState, new : Enum.VoiceChatState )
--}}} End of VoiceChatInternal;

--{{{ VoiceChatService
--- @class VoiceChatService : Instance
--- @field EnableDefaultVoice boolean
--- @field VoiceChatEnabledForPlaceOnRcc boolean
--- @field VoiceChatEnabledForUniverseOnRcc boolean
--- @field IsVoiceEnabledForUserIdAsync fun( self : VoiceChatService, userId : number ) : boolean
--}}} End of VoiceChatService;

--{{{ WeldConstraint
--- @class WeldConstraint : Instance
--- @field Active boolean
--- @field Enabled boolean
--- @field Part0 BasePart
--- @field Part1 BasePart
--}}} End of WeldConstraint;

--}}} End of 𝓓𝓸𝓬𝓾𝓶𝓮𝓷𝓽𝓪𝓽𝓲𝓸𝓷;